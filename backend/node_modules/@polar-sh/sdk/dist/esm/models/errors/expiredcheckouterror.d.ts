import * as z from "zod";
import { PolarError } from "./polarerror.js";
export type ExpiredCheckoutErrorData = {
    error: "ExpiredCheckoutError";
    detail: string;
};
export declare class ExpiredCheckoutError extends PolarError {
    error: "ExpiredCheckoutError";
    detail: string;
    /** The original data that was passed to this error instance. */
    data$: ExpiredCheckoutErrorData;
    constructor(err: ExpiredCheckoutErrorData, httpMeta: {
        response: Response;
        request: Request;
        body: string;
    });
}
/** @internal */
export declare const ExpiredCheckoutError$inboundSchema: z.ZodType<ExpiredCheckoutError, z.ZodTypeDef, unknown>;
/** @internal */
export type ExpiredCheckoutError$Outbound = {
    error: "ExpiredCheckoutError";
    detail: string;
};
/** @internal */
export declare const ExpiredCheckoutError$outboundSchema: z.ZodType<ExpiredCheckoutError$Outbound, z.ZodTypeDef, ExpiredCheckoutError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExpiredCheckoutError$ {
    /** @deprecated use `ExpiredCheckoutError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExpiredCheckoutError, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExpiredCheckoutError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExpiredCheckoutError$Outbound, z.ZodTypeDef, ExpiredCheckoutError>;
    /** @deprecated use `ExpiredCheckoutError$Outbound` instead. */
    type Outbound = ExpiredCheckoutError$Outbound;
}
//# sourceMappingURL=expiredcheckouterror.d.ts.map