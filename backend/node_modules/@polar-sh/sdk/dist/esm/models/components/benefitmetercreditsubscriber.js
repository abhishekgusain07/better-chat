/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitMeterCreditSubscriberProperties$inboundSchema, BenefitMeterCreditSubscriberProperties$outboundSchema, } from "./benefitmetercreditsubscriberproperties.js";
import { Organization$inboundSchema, Organization$outboundSchema, } from "./organization.js";
/** @internal */
export const BenefitMeterCreditSubscriberMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/** @internal */
export const BenefitMeterCreditSubscriberMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitMeterCreditSubscriberMetadata$;
(function (BenefitMeterCreditSubscriberMetadata$) {
    /** @deprecated use `BenefitMeterCreditSubscriberMetadata$inboundSchema` instead. */
    BenefitMeterCreditSubscriberMetadata$.inboundSchema = BenefitMeterCreditSubscriberMetadata$inboundSchema;
    /** @deprecated use `BenefitMeterCreditSubscriberMetadata$outboundSchema` instead. */
    BenefitMeterCreditSubscriberMetadata$.outboundSchema = BenefitMeterCreditSubscriberMetadata$outboundSchema;
})(BenefitMeterCreditSubscriberMetadata$ || (BenefitMeterCreditSubscriberMetadata$ = {}));
export function benefitMeterCreditSubscriberMetadataToJSON(benefitMeterCreditSubscriberMetadata) {
    return JSON.stringify(BenefitMeterCreditSubscriberMetadata$outboundSchema.parse(benefitMeterCreditSubscriberMetadata));
}
export function benefitMeterCreditSubscriberMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitMeterCreditSubscriberMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMeterCreditSubscriberMetadata' from JSON`);
}
/** @internal */
export const BenefitMeterCreditSubscriber$inboundSchema = z.object({
    id: z.string(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    type: z.literal("meter_credit"),
    description: z.string(),
    selectable: z.boolean(),
    deletable: z.boolean(),
    organization_id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),
    organization: Organization$inboundSchema,
    properties: BenefitMeterCreditSubscriberProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "organization_id": "organizationId",
    });
});
/** @internal */
export const BenefitMeterCreditSubscriber$outboundSchema = z.object({
    id: z.string(),
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    type: z.literal("meter_credit"),
    description: z.string(),
    selectable: z.boolean(),
    deletable: z.boolean(),
    organizationId: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),
    organization: Organization$outboundSchema,
    properties: BenefitMeterCreditSubscriberProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitMeterCreditSubscriber$;
(function (BenefitMeterCreditSubscriber$) {
    /** @deprecated use `BenefitMeterCreditSubscriber$inboundSchema` instead. */
    BenefitMeterCreditSubscriber$.inboundSchema = BenefitMeterCreditSubscriber$inboundSchema;
    /** @deprecated use `BenefitMeterCreditSubscriber$outboundSchema` instead. */
    BenefitMeterCreditSubscriber$.outboundSchema = BenefitMeterCreditSubscriber$outboundSchema;
})(BenefitMeterCreditSubscriber$ || (BenefitMeterCreditSubscriber$ = {}));
export function benefitMeterCreditSubscriberToJSON(benefitMeterCreditSubscriber) {
    return JSON.stringify(BenefitMeterCreditSubscriber$outboundSchema.parse(benefitMeterCreditSubscriber));
}
export function benefitMeterCreditSubscriberFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitMeterCreditSubscriber$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMeterCreditSubscriber' from JSON`);
}
//# sourceMappingURL=benefitmetercreditsubscriber.js.map