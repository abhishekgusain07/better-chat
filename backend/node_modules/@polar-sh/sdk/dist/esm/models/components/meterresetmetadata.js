/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const MeterResetMetadata$inboundSchema = z.object({
    meter_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "meter_id": "meterId",
    });
});
/** @internal */
export const MeterResetMetadata$outboundSchema = z.object({
    meterId: z.string(),
}).transform((v) => {
    return remap$(v, {
        meterId: "meter_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MeterResetMetadata$;
(function (MeterResetMetadata$) {
    /** @deprecated use `MeterResetMetadata$inboundSchema` instead. */
    MeterResetMetadata$.inboundSchema = MeterResetMetadata$inboundSchema;
    /** @deprecated use `MeterResetMetadata$outboundSchema` instead. */
    MeterResetMetadata$.outboundSchema = MeterResetMetadata$outboundSchema;
})(MeterResetMetadata$ || (MeterResetMetadata$ = {}));
export function meterResetMetadataToJSON(meterResetMetadata) {
    return JSON.stringify(MeterResetMetadata$outboundSchema.parse(meterResetMetadata));
}
export function meterResetMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MeterResetMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MeterResetMetadata' from JSON`);
}
//# sourceMappingURL=meterresetmetadata.js.map