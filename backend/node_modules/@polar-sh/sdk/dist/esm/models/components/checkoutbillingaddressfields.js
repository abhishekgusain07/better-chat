/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BillingAddressFieldMode$inboundSchema, BillingAddressFieldMode$outboundSchema, } from "./billingaddressfieldmode.js";
/** @internal */
export const CheckoutBillingAddressFields$inboundSchema = z.object({
    country: BillingAddressFieldMode$inboundSchema,
    state: BillingAddressFieldMode$inboundSchema,
    city: BillingAddressFieldMode$inboundSchema,
    postal_code: BillingAddressFieldMode$inboundSchema,
    line1: BillingAddressFieldMode$inboundSchema,
    line2: BillingAddressFieldMode$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
export const CheckoutBillingAddressFields$outboundSchema = z.object({
    country: BillingAddressFieldMode$outboundSchema,
    state: BillingAddressFieldMode$outboundSchema,
    city: BillingAddressFieldMode$outboundSchema,
    postalCode: BillingAddressFieldMode$outboundSchema,
    line1: BillingAddressFieldMode$outboundSchema,
    line2: BillingAddressFieldMode$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CheckoutBillingAddressFields$;
(function (CheckoutBillingAddressFields$) {
    /** @deprecated use `CheckoutBillingAddressFields$inboundSchema` instead. */
    CheckoutBillingAddressFields$.inboundSchema = CheckoutBillingAddressFields$inboundSchema;
    /** @deprecated use `CheckoutBillingAddressFields$outboundSchema` instead. */
    CheckoutBillingAddressFields$.outboundSchema = CheckoutBillingAddressFields$outboundSchema;
})(CheckoutBillingAddressFields$ || (CheckoutBillingAddressFields$ = {}));
export function checkoutBillingAddressFieldsToJSON(checkoutBillingAddressFields) {
    return JSON.stringify(CheckoutBillingAddressFields$outboundSchema.parse(checkoutBillingAddressFields));
}
export function checkoutBillingAddressFieldsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CheckoutBillingAddressFields$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutBillingAddressFields' from JSON`);
}
//# sourceMappingURL=checkoutbillingaddressfields.js.map