/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ProductPriceMeter$inboundSchema = z.object({
    id: z.string(),
    name: z.string(),
});
/** @internal */
export const ProductPriceMeter$outboundSchema = z.object({
    id: z.string(),
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductPriceMeter$;
(function (ProductPriceMeter$) {
    /** @deprecated use `ProductPriceMeter$inboundSchema` instead. */
    ProductPriceMeter$.inboundSchema = ProductPriceMeter$inboundSchema;
    /** @deprecated use `ProductPriceMeter$outboundSchema` instead. */
    ProductPriceMeter$.outboundSchema = ProductPriceMeter$outboundSchema;
})(ProductPriceMeter$ || (ProductPriceMeter$ = {}));
export function productPriceMeterToJSON(productPriceMeter) {
    return JSON.stringify(ProductPriceMeter$outboundSchema.parse(productPriceMeter));
}
export function productPriceMeterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductPriceMeter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductPriceMeter' from JSON`);
}
//# sourceMappingURL=productpricemeter.js.map