import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitMeterCreditSubscriberProperties, BenefitMeterCreditSubscriberProperties$Outbound } from "./benefitmetercreditsubscriberproperties.js";
import { Organization, Organization$Outbound } from "./organization.js";
export type BenefitMeterCreditSubscriberMetadata = string | number | number | boolean;
export type BenefitMeterCreditSubscriber = {
    /**
     * The ID of the benefit.
     */
    id: string;
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    type: "meter_credit";
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    metadata: {
        [k: string]: string | number | number | boolean;
    };
    organization: Organization;
    /**
     * Properties available to subscribers for a benefit of type `meter_unit`.
     */
    properties: BenefitMeterCreditSubscriberProperties;
};
/** @internal */
export declare const BenefitMeterCreditSubscriberMetadata$inboundSchema: z.ZodType<BenefitMeterCreditSubscriberMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditSubscriberMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitMeterCreditSubscriberMetadata$outboundSchema: z.ZodType<BenefitMeterCreditSubscriberMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditSubscriberMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditSubscriberMetadata$ {
    /** @deprecated use `BenefitMeterCreditSubscriberMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditSubscriberMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditSubscriberMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditSubscriberMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditSubscriberMetadata>;
    /** @deprecated use `BenefitMeterCreditSubscriberMetadata$Outbound` instead. */
    type Outbound = BenefitMeterCreditSubscriberMetadata$Outbound;
}
export declare function benefitMeterCreditSubscriberMetadataToJSON(benefitMeterCreditSubscriberMetadata: BenefitMeterCreditSubscriberMetadata): string;
export declare function benefitMeterCreditSubscriberMetadataFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditSubscriberMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitMeterCreditSubscriber$inboundSchema: z.ZodType<BenefitMeterCreditSubscriber, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditSubscriber$Outbound = {
    id: string;
    created_at: string;
    modified_at: string | null;
    type: "meter_credit";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    metadata: {
        [k: string]: string | number | number | boolean;
    };
    organization: Organization$Outbound;
    properties: BenefitMeterCreditSubscriberProperties$Outbound;
};
/** @internal */
export declare const BenefitMeterCreditSubscriber$outboundSchema: z.ZodType<BenefitMeterCreditSubscriber$Outbound, z.ZodTypeDef, BenefitMeterCreditSubscriber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditSubscriber$ {
    /** @deprecated use `BenefitMeterCreditSubscriber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditSubscriber, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditSubscriber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditSubscriber$Outbound, z.ZodTypeDef, BenefitMeterCreditSubscriber>;
    /** @deprecated use `BenefitMeterCreditSubscriber$Outbound` instead. */
    type Outbound = BenefitMeterCreditSubscriber$Outbound;
}
export declare function benefitMeterCreditSubscriberToJSON(benefitMeterCreditSubscriber: BenefitMeterCreditSubscriber): string;
export declare function benefitMeterCreditSubscriberFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditSubscriber, SDKValidationError>;
//# sourceMappingURL=benefitmetercreditsubscriber.d.ts.map