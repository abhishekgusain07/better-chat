/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Address$inboundSchema, Address$outboundSchema, } from "./address.js";
/** @internal */
export const CustomerOrderUpdate$inboundSchema = z.object({
    billing_name: z.nullable(z.string()),
    billing_address: z.nullable(Address$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "billing_name": "billingName",
        "billing_address": "billingAddress",
    });
});
/** @internal */
export const CustomerOrderUpdate$outboundSchema = z.object({
    billingName: z.nullable(z.string()),
    billingAddress: z.nullable(Address$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        billingName: "billing_name",
        billingAddress: "billing_address",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerOrderUpdate$;
(function (CustomerOrderUpdate$) {
    /** @deprecated use `CustomerOrderUpdate$inboundSchema` instead. */
    CustomerOrderUpdate$.inboundSchema = CustomerOrderUpdate$inboundSchema;
    /** @deprecated use `CustomerOrderUpdate$outboundSchema` instead. */
    CustomerOrderUpdate$.outboundSchema = CustomerOrderUpdate$outboundSchema;
})(CustomerOrderUpdate$ || (CustomerOrderUpdate$ = {}));
export function customerOrderUpdateToJSON(customerOrderUpdate) {
    return JSON.stringify(CustomerOrderUpdate$outboundSchema.parse(customerOrderUpdate));
}
export function customerOrderUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerOrderUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerOrderUpdate' from JSON`);
}
//# sourceMappingURL=customerorderupdate.js.map