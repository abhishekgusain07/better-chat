import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerSubscriptionMeterMeter = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    /**
     * The name of the meter. Will be shown on customer's invoices and usage.
     */
    name: string;
};
/** @internal */
export declare const CustomerSubscriptionMeterMeter$inboundSchema: z.ZodType<CustomerSubscriptionMeterMeter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerSubscriptionMeterMeter$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
};
/** @internal */
export declare const CustomerSubscriptionMeterMeter$outboundSchema: z.ZodType<CustomerSubscriptionMeterMeter$Outbound, z.ZodTypeDef, CustomerSubscriptionMeterMeter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerSubscriptionMeterMeter$ {
    /** @deprecated use `CustomerSubscriptionMeterMeter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerSubscriptionMeterMeter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerSubscriptionMeterMeter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerSubscriptionMeterMeter$Outbound, z.ZodTypeDef, CustomerSubscriptionMeterMeter>;
    /** @deprecated use `CustomerSubscriptionMeterMeter$Outbound` instead. */
    type Outbound = CustomerSubscriptionMeterMeter$Outbound;
}
export declare function customerSubscriptionMeterMeterToJSON(customerSubscriptionMeterMeter: CustomerSubscriptionMeterMeter): string;
export declare function customerSubscriptionMeterMeterFromJSON(jsonString: string): SafeParseResult<CustomerSubscriptionMeterMeter, SDKValidationError>;
//# sourceMappingURL=customersubscriptionmetermeter.d.ts.map