/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrganizationNotificationSettings$inboundSchema = z.object({
    new_order: z.boolean(),
    new_subscription: z.boolean(),
}).transform((v) => {
    return remap$(v, {
        "new_order": "newOrder",
        "new_subscription": "newSubscription",
    });
});
/** @internal */
export const OrganizationNotificationSettings$outboundSchema = z.object({
    newOrder: z.boolean(),
    newSubscription: z.boolean(),
}).transform((v) => {
    return remap$(v, {
        newOrder: "new_order",
        newSubscription: "new_subscription",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationNotificationSettings$;
(function (OrganizationNotificationSettings$) {
    /** @deprecated use `OrganizationNotificationSettings$inboundSchema` instead. */
    OrganizationNotificationSettings$.inboundSchema = OrganizationNotificationSettings$inboundSchema;
    /** @deprecated use `OrganizationNotificationSettings$outboundSchema` instead. */
    OrganizationNotificationSettings$.outboundSchema = OrganizationNotificationSettings$outboundSchema;
})(OrganizationNotificationSettings$ || (OrganizationNotificationSettings$ = {}));
export function organizationNotificationSettingsToJSON(organizationNotificationSettings) {
    return JSON.stringify(OrganizationNotificationSettings$outboundSchema.parse(organizationNotificationSettings));
}
export function organizationNotificationSettingsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationNotificationSettings$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationNotificationSettings' from JSON`);
}
//# sourceMappingURL=organizationnotificationsettings.js.map