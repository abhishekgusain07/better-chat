/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { EventName$inboundSchema, EventName$outboundSchema, } from "./eventname.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListResourceEventName$inboundSchema = z.object({
    items: z.array(EventName$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResourceEventName$outboundSchema = z.object({
    items: z.array(EventName$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResourceEventName$;
(function (ListResourceEventName$) {
    /** @deprecated use `ListResourceEventName$inboundSchema` instead. */
    ListResourceEventName$.inboundSchema = ListResourceEventName$inboundSchema;
    /** @deprecated use `ListResourceEventName$outboundSchema` instead. */
    ListResourceEventName$.outboundSchema = ListResourceEventName$outboundSchema;
})(ListResourceEventName$ || (ListResourceEventName$ = {}));
export function listResourceEventNameToJSON(listResourceEventName) {
    return JSON.stringify(ListResourceEventName$outboundSchema.parse(listResourceEventName));
}
export function listResourceEventNameFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResourceEventName$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResourceEventName' from JSON`);
}
//# sourceMappingURL=listresourceeventname.js.map