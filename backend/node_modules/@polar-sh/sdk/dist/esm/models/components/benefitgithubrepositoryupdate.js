/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { BenefitGitHubRepositoryCreateProperties$inboundSchema, BenefitGitHubRepositoryCreateProperties$outboundSchema, } from "./benefitgithubrepositorycreateproperties.js";
/** @internal */
export const BenefitGitHubRepositoryUpdateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/** @internal */
export const BenefitGitHubRepositoryUpdateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGitHubRepositoryUpdateMetadata$;
(function (BenefitGitHubRepositoryUpdateMetadata$) {
    /** @deprecated use `BenefitGitHubRepositoryUpdateMetadata$inboundSchema` instead. */
    BenefitGitHubRepositoryUpdateMetadata$.inboundSchema = BenefitGitHubRepositoryUpdateMetadata$inboundSchema;
    /** @deprecated use `BenefitGitHubRepositoryUpdateMetadata$outboundSchema` instead. */
    BenefitGitHubRepositoryUpdateMetadata$.outboundSchema = BenefitGitHubRepositoryUpdateMetadata$outboundSchema;
})(BenefitGitHubRepositoryUpdateMetadata$ || (BenefitGitHubRepositoryUpdateMetadata$ = {}));
export function benefitGitHubRepositoryUpdateMetadataToJSON(benefitGitHubRepositoryUpdateMetadata) {
    return JSON.stringify(BenefitGitHubRepositoryUpdateMetadata$outboundSchema.parse(benefitGitHubRepositoryUpdateMetadata));
}
export function benefitGitHubRepositoryUpdateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGitHubRepositoryUpdateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGitHubRepositoryUpdateMetadata' from JSON`);
}
/** @internal */
export const BenefitGitHubRepositoryUpdate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.literal("github_repository"),
    properties: z.nullable(BenefitGitHubRepositoryCreateProperties$inboundSchema)
        .optional(),
});
/** @internal */
export const BenefitGitHubRepositoryUpdate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.literal("github_repository"),
    properties: z.nullable(BenefitGitHubRepositoryCreateProperties$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGitHubRepositoryUpdate$;
(function (BenefitGitHubRepositoryUpdate$) {
    /** @deprecated use `BenefitGitHubRepositoryUpdate$inboundSchema` instead. */
    BenefitGitHubRepositoryUpdate$.inboundSchema = BenefitGitHubRepositoryUpdate$inboundSchema;
    /** @deprecated use `BenefitGitHubRepositoryUpdate$outboundSchema` instead. */
    BenefitGitHubRepositoryUpdate$.outboundSchema = BenefitGitHubRepositoryUpdate$outboundSchema;
})(BenefitGitHubRepositoryUpdate$ || (BenefitGitHubRepositoryUpdate$ = {}));
export function benefitGitHubRepositoryUpdateToJSON(benefitGitHubRepositoryUpdate) {
    return JSON.stringify(BenefitGitHubRepositoryUpdate$outboundSchema.parse(benefitGitHubRepositoryUpdate));
}
export function benefitGitHubRepositoryUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGitHubRepositoryUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGitHubRepositoryUpdate' from JSON`);
}
//# sourceMappingURL=benefitgithubrepositoryupdate.js.map