/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitGrantMeterCreditProperties$inboundSchema = z.object({
    last_credited_meter_id: z.string(),
    last_credited_units: z.number().int(),
    last_credited_at: z.string(),
}).transform((v) => {
    return remap$(v, {
        "last_credited_meter_id": "lastCreditedMeterId",
        "last_credited_units": "lastCreditedUnits",
        "last_credited_at": "lastCreditedAt",
    });
});
/** @internal */
export const BenefitGrantMeterCreditProperties$outboundSchema = z.object({
    lastCreditedMeterId: z.string(),
    lastCreditedUnits: z.number().int(),
    lastCreditedAt: z.string(),
}).transform((v) => {
    return remap$(v, {
        lastCreditedMeterId: "last_credited_meter_id",
        lastCreditedUnits: "last_credited_units",
        lastCreditedAt: "last_credited_at",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGrantMeterCreditProperties$;
(function (BenefitGrantMeterCreditProperties$) {
    /** @deprecated use `BenefitGrantMeterCreditProperties$inboundSchema` instead. */
    BenefitGrantMeterCreditProperties$.inboundSchema = BenefitGrantMeterCreditProperties$inboundSchema;
    /** @deprecated use `BenefitGrantMeterCreditProperties$outboundSchema` instead. */
    BenefitGrantMeterCreditProperties$.outboundSchema = BenefitGrantMeterCreditProperties$outboundSchema;
})(BenefitGrantMeterCreditProperties$ || (BenefitGrantMeterCreditProperties$ = {}));
export function benefitGrantMeterCreditPropertiesToJSON(benefitGrantMeterCreditProperties) {
    return JSON.stringify(BenefitGrantMeterCreditProperties$outboundSchema.parse(benefitGrantMeterCreditProperties));
}
export function benefitGrantMeterCreditPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGrantMeterCreditProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGrantMeterCreditProperties' from JSON`);
}
//# sourceMappingURL=benefitgrantmetercreditproperties.js.map