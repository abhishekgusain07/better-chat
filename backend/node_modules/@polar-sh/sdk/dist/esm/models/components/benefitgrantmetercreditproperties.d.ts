import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type BenefitGrantMeterCreditProperties = {
    lastCreditedMeterId: string;
    lastCreditedUnits: number;
    lastCreditedAt: string;
};
/** @internal */
export declare const BenefitGrantMeterCreditProperties$inboundSchema: z.ZodType<BenefitGrantMeterCreditProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGrantMeterCreditProperties$Outbound = {
    last_credited_meter_id: string;
    last_credited_units: number;
    last_credited_at: string;
};
/** @internal */
export declare const BenefitGrantMeterCreditProperties$outboundSchema: z.ZodType<BenefitGrantMeterCreditProperties$Outbound, z.ZodTypeDef, BenefitGrantMeterCreditProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGrantMeterCreditProperties$ {
    /** @deprecated use `BenefitGrantMeterCreditProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGrantMeterCreditProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGrantMeterCreditProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGrantMeterCreditProperties$Outbound, z.ZodTypeDef, BenefitGrantMeterCreditProperties>;
    /** @deprecated use `BenefitGrantMeterCreditProperties$Outbound` instead. */
    type Outbound = BenefitGrantMeterCreditProperties$Outbound;
}
export declare function benefitGrantMeterCreditPropertiesToJSON(benefitGrantMeterCreditProperties: BenefitGrantMeterCreditProperties): string;
export declare function benefitGrantMeterCreditPropertiesFromJSON(jsonString: string): SafeParseResult<BenefitGrantMeterCreditProperties, SDKValidationError>;
//# sourceMappingURL=benefitgrantmetercreditproperties.d.ts.map