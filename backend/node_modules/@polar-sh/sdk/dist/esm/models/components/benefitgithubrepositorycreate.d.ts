import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitGitHubRepositoryCreateProperties, BenefitGitHubRepositoryCreateProperties$Outbound } from "./benefitgithubrepositorycreateproperties.js";
export type BenefitGitHubRepositoryCreateMetadata = string | number | number | boolean;
export type BenefitGitHubRepositoryCreate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A floating-point number
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    type: "github_repository";
    /**
     * The description of the benefit. Will be displayed on products having this benefit.
     */
    description: string;
    /**
     * The ID of the organization owning the benefit. **Required unless you use an organization token.**
     */
    organizationId?: string | null | undefined;
    /**
     * Properties to create a benefit of type `github_repository`.
     */
    properties: BenefitGitHubRepositoryCreateProperties;
};
/** @internal */
export declare const BenefitGitHubRepositoryCreateMetadata$inboundSchema: z.ZodType<BenefitGitHubRepositoryCreateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGitHubRepositoryCreateMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitGitHubRepositoryCreateMetadata$outboundSchema: z.ZodType<BenefitGitHubRepositoryCreateMetadata$Outbound, z.ZodTypeDef, BenefitGitHubRepositoryCreateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGitHubRepositoryCreateMetadata$ {
    /** @deprecated use `BenefitGitHubRepositoryCreateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGitHubRepositoryCreateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGitHubRepositoryCreateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGitHubRepositoryCreateMetadata$Outbound, z.ZodTypeDef, BenefitGitHubRepositoryCreateMetadata>;
    /** @deprecated use `BenefitGitHubRepositoryCreateMetadata$Outbound` instead. */
    type Outbound = BenefitGitHubRepositoryCreateMetadata$Outbound;
}
export declare function benefitGitHubRepositoryCreateMetadataToJSON(benefitGitHubRepositoryCreateMetadata: BenefitGitHubRepositoryCreateMetadata): string;
export declare function benefitGitHubRepositoryCreateMetadataFromJSON(jsonString: string): SafeParseResult<BenefitGitHubRepositoryCreateMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitGitHubRepositoryCreate$inboundSchema: z.ZodType<BenefitGitHubRepositoryCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGitHubRepositoryCreate$Outbound = {
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    type: "github_repository";
    description: string;
    organization_id?: string | null | undefined;
    properties: BenefitGitHubRepositoryCreateProperties$Outbound;
};
/** @internal */
export declare const BenefitGitHubRepositoryCreate$outboundSchema: z.ZodType<BenefitGitHubRepositoryCreate$Outbound, z.ZodTypeDef, BenefitGitHubRepositoryCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGitHubRepositoryCreate$ {
    /** @deprecated use `BenefitGitHubRepositoryCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGitHubRepositoryCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGitHubRepositoryCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGitHubRepositoryCreate$Outbound, z.ZodTypeDef, BenefitGitHubRepositoryCreate>;
    /** @deprecated use `BenefitGitHubRepositoryCreate$Outbound` instead. */
    type Outbound = BenefitGitHubRepositoryCreate$Outbound;
}
export declare function benefitGitHubRepositoryCreateToJSON(benefitGitHubRepositoryCreate: BenefitGitHubRepositoryCreate): string;
export declare function benefitGitHubRepositoryCreateFromJSON(jsonString: string): SafeParseResult<BenefitGitHubRepositoryCreate, SDKValidationError>;
//# sourceMappingURL=benefitgithubrepositorycreate.d.ts.map