import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Properties for a benefit of type `meter_unit`.
 */
export type BenefitMeterCreditProperties = {
    units: number;
    rollover: boolean;
    meterId: string;
};
/** @internal */
export declare const BenefitMeterCreditProperties$inboundSchema: z.ZodType<BenefitMeterCreditProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditProperties$Outbound = {
    units: number;
    rollover: boolean;
    meter_id: string;
};
/** @internal */
export declare const BenefitMeterCreditProperties$outboundSchema: z.ZodType<BenefitMeterCreditProperties$Outbound, z.ZodTypeDef, BenefitMeterCreditProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditProperties$ {
    /** @deprecated use `BenefitMeterCreditProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditProperties$Outbound, z.ZodTypeDef, BenefitMeterCreditProperties>;
    /** @deprecated use `BenefitMeterCreditProperties$Outbound` instead. */
    type Outbound = BenefitMeterCreditProperties$Outbound;
}
export declare function benefitMeterCreditPropertiesToJSON(benefitMeterCreditProperties: BenefitMeterCreditProperties): string;
export declare function benefitMeterCreditPropertiesFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditProperties, SDKValidationError>;
//# sourceMappingURL=benefitmetercreditproperties.d.ts.map