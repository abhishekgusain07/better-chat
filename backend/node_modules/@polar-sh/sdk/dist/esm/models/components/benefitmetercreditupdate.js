/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { BenefitMeterCreditCreateProperties$inboundSchema, BenefitMeterCreditCreateProperties$outboundSchema, } from "./benefitmetercreditcreateproperties.js";
/** @internal */
export const BenefitMeterCreditUpdateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/** @internal */
export const BenefitMeterCreditUpdateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitMeterCreditUpdateMetadata$;
(function (BenefitMeterCreditUpdateMetadata$) {
    /** @deprecated use `BenefitMeterCreditUpdateMetadata$inboundSchema` instead. */
    BenefitMeterCreditUpdateMetadata$.inboundSchema = BenefitMeterCreditUpdateMetadata$inboundSchema;
    /** @deprecated use `BenefitMeterCreditUpdateMetadata$outboundSchema` instead. */
    BenefitMeterCreditUpdateMetadata$.outboundSchema = BenefitMeterCreditUpdateMetadata$outboundSchema;
})(BenefitMeterCreditUpdateMetadata$ || (BenefitMeterCreditUpdateMetadata$ = {}));
export function benefitMeterCreditUpdateMetadataToJSON(benefitMeterCreditUpdateMetadata) {
    return JSON.stringify(BenefitMeterCreditUpdateMetadata$outboundSchema.parse(benefitMeterCreditUpdateMetadata));
}
export function benefitMeterCreditUpdateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitMeterCreditUpdateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMeterCreditUpdateMetadata' from JSON`);
}
/** @internal */
export const BenefitMeterCreditUpdate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.literal("meter_credit"),
    properties: z.nullable(BenefitMeterCreditCreateProperties$inboundSchema)
        .optional(),
});
/** @internal */
export const BenefitMeterCreditUpdate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.literal("meter_credit"),
    properties: z.nullable(BenefitMeterCreditCreateProperties$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitMeterCreditUpdate$;
(function (BenefitMeterCreditUpdate$) {
    /** @deprecated use `BenefitMeterCreditUpdate$inboundSchema` instead. */
    BenefitMeterCreditUpdate$.inboundSchema = BenefitMeterCreditUpdate$inboundSchema;
    /** @deprecated use `BenefitMeterCreditUpdate$outboundSchema` instead. */
    BenefitMeterCreditUpdate$.outboundSchema = BenefitMeterCreditUpdate$outboundSchema;
})(BenefitMeterCreditUpdate$ || (BenefitMeterCreditUpdate$ = {}));
export function benefitMeterCreditUpdateToJSON(benefitMeterCreditUpdate) {
    return JSON.stringify(BenefitMeterCreditUpdate$outboundSchema.parse(benefitMeterCreditUpdate));
}
export function benefitMeterCreditUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitMeterCreditUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMeterCreditUpdate' from JSON`);
}
//# sourceMappingURL=benefitmetercreditupdate.js.map