/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const SubscriptionUpdateDiscount$inboundSchema = z.object({
    discount_id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "discount_id": "discountId",
    });
});
/** @internal */
export const SubscriptionUpdateDiscount$outboundSchema = z.object({
    discountId: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        discountId: "discount_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriptionUpdateDiscount$;
(function (SubscriptionUpdateDiscount$) {
    /** @deprecated use `SubscriptionUpdateDiscount$inboundSchema` instead. */
    SubscriptionUpdateDiscount$.inboundSchema = SubscriptionUpdateDiscount$inboundSchema;
    /** @deprecated use `SubscriptionUpdateDiscount$outboundSchema` instead. */
    SubscriptionUpdateDiscount$.outboundSchema = SubscriptionUpdateDiscount$outboundSchema;
})(SubscriptionUpdateDiscount$ || (SubscriptionUpdateDiscount$ = {}));
export function subscriptionUpdateDiscountToJSON(subscriptionUpdateDiscount) {
    return JSON.stringify(SubscriptionUpdateDiscount$outboundSchema.parse(subscriptionUpdateDiscount));
}
export function subscriptionUpdateDiscountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriptionUpdateDiscount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionUpdateDiscount' from JSON`);
}
//# sourceMappingURL=subscriptionupdatediscount.js.map