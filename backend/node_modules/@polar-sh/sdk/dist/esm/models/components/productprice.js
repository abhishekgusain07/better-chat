/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ProductPriceCustom$inboundSchema, ProductPriceCustom$outboundSchema, } from "./productpricecustom.js";
import { ProductPriceFixed$inboundSchema, ProductPriceFixed$outboundSchema, } from "./productpricefixed.js";
import { ProductPriceFree$inboundSchema, ProductPriceFree$outboundSchema, } from "./productpricefree.js";
import { ProductPriceMeteredUnit$inboundSchema, ProductPriceMeteredUnit$outboundSchema, } from "./productpricemeteredunit.js";
/** @internal */
export const ProductPrice$inboundSchema = z.union([
    ProductPriceMeteredUnit$inboundSchema.and(z.object({ amount_type: z.literal("metered_unit") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
    ProductPriceCustom$inboundSchema.and(z.object({ amount_type: z.literal("custom") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
    ProductPriceFixed$inboundSchema.and(z.object({ amount_type: z.literal("fixed") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
    ProductPriceFree$inboundSchema.and(z.object({ amount_type: z.literal("free") }).transform((v) => ({
        amountType: v.amount_type,
    }))),
]);
/** @internal */
export const ProductPrice$outboundSchema = z.union([
    ProductPriceMeteredUnit$outboundSchema.and(z.object({ amountType: z.literal("metered_unit") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
    ProductPriceCustom$outboundSchema.and(z.object({ amountType: z.literal("custom") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
    ProductPriceFixed$outboundSchema.and(z.object({ amountType: z.literal("fixed") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
    ProductPriceFree$outboundSchema.and(z.object({ amountType: z.literal("free") }).transform((v) => ({
        amount_type: v.amountType,
    }))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductPrice$;
(function (ProductPrice$) {
    /** @deprecated use `ProductPrice$inboundSchema` instead. */
    ProductPrice$.inboundSchema = ProductPrice$inboundSchema;
    /** @deprecated use `ProductPrice$outboundSchema` instead. */
    ProductPrice$.outboundSchema = ProductPrice$outboundSchema;
})(ProductPrice$ || (ProductPrice$ = {}));
export function productPriceToJSON(productPrice) {
    return JSON.stringify(ProductPrice$outboundSchema.parse(productPrice));
}
export function productPriceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductPrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductPrice' from JSON`);
}
//# sourceMappingURL=productprice.js.map