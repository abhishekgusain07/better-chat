import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { WebhookEventType } from "./webhookeventtype.js";
import { WebhookFormat } from "./webhookformat.js";
/**
 * Schema to update a webhook endpoint.
 */
export type WebhookEndpointUpdate = {
    url?: string | null | undefined;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    secret?: string | null | undefined;
    format?: WebhookFormat | null | undefined;
    events?: Array<WebhookEventType> | null | undefined;
};
/** @internal */
export declare const WebhookEndpointUpdate$inboundSchema: z.ZodType<WebhookEndpointUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookEndpointUpdate$Outbound = {
    url?: string | null | undefined;
    secret?: string | null | undefined;
    format?: string | null | undefined;
    events?: Array<string> | null | undefined;
};
/** @internal */
export declare const WebhookEndpointUpdate$outboundSchema: z.ZodType<WebhookEndpointUpdate$Outbound, z.ZodTypeDef, WebhookEndpointUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookEndpointUpdate$ {
    /** @deprecated use `WebhookEndpointUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookEndpointUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookEndpointUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookEndpointUpdate$Outbound, z.ZodTypeDef, WebhookEndpointUpdate>;
    /** @deprecated use `WebhookEndpointUpdate$Outbound` instead. */
    type Outbound = WebhookEndpointUpdate$Outbound;
}
export declare function webhookEndpointUpdateToJSON(webhookEndpointUpdate: WebhookEndpointUpdate): string;
export declare function webhookEndpointUpdateFromJSON(jsonString: string): SafeParseResult<WebhookEndpointUpdate, SDKValidationError>;
//# sourceMappingURL=webhookendpointupdate.d.ts.map