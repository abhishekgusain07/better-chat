/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitMeterCreditCreateProperties$inboundSchema, BenefitMeterCreditCreateProperties$outboundSchema, } from "./benefitmetercreditcreateproperties.js";
/** @internal */
export const BenefitMeterCreditCreateMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/** @internal */
export const BenefitMeterCreditCreateMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitMeterCreditCreateMetadata$;
(function (BenefitMeterCreditCreateMetadata$) {
    /** @deprecated use `BenefitMeterCreditCreateMetadata$inboundSchema` instead. */
    BenefitMeterCreditCreateMetadata$.inboundSchema = BenefitMeterCreditCreateMetadata$inboundSchema;
    /** @deprecated use `BenefitMeterCreditCreateMetadata$outboundSchema` instead. */
    BenefitMeterCreditCreateMetadata$.outboundSchema = BenefitMeterCreditCreateMetadata$outboundSchema;
})(BenefitMeterCreditCreateMetadata$ || (BenefitMeterCreditCreateMetadata$ = {}));
export function benefitMeterCreditCreateMetadataToJSON(benefitMeterCreditCreateMetadata) {
    return JSON.stringify(BenefitMeterCreditCreateMetadata$outboundSchema.parse(benefitMeterCreditCreateMetadata));
}
export function benefitMeterCreditCreateMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitMeterCreditCreateMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMeterCreditCreateMetadata' from JSON`);
}
/** @internal */
export const BenefitMeterCreditCreate$inboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])).optional(),
    type: z.literal("meter_credit"),
    description: z.string(),
    organization_id: z.nullable(z.string()).optional(),
    properties: BenefitMeterCreditCreateProperties$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const BenefitMeterCreditCreate$outboundSchema = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])).optional(),
    type: z.literal("meter_credit"),
    description: z.string(),
    organizationId: z.nullable(z.string()).optional(),
    properties: BenefitMeterCreditCreateProperties$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitMeterCreditCreate$;
(function (BenefitMeterCreditCreate$) {
    /** @deprecated use `BenefitMeterCreditCreate$inboundSchema` instead. */
    BenefitMeterCreditCreate$.inboundSchema = BenefitMeterCreditCreate$inboundSchema;
    /** @deprecated use `BenefitMeterCreditCreate$outboundSchema` instead. */
    BenefitMeterCreditCreate$.outboundSchema = BenefitMeterCreditCreate$outboundSchema;
})(BenefitMeterCreditCreate$ || (BenefitMeterCreditCreate$ = {}));
export function benefitMeterCreditCreateToJSON(benefitMeterCreditCreate) {
    return JSON.stringify(BenefitMeterCreditCreate$outboundSchema.parse(benefitMeterCreditCreate));
}
export function benefitMeterCreditCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitMeterCreditCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMeterCreditCreate' from JSON`);
}
//# sourceMappingURL=benefitmetercreditcreate.js.map