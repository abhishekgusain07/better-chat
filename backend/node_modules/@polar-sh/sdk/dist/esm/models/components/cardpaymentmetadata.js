/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CardPaymentMetadata$inboundSchema = z.object({
    brand: z.string(),
    last4: z.string(),
});
/** @internal */
export const CardPaymentMetadata$outboundSchema = z.object({
    brand: z.string(),
    last4: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CardPaymentMetadata$;
(function (CardPaymentMetadata$) {
    /** @deprecated use `CardPaymentMetadata$inboundSchema` instead. */
    CardPaymentMetadata$.inboundSchema = CardPaymentMetadata$inboundSchema;
    /** @deprecated use `CardPaymentMetadata$outboundSchema` instead. */
    CardPaymentMetadata$.outboundSchema = CardPaymentMetadata$outboundSchema;
})(CardPaymentMetadata$ || (CardPaymentMetadata$ = {}));
export function cardPaymentMetadataToJSON(cardPaymentMetadata) {
    return JSON.stringify(CardPaymentMetadata$outboundSchema.parse(cardPaymentMetadata));
}
export function cardPaymentMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CardPaymentMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CardPaymentMetadata' from JSON`);
}
//# sourceMappingURL=cardpaymentmetadata.js.map