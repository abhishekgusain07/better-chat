/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerOrderPaymentConfirmation$inboundSchema = z.object({
    status: z.string(),
    client_secret: z.nullable(z.string()).optional(),
    error: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "client_secret": "clientSecret",
    });
});
/** @internal */
export const CustomerOrderPaymentConfirmation$outboundSchema = z.object({
    status: z.string(),
    clientSecret: z.nullable(z.string()).optional(),
    error: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        clientSecret: "client_secret",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerOrderPaymentConfirmation$;
(function (CustomerOrderPaymentConfirmation$) {
    /** @deprecated use `CustomerOrderPaymentConfirmation$inboundSchema` instead. */
    CustomerOrderPaymentConfirmation$.inboundSchema = CustomerOrderPaymentConfirmation$inboundSchema;
    /** @deprecated use `CustomerOrderPaymentConfirmation$outboundSchema` instead. */
    CustomerOrderPaymentConfirmation$.outboundSchema = CustomerOrderPaymentConfirmation$outboundSchema;
})(CustomerOrderPaymentConfirmation$ || (CustomerOrderPaymentConfirmation$ = {}));
export function customerOrderPaymentConfirmationToJSON(customerOrderPaymentConfirmation) {
    return JSON.stringify(CustomerOrderPaymentConfirmation$outboundSchema.parse(customerOrderPaymentConfirmation));
}
export function customerOrderPaymentConfirmationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerOrderPaymentConfirmation$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerOrderPaymentConfirmation' from JSON`);
}
//# sourceMappingURL=customerorderpaymentconfirmation.js.map