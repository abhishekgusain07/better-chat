import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const WebhookEventType: {
    readonly CheckoutCreated: "checkout.created";
    readonly CheckoutUpdated: "checkout.updated";
    readonly CustomerCreated: "customer.created";
    readonly CustomerUpdated: "customer.updated";
    readonly CustomerDeleted: "customer.deleted";
    readonly CustomerStateChanged: "customer.state_changed";
    readonly OrderCreated: "order.created";
    readonly OrderUpdated: "order.updated";
    readonly OrderPaid: "order.paid";
    readonly OrderRefunded: "order.refunded";
    readonly SubscriptionCreated: "subscription.created";
    readonly SubscriptionUpdated: "subscription.updated";
    readonly SubscriptionActive: "subscription.active";
    readonly SubscriptionCanceled: "subscription.canceled";
    readonly SubscriptionUncanceled: "subscription.uncanceled";
    readonly SubscriptionRevoked: "subscription.revoked";
    readonly RefundCreated: "refund.created";
    readonly RefundUpdated: "refund.updated";
    readonly ProductCreated: "product.created";
    readonly ProductUpdated: "product.updated";
    readonly BenefitCreated: "benefit.created";
    readonly BenefitUpdated: "benefit.updated";
    readonly BenefitGrantCreated: "benefit_grant.created";
    readonly BenefitGrantCycled: "benefit_grant.cycled";
    readonly BenefitGrantUpdated: "benefit_grant.updated";
    readonly BenefitGrantRevoked: "benefit_grant.revoked";
    readonly OrganizationUpdated: "organization.updated";
};
export type WebhookEventType = ClosedEnum<typeof WebhookEventType>;
/** @internal */
export declare const WebhookEventType$inboundSchema: z.ZodNativeEnum<typeof WebhookEventType>;
/** @internal */
export declare const WebhookEventType$outboundSchema: z.ZodNativeEnum<typeof WebhookEventType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookEventType$ {
    /** @deprecated use `WebhookEventType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly CheckoutCreated: "checkout.created";
        readonly CheckoutUpdated: "checkout.updated";
        readonly CustomerCreated: "customer.created";
        readonly CustomerUpdated: "customer.updated";
        readonly CustomerDeleted: "customer.deleted";
        readonly CustomerStateChanged: "customer.state_changed";
        readonly OrderCreated: "order.created";
        readonly OrderUpdated: "order.updated";
        readonly OrderPaid: "order.paid";
        readonly OrderRefunded: "order.refunded";
        readonly SubscriptionCreated: "subscription.created";
        readonly SubscriptionUpdated: "subscription.updated";
        readonly SubscriptionActive: "subscription.active";
        readonly SubscriptionCanceled: "subscription.canceled";
        readonly SubscriptionUncanceled: "subscription.uncanceled";
        readonly SubscriptionRevoked: "subscription.revoked";
        readonly RefundCreated: "refund.created";
        readonly RefundUpdated: "refund.updated";
        readonly ProductCreated: "product.created";
        readonly ProductUpdated: "product.updated";
        readonly BenefitCreated: "benefit.created";
        readonly BenefitUpdated: "benefit.updated";
        readonly BenefitGrantCreated: "benefit_grant.created";
        readonly BenefitGrantCycled: "benefit_grant.cycled";
        readonly BenefitGrantUpdated: "benefit_grant.updated";
        readonly BenefitGrantRevoked: "benefit_grant.revoked";
        readonly OrganizationUpdated: "organization.updated";
    }>;
    /** @deprecated use `WebhookEventType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly CheckoutCreated: "checkout.created";
        readonly CheckoutUpdated: "checkout.updated";
        readonly CustomerCreated: "customer.created";
        readonly CustomerUpdated: "customer.updated";
        readonly CustomerDeleted: "customer.deleted";
        readonly CustomerStateChanged: "customer.state_changed";
        readonly OrderCreated: "order.created";
        readonly OrderUpdated: "order.updated";
        readonly OrderPaid: "order.paid";
        readonly OrderRefunded: "order.refunded";
        readonly SubscriptionCreated: "subscription.created";
        readonly SubscriptionUpdated: "subscription.updated";
        readonly SubscriptionActive: "subscription.active";
        readonly SubscriptionCanceled: "subscription.canceled";
        readonly SubscriptionUncanceled: "subscription.uncanceled";
        readonly SubscriptionRevoked: "subscription.revoked";
        readonly RefundCreated: "refund.created";
        readonly RefundUpdated: "refund.updated";
        readonly ProductCreated: "product.created";
        readonly ProductUpdated: "product.updated";
        readonly BenefitCreated: "benefit.created";
        readonly BenefitUpdated: "benefit.updated";
        readonly BenefitGrantCreated: "benefit_grant.created";
        readonly BenefitGrantCycled: "benefit_grant.cycled";
        readonly BenefitGrantUpdated: "benefit_grant.updated";
        readonly BenefitGrantRevoked: "benefit_grant.revoked";
        readonly OrganizationUpdated: "organization.updated";
    }>;
}
//# sourceMappingURL=webhookeventtype.d.ts.map