import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { OrganizationDetails, OrganizationDetails$Outbound } from "./organizationdetails.js";
import { OrganizationFeatureSettings, OrganizationFeatureSettings$Outbound } from "./organizationfeaturesettings.js";
import { OrganizationNotificationSettings, OrganizationNotificationSettings$Outbound } from "./organizationnotificationsettings.js";
import { OrganizationSocialLink, OrganizationSocialLink$Outbound } from "./organizationsociallink.js";
import { OrganizationSubscriptionSettings, OrganizationSubscriptionSettings$Outbound } from "./organizationsubscriptionsettings.js";
export type OrganizationUpdate = {
    name?: string | null | undefined;
    avatarUrl?: string | null | undefined;
    /**
     * Public support email.
     */
    email?: string | null | undefined;
    /**
     * Official website of the organization.
     */
    website?: string | null | undefined;
    /**
     * Links to social profiles.
     */
    socials?: Array<OrganizationSocialLink> | null | undefined;
    /**
     * Additional, private, business details Polar needs about active organizations for compliance (KYC).
     */
    details?: OrganizationDetails | null | undefined;
    featureSettings?: OrganizationFeatureSettings | null | undefined;
    subscriptionSettings?: OrganizationSubscriptionSettings | null | undefined;
    notificationSettings?: OrganizationNotificationSettings | null | undefined;
};
/** @internal */
export declare const OrganizationUpdate$inboundSchema: z.ZodType<OrganizationUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type OrganizationUpdate$Outbound = {
    name?: string | null | undefined;
    avatar_url?: string | null | undefined;
    email?: string | null | undefined;
    website?: string | null | undefined;
    socials?: Array<OrganizationSocialLink$Outbound> | null | undefined;
    details?: OrganizationDetails$Outbound | null | undefined;
    feature_settings?: OrganizationFeatureSettings$Outbound | null | undefined;
    subscription_settings?: OrganizationSubscriptionSettings$Outbound | null | undefined;
    notification_settings?: OrganizationNotificationSettings$Outbound | null | undefined;
};
/** @internal */
export declare const OrganizationUpdate$outboundSchema: z.ZodType<OrganizationUpdate$Outbound, z.ZodTypeDef, OrganizationUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrganizationUpdate$ {
    /** @deprecated use `OrganizationUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrganizationUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrganizationUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrganizationUpdate$Outbound, z.ZodTypeDef, OrganizationUpdate>;
    /** @deprecated use `OrganizationUpdate$Outbound` instead. */
    type Outbound = OrganizationUpdate$Outbound;
}
export declare function organizationUpdateToJSON(organizationUpdate: OrganizationUpdate): string;
export declare function organizationUpdateFromJSON(jsonString: string): SafeParseResult<OrganizationUpdate, SDKValidationError>;
//# sourceMappingURL=organizationupdate.d.ts.map