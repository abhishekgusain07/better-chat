/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { WebhookEventType$inboundSchema, WebhookEventType$outboundSchema, } from "./webhookeventtype.js";
import { WebhookFormat$inboundSchema, WebhookFormat$outboundSchema, } from "./webhookformat.js";
/** @internal */
export const WebhookEndpointCreate$inboundSchema = z.object({
    url: z.string(),
    secret: z.nullable(z.string()).optional(),
    format: WebhookFormat$inboundSchema,
    events: z.array(WebhookEventType$inboundSchema),
    organization_id: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const WebhookEndpointCreate$outboundSchema = z.object({
    url: z.string(),
    secret: z.nullable(z.string()).optional(),
    format: WebhookFormat$outboundSchema,
    events: z.array(WebhookEventType$outboundSchema),
    organizationId: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookEndpointCreate$;
(function (WebhookEndpointCreate$) {
    /** @deprecated use `WebhookEndpointCreate$inboundSchema` instead. */
    WebhookEndpointCreate$.inboundSchema = WebhookEndpointCreate$inboundSchema;
    /** @deprecated use `WebhookEndpointCreate$outboundSchema` instead. */
    WebhookEndpointCreate$.outboundSchema = WebhookEndpointCreate$outboundSchema;
})(WebhookEndpointCreate$ || (WebhookEndpointCreate$ = {}));
export function webhookEndpointCreateToJSON(webhookEndpointCreate) {
    return JSON.stringify(WebhookEndpointCreate$outboundSchema.parse(webhookEndpointCreate));
}
export function webhookEndpointCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookEndpointCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookEndpointCreate' from JSON`);
}
//# sourceMappingURL=webhookendpointcreate.js.map