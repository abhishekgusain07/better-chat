/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const PaymentMethodCardMetadata$inboundSchema = z.object({
    brand: z.string(),
    last4: z.string(),
    exp_month: z.number().int(),
    exp_year: z.number().int(),
    wallet: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "exp_month": "expMonth",
        "exp_year": "expYear",
    });
});
/** @internal */
export const PaymentMethodCardMetadata$outboundSchema = z.object({
    brand: z.string(),
    last4: z.string(),
    expMonth: z.number().int(),
    expYear: z.number().int(),
    wallet: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        expMonth: "exp_month",
        expYear: "exp_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PaymentMethodCardMetadata$;
(function (PaymentMethodCardMetadata$) {
    /** @deprecated use `PaymentMethodCardMetadata$inboundSchema` instead. */
    PaymentMethodCardMetadata$.inboundSchema = PaymentMethodCardMetadata$inboundSchema;
    /** @deprecated use `PaymentMethodCardMetadata$outboundSchema` instead. */
    PaymentMethodCardMetadata$.outboundSchema = PaymentMethodCardMetadata$outboundSchema;
})(PaymentMethodCardMetadata$ || (PaymentMethodCardMetadata$ = {}));
export function paymentMethodCardMetadataToJSON(paymentMethodCardMetadata) {
    return JSON.stringify(PaymentMethodCardMetadata$outboundSchema.parse(paymentMethodCardMetadata));
}
export function paymentMethodCardMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PaymentMethodCardMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentMethodCardMetadata' from JSON`);
}
//# sourceMappingURL=paymentmethodcardmetadata.js.map