/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
import { Payment$inboundSchema, Payment$outboundSchema, } from "./payment.js";
/** @internal */
export const ListResource$inboundSchema = z.object({
    items: z.array(Payment$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListResource$outboundSchema = z.object({
    items: z.array(Payment$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListResource$;
(function (ListResource$) {
    /** @deprecated use `ListResource$inboundSchema` instead. */
    ListResource$.inboundSchema = ListResource$inboundSchema;
    /** @deprecated use `ListResource$outboundSchema` instead. */
    ListResource$.outboundSchema = ListResource$outboundSchema;
})(ListResource$ || (ListResource$ = {}));
export function listResourceToJSON(listResource) {
    return JSON.stringify(ListResource$outboundSchema.parse(listResource));
}
export function listResourceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListResource$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListResource' from JSON`);
}
//# sourceMappingURL=listresource.js.map