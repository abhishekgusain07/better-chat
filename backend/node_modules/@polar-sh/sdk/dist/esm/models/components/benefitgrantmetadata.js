/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BenefitType$inboundSchema, BenefitType$outboundSchema, } from "./benefittype.js";
/** @internal */
export const BenefitGrantMetadata$inboundSchema = z.object({
    benefit_id: z.string(),
    benefit_grant_id: z.string(),
    benefit_type: BenefitType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "benefit_id": "benefitId",
        "benefit_grant_id": "benefitGrantId",
        "benefit_type": "benefitType",
    });
});
/** @internal */
export const BenefitGrantMetadata$outboundSchema = z.object({
    benefitId: z.string(),
    benefitGrantId: z.string(),
    benefitType: BenefitType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        benefitId: "benefit_id",
        benefitGrantId: "benefit_grant_id",
        benefitType: "benefit_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGrantMetadata$;
(function (BenefitGrantMetadata$) {
    /** @deprecated use `BenefitGrantMetadata$inboundSchema` instead. */
    BenefitGrantMetadata$.inboundSchema = BenefitGrantMetadata$inboundSchema;
    /** @deprecated use `BenefitGrantMetadata$outboundSchema` instead. */
    BenefitGrantMetadata$.outboundSchema = BenefitGrantMetadata$outboundSchema;
})(BenefitGrantMetadata$ || (BenefitGrantMetadata$ = {}));
export function benefitGrantMetadataToJSON(benefitGrantMetadata) {
    return JSON.stringify(BenefitGrantMetadata$outboundSchema.parse(benefitGrantMetadata));
}
export function benefitGrantMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGrantMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGrantMetadata' from JSON`);
}
//# sourceMappingURL=benefitgrantmetadata.js.map