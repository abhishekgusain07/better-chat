/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const BenefitGrantError$inboundSchema = z.object({
    message: z.string(),
    type: z.string(),
    timestamp: z.string(),
});
/** @internal */
export const BenefitGrantError$outboundSchema = z.object({
    message: z.string(),
    type: z.string(),
    timestamp: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BenefitGrantError$;
(function (BenefitGrantError$) {
    /** @deprecated use `BenefitGrantError$inboundSchema` instead. */
    BenefitGrantError$.inboundSchema = BenefitGrantError$inboundSchema;
    /** @deprecated use `BenefitGrantError$outboundSchema` instead. */
    BenefitGrantError$.outboundSchema = BenefitGrantError$outboundSchema;
})(BenefitGrantError$ || (BenefitGrantError$ = {}));
export function benefitGrantErrorToJSON(benefitGrantError) {
    return JSON.stringify(BenefitGrantError$outboundSchema.parse(benefitGrantError));
}
export function benefitGrantErrorFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BenefitGrantError$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGrantError' from JSON`);
}
//# sourceMappingURL=benefitgranterror.js.map