/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { OrderUpdate$inboundSchema, OrderUpdate$outboundSchema, } from "../components/orderupdate.js";
/** @internal */
export const OrdersUpdateRequest$inboundSchema = z.object({
    id: z.string(),
    OrderUpdate: OrderUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "OrderUpdate": "orderUpdate",
    });
});
/** @internal */
export const OrdersUpdateRequest$outboundSchema = z.object({
    id: z.string(),
    orderUpdate: OrderUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        orderUpdate: "OrderUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersUpdateRequest$;
(function (OrdersUpdateRequest$) {
    /** @deprecated use `OrdersUpdateRequest$inboundSchema` instead. */
    OrdersUpdateRequest$.inboundSchema = OrdersUpdateRequest$inboundSchema;
    /** @deprecated use `OrdersUpdateRequest$outboundSchema` instead. */
    OrdersUpdateRequest$.outboundSchema = OrdersUpdateRequest$outboundSchema;
})(OrdersUpdateRequest$ || (OrdersUpdateRequest$ = {}));
export function ordersUpdateRequestToJSON(ordersUpdateRequest) {
    return JSON.stringify(OrdersUpdateRequest$outboundSchema.parse(ordersUpdateRequest));
}
export function ordersUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersUpdateRequest' from JSON`);
}
//# sourceMappingURL=ordersupdate.js.map