/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceWebhookEndpoint$inboundSchema, ListResourceWebhookEndpoint$outboundSchema, } from "../components/listresourcewebhookendpoint.js";
/** @internal */
export const QueryParamOrganizationId$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const QueryParamOrganizationId$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryParamOrganizationId$;
(function (QueryParamOrganizationId$) {
    /** @deprecated use `QueryParamOrganizationId$inboundSchema` instead. */
    QueryParamOrganizationId$.inboundSchema = QueryParamOrganizationId$inboundSchema;
    /** @deprecated use `QueryParamOrganizationId$outboundSchema` instead. */
    QueryParamOrganizationId$.outboundSchema = QueryParamOrganizationId$outboundSchema;
})(QueryParamOrganizationId$ || (QueryParamOrganizationId$ = {}));
export function queryParamOrganizationIdToJSON(queryParamOrganizationId) {
    return JSON.stringify(QueryParamOrganizationId$outboundSchema.parse(queryParamOrganizationId));
}
export function queryParamOrganizationIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryParamOrganizationId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamOrganizationId' from JSON`);
}
/** @internal */
export const WebhooksListWebhookEndpointsRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
export const WebhooksListWebhookEndpointsRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksListWebhookEndpointsRequest$;
(function (WebhooksListWebhookEndpointsRequest$) {
    /** @deprecated use `WebhooksListWebhookEndpointsRequest$inboundSchema` instead. */
    WebhooksListWebhookEndpointsRequest$.inboundSchema = WebhooksListWebhookEndpointsRequest$inboundSchema;
    /** @deprecated use `WebhooksListWebhookEndpointsRequest$outboundSchema` instead. */
    WebhooksListWebhookEndpointsRequest$.outboundSchema = WebhooksListWebhookEndpointsRequest$outboundSchema;
})(WebhooksListWebhookEndpointsRequest$ || (WebhooksListWebhookEndpointsRequest$ = {}));
export function webhooksListWebhookEndpointsRequestToJSON(webhooksListWebhookEndpointsRequest) {
    return JSON.stringify(WebhooksListWebhookEndpointsRequest$outboundSchema.parse(webhooksListWebhookEndpointsRequest));
}
export function webhooksListWebhookEndpointsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksListWebhookEndpointsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksListWebhookEndpointsRequest' from JSON`);
}
/** @internal */
export const WebhooksListWebhookEndpointsResponse$inboundSchema = z.object({
    Result: ListResourceWebhookEndpoint$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const WebhooksListWebhookEndpointsResponse$outboundSchema = z.object({
    result: ListResourceWebhookEndpoint$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksListWebhookEndpointsResponse$;
(function (WebhooksListWebhookEndpointsResponse$) {
    /** @deprecated use `WebhooksListWebhookEndpointsResponse$inboundSchema` instead. */
    WebhooksListWebhookEndpointsResponse$.inboundSchema = WebhooksListWebhookEndpointsResponse$inboundSchema;
    /** @deprecated use `WebhooksListWebhookEndpointsResponse$outboundSchema` instead. */
    WebhooksListWebhookEndpointsResponse$.outboundSchema = WebhooksListWebhookEndpointsResponse$outboundSchema;
})(WebhooksListWebhookEndpointsResponse$ || (WebhooksListWebhookEndpointsResponse$ = {}));
export function webhooksListWebhookEndpointsResponseToJSON(webhooksListWebhookEndpointsResponse) {
    return JSON.stringify(WebhooksListWebhookEndpointsResponse$outboundSchema.parse(webhooksListWebhookEndpointsResponse));
}
export function webhooksListWebhookEndpointsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksListWebhookEndpointsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksListWebhookEndpointsResponse' from JSON`);
}
//# sourceMappingURL=webhookslistwebhookendpoints.js.map