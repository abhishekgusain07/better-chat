/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const WebhooksRedeliverWebhookEventRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const WebhooksRedeliverWebhookEventRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksRedeliverWebhookEventRequest$;
(function (WebhooksRedeliverWebhookEventRequest$) {
    /** @deprecated use `WebhooksRedeliverWebhookEventRequest$inboundSchema` instead. */
    WebhooksRedeliverWebhookEventRequest$.inboundSchema = WebhooksRedeliverWebhookEventRequest$inboundSchema;
    /** @deprecated use `WebhooksRedeliverWebhookEventRequest$outboundSchema` instead. */
    WebhooksRedeliverWebhookEventRequest$.outboundSchema = WebhooksRedeliverWebhookEventRequest$outboundSchema;
})(WebhooksRedeliverWebhookEventRequest$ || (WebhooksRedeliverWebhookEventRequest$ = {}));
export function webhooksRedeliverWebhookEventRequestToJSON(webhooksRedeliverWebhookEventRequest) {
    return JSON.stringify(WebhooksRedeliverWebhookEventRequest$outboundSchema.parse(webhooksRedeliverWebhookEventRequest));
}
export function webhooksRedeliverWebhookEventRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksRedeliverWebhookEventRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksRedeliverWebhookEventRequest' from JSON`);
}
//# sourceMappingURL=webhooksredeliverwebhookevent.js.map