import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalCustomerMetersGetSecurity = {
    customerSession: string;
};
export type CustomerPortalCustomerMetersGetRequest = {
    /**
     * The customer meter ID.
     */
    id: string;
};
/** @internal */
export declare const CustomerPortalCustomerMetersGetSecurity$inboundSchema: z.ZodType<CustomerPortalCustomerMetersGetSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomerMetersGetSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalCustomerMetersGetSecurity$outboundSchema: z.ZodType<CustomerPortalCustomerMetersGetSecurity$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersGetSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomerMetersGetSecurity$ {
    /** @deprecated use `CustomerPortalCustomerMetersGetSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomerMetersGetSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomerMetersGetSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomerMetersGetSecurity$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersGetSecurity>;
    /** @deprecated use `CustomerPortalCustomerMetersGetSecurity$Outbound` instead. */
    type Outbound = CustomerPortalCustomerMetersGetSecurity$Outbound;
}
export declare function customerPortalCustomerMetersGetSecurityToJSON(customerPortalCustomerMetersGetSecurity: CustomerPortalCustomerMetersGetSecurity): string;
export declare function customerPortalCustomerMetersGetSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomerMetersGetSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalCustomerMetersGetRequest$inboundSchema: z.ZodType<CustomerPortalCustomerMetersGetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomerMetersGetRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const CustomerPortalCustomerMetersGetRequest$outboundSchema: z.ZodType<CustomerPortalCustomerMetersGetRequest$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersGetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomerMetersGetRequest$ {
    /** @deprecated use `CustomerPortalCustomerMetersGetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomerMetersGetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomerMetersGetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomerMetersGetRequest$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersGetRequest>;
    /** @deprecated use `CustomerPortalCustomerMetersGetRequest$Outbound` instead. */
    type Outbound = CustomerPortalCustomerMetersGetRequest$Outbound;
}
export declare function customerPortalCustomerMetersGetRequestToJSON(customerPortalCustomerMetersGetRequest: CustomerPortalCustomerMetersGetRequest): string;
export declare function customerPortalCustomerMetersGetRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomerMetersGetRequest, SDKValidationError>;
//# sourceMappingURL=customerportalcustomermetersget.d.ts.map