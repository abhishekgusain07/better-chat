/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceCustomerPaymentMethod$inboundSchema, ListResourceCustomerPaymentMethod$outboundSchema, } from "../components/listresourcecustomerpaymentmethod.js";
/** @internal */
export const CustomerPortalCustomersListPaymentMethodsSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalCustomersListPaymentMethodsSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomersListPaymentMethodsSecurity$;
(function (CustomerPortalCustomersListPaymentMethodsSecurity$) {
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsSecurity$inboundSchema` instead. */
    CustomerPortalCustomersListPaymentMethodsSecurity$.inboundSchema = CustomerPortalCustomersListPaymentMethodsSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsSecurity$outboundSchema` instead. */
    CustomerPortalCustomersListPaymentMethodsSecurity$.outboundSchema = CustomerPortalCustomersListPaymentMethodsSecurity$outboundSchema;
})(CustomerPortalCustomersListPaymentMethodsSecurity$ || (CustomerPortalCustomersListPaymentMethodsSecurity$ = {}));
export function customerPortalCustomersListPaymentMethodsSecurityToJSON(customerPortalCustomersListPaymentMethodsSecurity) {
    return JSON.stringify(CustomerPortalCustomersListPaymentMethodsSecurity$outboundSchema.parse(customerPortalCustomersListPaymentMethodsSecurity));
}
export function customerPortalCustomersListPaymentMethodsSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomersListPaymentMethodsSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomersListPaymentMethodsSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalCustomersListPaymentMethodsRequest$inboundSchema = z.object({
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
});
/** @internal */
export const CustomerPortalCustomersListPaymentMethodsRequest$outboundSchema = z.object({
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomersListPaymentMethodsRequest$;
(function (CustomerPortalCustomersListPaymentMethodsRequest$) {
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsRequest$inboundSchema` instead. */
    CustomerPortalCustomersListPaymentMethodsRequest$.inboundSchema = CustomerPortalCustomersListPaymentMethodsRequest$inboundSchema;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsRequest$outboundSchema` instead. */
    CustomerPortalCustomersListPaymentMethodsRequest$.outboundSchema = CustomerPortalCustomersListPaymentMethodsRequest$outboundSchema;
})(CustomerPortalCustomersListPaymentMethodsRequest$ || (CustomerPortalCustomersListPaymentMethodsRequest$ = {}));
export function customerPortalCustomersListPaymentMethodsRequestToJSON(customerPortalCustomersListPaymentMethodsRequest) {
    return JSON.stringify(CustomerPortalCustomersListPaymentMethodsRequest$outboundSchema.parse(customerPortalCustomersListPaymentMethodsRequest));
}
export function customerPortalCustomersListPaymentMethodsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomersListPaymentMethodsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomersListPaymentMethodsRequest' from JSON`);
}
/** @internal */
export const CustomerPortalCustomersListPaymentMethodsResponse$inboundSchema = z.object({
    Result: ListResourceCustomerPaymentMethod$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const CustomerPortalCustomersListPaymentMethodsResponse$outboundSchema = z.object({
    result: ListResourceCustomerPaymentMethod$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomersListPaymentMethodsResponse$;
(function (CustomerPortalCustomersListPaymentMethodsResponse$) {
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsResponse$inboundSchema` instead. */
    CustomerPortalCustomersListPaymentMethodsResponse$.inboundSchema = CustomerPortalCustomersListPaymentMethodsResponse$inboundSchema;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsResponse$outboundSchema` instead. */
    CustomerPortalCustomersListPaymentMethodsResponse$.outboundSchema = CustomerPortalCustomersListPaymentMethodsResponse$outboundSchema;
})(CustomerPortalCustomersListPaymentMethodsResponse$ || (CustomerPortalCustomersListPaymentMethodsResponse$ = {}));
export function customerPortalCustomersListPaymentMethodsResponseToJSON(customerPortalCustomersListPaymentMethodsResponse) {
    return JSON.stringify(CustomerPortalCustomersListPaymentMethodsResponse$outboundSchema.parse(customerPortalCustomersListPaymentMethodsResponse));
}
export function customerPortalCustomersListPaymentMethodsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomersListPaymentMethodsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomersListPaymentMethodsResponse' from JSON`);
}
//# sourceMappingURL=customerportalcustomerslistpaymentmethods.js.map