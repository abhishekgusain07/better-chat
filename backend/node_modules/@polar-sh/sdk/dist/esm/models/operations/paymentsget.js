/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const PaymentsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const PaymentsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PaymentsGetRequest$;
(function (PaymentsGetRequest$) {
    /** @deprecated use `PaymentsGetRequest$inboundSchema` instead. */
    PaymentsGetRequest$.inboundSchema = PaymentsGetRequest$inboundSchema;
    /** @deprecated use `PaymentsGetRequest$outboundSchema` instead. */
    PaymentsGetRequest$.outboundSchema = PaymentsGetRequest$outboundSchema;
})(PaymentsGetRequest$ || (PaymentsGetRequest$ = {}));
export function paymentsGetRequestToJSON(paymentsGetRequest) {
    return JSON.stringify(PaymentsGetRequest$outboundSchema.parse(paymentsGetRequest));
}
export function paymentsGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PaymentsGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentsGetRequest' from JSON`);
}
//# sourceMappingURL=paymentsget.js.map