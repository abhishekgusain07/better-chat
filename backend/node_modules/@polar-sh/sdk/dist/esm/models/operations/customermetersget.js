/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerMetersGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomerMetersGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerMetersGetRequest$;
(function (CustomerMetersGetRequest$) {
    /** @deprecated use `CustomerMetersGetRequest$inboundSchema` instead. */
    CustomerMetersGetRequest$.inboundSchema = CustomerMetersGetRequest$inboundSchema;
    /** @deprecated use `CustomerMetersGetRequest$outboundSchema` instead. */
    CustomerMetersGetRequest$.outboundSchema = CustomerMetersGetRequest$outboundSchema;
})(CustomerMetersGetRequest$ || (CustomerMetersGetRequest$ = {}));
export function customerMetersGetRequestToJSON(customerMetersGetRequest) {
    return JSON.stringify(CustomerMetersGetRequest$outboundSchema.parse(customerMetersGetRequest));
}
export function customerMetersGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerMetersGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerMetersGetRequest' from JSON`);
}
//# sourceMappingURL=customermetersget.js.map