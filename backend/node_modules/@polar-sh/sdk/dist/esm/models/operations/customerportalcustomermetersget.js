/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerPortalCustomerMetersGetSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalCustomerMetersGetSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomerMetersGetSecurity$;
(function (CustomerPortalCustomerMetersGetSecurity$) {
    /** @deprecated use `CustomerPortalCustomerMetersGetSecurity$inboundSchema` instead. */
    CustomerPortalCustomerMetersGetSecurity$.inboundSchema = CustomerPortalCustomerMetersGetSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalCustomerMetersGetSecurity$outboundSchema` instead. */
    CustomerPortalCustomerMetersGetSecurity$.outboundSchema = CustomerPortalCustomerMetersGetSecurity$outboundSchema;
})(CustomerPortalCustomerMetersGetSecurity$ || (CustomerPortalCustomerMetersGetSecurity$ = {}));
export function customerPortalCustomerMetersGetSecurityToJSON(customerPortalCustomerMetersGetSecurity) {
    return JSON.stringify(CustomerPortalCustomerMetersGetSecurity$outboundSchema.parse(customerPortalCustomerMetersGetSecurity));
}
export function customerPortalCustomerMetersGetSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomerMetersGetSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomerMetersGetSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalCustomerMetersGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const CustomerPortalCustomerMetersGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalCustomerMetersGetRequest$;
(function (CustomerPortalCustomerMetersGetRequest$) {
    /** @deprecated use `CustomerPortalCustomerMetersGetRequest$inboundSchema` instead. */
    CustomerPortalCustomerMetersGetRequest$.inboundSchema = CustomerPortalCustomerMetersGetRequest$inboundSchema;
    /** @deprecated use `CustomerPortalCustomerMetersGetRequest$outboundSchema` instead. */
    CustomerPortalCustomerMetersGetRequest$.outboundSchema = CustomerPortalCustomerMetersGetRequest$outboundSchema;
})(CustomerPortalCustomerMetersGetRequest$ || (CustomerPortalCustomerMetersGetRequest$ = {}));
export function customerPortalCustomerMetersGetRequestToJSON(customerPortalCustomerMetersGetRequest) {
    return JSON.stringify(CustomerPortalCustomerMetersGetRequest$outboundSchema.parse(customerPortalCustomerMetersGetRequest));
}
export function customerPortalCustomerMetersGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalCustomerMetersGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalCustomerMetersGetRequest' from JSON`);
}
//# sourceMappingURL=customerportalcustomermetersget.js.map