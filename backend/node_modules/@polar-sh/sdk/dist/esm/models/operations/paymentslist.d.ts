import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { ListResource, ListResource$Outbound } from "../components/listresource.js";
import { PaymentSortProperty } from "../components/paymentsortproperty.js";
import { PaymentStatus } from "../components/paymentstatus.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Filter by organization ID.
 */
export type PaymentsListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by checkout ID.
 */
export type PaymentsListQueryParamCheckoutIDFilter = string | Array<string>;
/**
 * Filter by order ID.
 */
export type PaymentsListQueryParamOrderIDFilter = string | Array<string>;
/**
 * Filter by payment status.
 */
export type QueryParamStatusFilter = PaymentStatus | Array<PaymentStatus>;
/**
 * Filter by payment method.
 */
export type MethodFilter = string | Array<string>;
/**
 * Filter by customer email.
 */
export type CustomerEmailFilter = string | Array<string>;
export type PaymentsListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by checkout ID.
     */
    checkoutId?: string | Array<string> | null | undefined;
    /**
     * Filter by order ID.
     */
    orderId?: string | Array<string> | null | undefined;
    /**
     * Filter by payment status.
     */
    status?: PaymentStatus | Array<PaymentStatus> | null | undefined;
    /**
     * Filter by payment method.
     */
    method?: string | Array<string> | null | undefined;
    /**
     * Filter by customer email.
     */
    customerEmail?: string | Array<string> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<PaymentSortProperty> | null | undefined;
};
export type PaymentsListResponse = {
    result: ListResource;
};
/** @internal */
export declare const PaymentsListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<PaymentsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentsListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const PaymentsListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<PaymentsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, PaymentsListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentsListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `PaymentsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, PaymentsListQueryParamOrganizationIDFilter>;
    /** @deprecated use `PaymentsListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = PaymentsListQueryParamOrganizationIDFilter$Outbound;
}
export declare function paymentsListQueryParamOrganizationIDFilterToJSON(paymentsListQueryParamOrganizationIDFilter: PaymentsListQueryParamOrganizationIDFilter): string;
export declare function paymentsListQueryParamOrganizationIDFilterFromJSON(jsonString: string): SafeParseResult<PaymentsListQueryParamOrganizationIDFilter, SDKValidationError>;
/** @internal */
export declare const PaymentsListQueryParamCheckoutIDFilter$inboundSchema: z.ZodType<PaymentsListQueryParamCheckoutIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentsListQueryParamCheckoutIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const PaymentsListQueryParamCheckoutIDFilter$outboundSchema: z.ZodType<PaymentsListQueryParamCheckoutIDFilter$Outbound, z.ZodTypeDef, PaymentsListQueryParamCheckoutIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentsListQueryParamCheckoutIDFilter$ {
    /** @deprecated use `PaymentsListQueryParamCheckoutIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentsListQueryParamCheckoutIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentsListQueryParamCheckoutIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentsListQueryParamCheckoutIDFilter$Outbound, z.ZodTypeDef, PaymentsListQueryParamCheckoutIDFilter>;
    /** @deprecated use `PaymentsListQueryParamCheckoutIDFilter$Outbound` instead. */
    type Outbound = PaymentsListQueryParamCheckoutIDFilter$Outbound;
}
export declare function paymentsListQueryParamCheckoutIDFilterToJSON(paymentsListQueryParamCheckoutIDFilter: PaymentsListQueryParamCheckoutIDFilter): string;
export declare function paymentsListQueryParamCheckoutIDFilterFromJSON(jsonString: string): SafeParseResult<PaymentsListQueryParamCheckoutIDFilter, SDKValidationError>;
/** @internal */
export declare const PaymentsListQueryParamOrderIDFilter$inboundSchema: z.ZodType<PaymentsListQueryParamOrderIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentsListQueryParamOrderIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const PaymentsListQueryParamOrderIDFilter$outboundSchema: z.ZodType<PaymentsListQueryParamOrderIDFilter$Outbound, z.ZodTypeDef, PaymentsListQueryParamOrderIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentsListQueryParamOrderIDFilter$ {
    /** @deprecated use `PaymentsListQueryParamOrderIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentsListQueryParamOrderIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentsListQueryParamOrderIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentsListQueryParamOrderIDFilter$Outbound, z.ZodTypeDef, PaymentsListQueryParamOrderIDFilter>;
    /** @deprecated use `PaymentsListQueryParamOrderIDFilter$Outbound` instead. */
    type Outbound = PaymentsListQueryParamOrderIDFilter$Outbound;
}
export declare function paymentsListQueryParamOrderIDFilterToJSON(paymentsListQueryParamOrderIDFilter: PaymentsListQueryParamOrderIDFilter): string;
export declare function paymentsListQueryParamOrderIDFilterFromJSON(jsonString: string): SafeParseResult<PaymentsListQueryParamOrderIDFilter, SDKValidationError>;
/** @internal */
export declare const QueryParamStatusFilter$inboundSchema: z.ZodType<QueryParamStatusFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamStatusFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamStatusFilter$outboundSchema: z.ZodType<QueryParamStatusFilter$Outbound, z.ZodTypeDef, QueryParamStatusFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamStatusFilter$ {
    /** @deprecated use `QueryParamStatusFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamStatusFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamStatusFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamStatusFilter$Outbound, z.ZodTypeDef, QueryParamStatusFilter>;
    /** @deprecated use `QueryParamStatusFilter$Outbound` instead. */
    type Outbound = QueryParamStatusFilter$Outbound;
}
export declare function queryParamStatusFilterToJSON(queryParamStatusFilter: QueryParamStatusFilter): string;
export declare function queryParamStatusFilterFromJSON(jsonString: string): SafeParseResult<QueryParamStatusFilter, SDKValidationError>;
/** @internal */
export declare const MethodFilter$inboundSchema: z.ZodType<MethodFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type MethodFilter$Outbound = string | Array<string>;
/** @internal */
export declare const MethodFilter$outboundSchema: z.ZodType<MethodFilter$Outbound, z.ZodTypeDef, MethodFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MethodFilter$ {
    /** @deprecated use `MethodFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MethodFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `MethodFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MethodFilter$Outbound, z.ZodTypeDef, MethodFilter>;
    /** @deprecated use `MethodFilter$Outbound` instead. */
    type Outbound = MethodFilter$Outbound;
}
export declare function methodFilterToJSON(methodFilter: MethodFilter): string;
export declare function methodFilterFromJSON(jsonString: string): SafeParseResult<MethodFilter, SDKValidationError>;
/** @internal */
export declare const CustomerEmailFilter$inboundSchema: z.ZodType<CustomerEmailFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerEmailFilter$Outbound = string | Array<string>;
/** @internal */
export declare const CustomerEmailFilter$outboundSchema: z.ZodType<CustomerEmailFilter$Outbound, z.ZodTypeDef, CustomerEmailFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerEmailFilter$ {
    /** @deprecated use `CustomerEmailFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerEmailFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerEmailFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerEmailFilter$Outbound, z.ZodTypeDef, CustomerEmailFilter>;
    /** @deprecated use `CustomerEmailFilter$Outbound` instead. */
    type Outbound = CustomerEmailFilter$Outbound;
}
export declare function customerEmailFilterToJSON(customerEmailFilter: CustomerEmailFilter): string;
export declare function customerEmailFilterFromJSON(jsonString: string): SafeParseResult<CustomerEmailFilter, SDKValidationError>;
/** @internal */
export declare const PaymentsListRequest$inboundSchema: z.ZodType<PaymentsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentsListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    checkout_id?: string | Array<string> | null | undefined;
    order_id?: string | Array<string> | null | undefined;
    status?: string | Array<string> | null | undefined;
    method?: string | Array<string> | null | undefined;
    customer_email?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const PaymentsListRequest$outboundSchema: z.ZodType<PaymentsListRequest$Outbound, z.ZodTypeDef, PaymentsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentsListRequest$ {
    /** @deprecated use `PaymentsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentsListRequest$Outbound, z.ZodTypeDef, PaymentsListRequest>;
    /** @deprecated use `PaymentsListRequest$Outbound` instead. */
    type Outbound = PaymentsListRequest$Outbound;
}
export declare function paymentsListRequestToJSON(paymentsListRequest: PaymentsListRequest): string;
export declare function paymentsListRequestFromJSON(jsonString: string): SafeParseResult<PaymentsListRequest, SDKValidationError>;
/** @internal */
export declare const PaymentsListResponse$inboundSchema: z.ZodType<PaymentsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentsListResponse$Outbound = {
    Result: ListResource$Outbound;
};
/** @internal */
export declare const PaymentsListResponse$outboundSchema: z.ZodType<PaymentsListResponse$Outbound, z.ZodTypeDef, PaymentsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentsListResponse$ {
    /** @deprecated use `PaymentsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentsListResponse$Outbound, z.ZodTypeDef, PaymentsListResponse>;
    /** @deprecated use `PaymentsListResponse$Outbound` instead. */
    type Outbound = PaymentsListResponse$Outbound;
}
export declare function paymentsListResponseToJSON(paymentsListResponse: PaymentsListResponse): string;
export declare function paymentsListResponseFromJSON(jsonString: string): SafeParseResult<PaymentsListResponse, SDKValidationError>;
//# sourceMappingURL=paymentslist.d.ts.map