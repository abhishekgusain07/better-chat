/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ListResourceWebhookDelivery$inboundSchema, ListResourceWebhookDelivery$outboundSchema, } from "../components/listresourcewebhookdelivery.js";
/** @internal */
export const EndpointId$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
export const EndpointId$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EndpointId$;
(function (EndpointId$) {
    /** @deprecated use `EndpointId$inboundSchema` instead. */
    EndpointId$.inboundSchema = EndpointId$inboundSchema;
    /** @deprecated use `EndpointId$outboundSchema` instead. */
    EndpointId$.outboundSchema = EndpointId$outboundSchema;
})(EndpointId$ || (EndpointId$ = {}));
export function endpointIdToJSON(endpointId) {
    return JSON.stringify(EndpointId$outboundSchema.parse(endpointId));
}
export function endpointIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EndpointId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EndpointId' from JSON`);
}
/** @internal */
export const WebhooksListWebhookDeliveriesRequest$inboundSchema = z.object({
    endpoint_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        "endpoint_id": "endpointId",
    });
});
/** @internal */
export const WebhooksListWebhookDeliveriesRequest$outboundSchema = z.object({
    endpointId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return remap$(v, {
        endpointId: "endpoint_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksListWebhookDeliveriesRequest$;
(function (WebhooksListWebhookDeliveriesRequest$) {
    /** @deprecated use `WebhooksListWebhookDeliveriesRequest$inboundSchema` instead. */
    WebhooksListWebhookDeliveriesRequest$.inboundSchema = WebhooksListWebhookDeliveriesRequest$inboundSchema;
    /** @deprecated use `WebhooksListWebhookDeliveriesRequest$outboundSchema` instead. */
    WebhooksListWebhookDeliveriesRequest$.outboundSchema = WebhooksListWebhookDeliveriesRequest$outboundSchema;
})(WebhooksListWebhookDeliveriesRequest$ || (WebhooksListWebhookDeliveriesRequest$ = {}));
export function webhooksListWebhookDeliveriesRequestToJSON(webhooksListWebhookDeliveriesRequest) {
    return JSON.stringify(WebhooksListWebhookDeliveriesRequest$outboundSchema.parse(webhooksListWebhookDeliveriesRequest));
}
export function webhooksListWebhookDeliveriesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksListWebhookDeliveriesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksListWebhookDeliveriesRequest' from JSON`);
}
/** @internal */
export const WebhooksListWebhookDeliveriesResponse$inboundSchema = z.object({
    Result: ListResourceWebhookDelivery$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const WebhooksListWebhookDeliveriesResponse$outboundSchema = z.object({
    result: ListResourceWebhookDelivery$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksListWebhookDeliveriesResponse$;
(function (WebhooksListWebhookDeliveriesResponse$) {
    /** @deprecated use `WebhooksListWebhookDeliveriesResponse$inboundSchema` instead. */
    WebhooksListWebhookDeliveriesResponse$.inboundSchema = WebhooksListWebhookDeliveriesResponse$inboundSchema;
    /** @deprecated use `WebhooksListWebhookDeliveriesResponse$outboundSchema` instead. */
    WebhooksListWebhookDeliveriesResponse$.outboundSchema = WebhooksListWebhookDeliveriesResponse$outboundSchema;
})(WebhooksListWebhookDeliveriesResponse$ || (WebhooksListWebhookDeliveriesResponse$ = {}));
export function webhooksListWebhookDeliveriesResponseToJSON(webhooksListWebhookDeliveriesResponse) {
    return JSON.stringify(WebhooksListWebhookDeliveriesResponse$outboundSchema.parse(webhooksListWebhookDeliveriesResponse));
}
export function webhooksListWebhookDeliveriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksListWebhookDeliveriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksListWebhookDeliveriesResponse' from JSON`);
}
//# sourceMappingURL=webhookslistwebhookdeliveries.js.map