import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type WebhooksDeleteWebhookEndpointRequest = {
    /**
     * The webhook endpoint ID.
     */
    id: string;
};
/** @internal */
export declare const WebhooksDeleteWebhookEndpointRequest$inboundSchema: z.ZodType<WebhooksDeleteWebhookEndpointRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhooksDeleteWebhookEndpointRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const WebhooksDeleteWebhookEndpointRequest$outboundSchema: z.ZodType<WebhooksDeleteWebhookEndpointRequest$Outbound, z.ZodTypeDef, WebhooksDeleteWebhookEndpointRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhooksDeleteWebhookEndpointRequest$ {
    /** @deprecated use `WebhooksDeleteWebhookEndpointRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhooksDeleteWebhookEndpointRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhooksDeleteWebhookEndpointRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhooksDeleteWebhookEndpointRequest$Outbound, z.ZodTypeDef, WebhooksDeleteWebhookEndpointRequest>;
    /** @deprecated use `WebhooksDeleteWebhookEndpointRequest$Outbound` instead. */
    type Outbound = WebhooksDeleteWebhookEndpointRequest$Outbound;
}
export declare function webhooksDeleteWebhookEndpointRequestToJSON(webhooksDeleteWebhookEndpointRequest: WebhooksDeleteWebhookEndpointRequest): string;
export declare function webhooksDeleteWebhookEndpointRequestFromJSON(jsonString: string): SafeParseResult<WebhooksDeleteWebhookEndpointRequest, SDKValidationError>;
//# sourceMappingURL=webhooksdeletewebhookendpoint.d.ts.map