/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerUpdateExternalID$inboundSchema, CustomerUpdateExternalID$outboundSchema, } from "../components/customerupdateexternalid.js";
/** @internal */
export const CustomersUpdateExternalRequest$inboundSchema = z.object({
    external_id: z.string(),
    CustomerUpdateExternalID: CustomerUpdateExternalID$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "external_id": "externalId",
        "CustomerUpdateExternalID": "customerUpdateExternalID",
    });
});
/** @internal */
export const CustomersUpdateExternalRequest$outboundSchema = z.object({
    externalId: z.string(),
    customerUpdateExternalID: CustomerUpdateExternalID$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        externalId: "external_id",
        customerUpdateExternalID: "CustomerUpdateExternalID",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomersUpdateExternalRequest$;
(function (CustomersUpdateExternalRequest$) {
    /** @deprecated use `CustomersUpdateExternalRequest$inboundSchema` instead. */
    CustomersUpdateExternalRequest$.inboundSchema = CustomersUpdateExternalRequest$inboundSchema;
    /** @deprecated use `CustomersUpdateExternalRequest$outboundSchema` instead. */
    CustomersUpdateExternalRequest$.outboundSchema = CustomersUpdateExternalRequest$outboundSchema;
})(CustomersUpdateExternalRequest$ || (CustomersUpdateExternalRequest$ = {}));
export function customersUpdateExternalRequestToJSON(customersUpdateExternalRequest) {
    return JSON.stringify(CustomersUpdateExternalRequest$outboundSchema.parse(customersUpdateExternalRequest));
}
export function customersUpdateExternalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomersUpdateExternalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomersUpdateExternalRequest' from JSON`);
}
//# sourceMappingURL=customersupdateexternal.js.map