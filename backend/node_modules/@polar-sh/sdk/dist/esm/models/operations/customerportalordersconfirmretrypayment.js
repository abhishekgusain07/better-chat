/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerOrderConfirmPayment$inboundSchema, CustomerOrderConfirmPayment$outboundSchema, } from "../components/customerorderconfirmpayment.js";
/** @internal */
export const CustomerPortalOrdersConfirmRetryPaymentSecurity$inboundSchema = z.object({
    customer_session: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_session": "customerSession",
    });
});
/** @internal */
export const CustomerPortalOrdersConfirmRetryPaymentSecurity$outboundSchema = z.object({
    customerSession: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerSession: "customer_session",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersConfirmRetryPaymentSecurity$;
(function (CustomerPortalOrdersConfirmRetryPaymentSecurity$) {
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentSecurity$inboundSchema` instead. */
    CustomerPortalOrdersConfirmRetryPaymentSecurity$.inboundSchema = CustomerPortalOrdersConfirmRetryPaymentSecurity$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentSecurity$outboundSchema` instead. */
    CustomerPortalOrdersConfirmRetryPaymentSecurity$.outboundSchema = CustomerPortalOrdersConfirmRetryPaymentSecurity$outboundSchema;
})(CustomerPortalOrdersConfirmRetryPaymentSecurity$ || (CustomerPortalOrdersConfirmRetryPaymentSecurity$ = {}));
export function customerPortalOrdersConfirmRetryPaymentSecurityToJSON(customerPortalOrdersConfirmRetryPaymentSecurity) {
    return JSON.stringify(CustomerPortalOrdersConfirmRetryPaymentSecurity$outboundSchema.parse(customerPortalOrdersConfirmRetryPaymentSecurity));
}
export function customerPortalOrdersConfirmRetryPaymentSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersConfirmRetryPaymentSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersConfirmRetryPaymentSecurity' from JSON`);
}
/** @internal */
export const CustomerPortalOrdersConfirmRetryPaymentRequest$inboundSchema = z.object({
    id: z.string(),
    CustomerOrderConfirmPayment: CustomerOrderConfirmPayment$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CustomerOrderConfirmPayment": "customerOrderConfirmPayment",
    });
});
/** @internal */
export const CustomerPortalOrdersConfirmRetryPaymentRequest$outboundSchema = z.object({
    id: z.string(),
    customerOrderConfirmPayment: CustomerOrderConfirmPayment$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        customerOrderConfirmPayment: "CustomerOrderConfirmPayment",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerPortalOrdersConfirmRetryPaymentRequest$;
(function (CustomerPortalOrdersConfirmRetryPaymentRequest$) {
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentRequest$inboundSchema` instead. */
    CustomerPortalOrdersConfirmRetryPaymentRequest$.inboundSchema = CustomerPortalOrdersConfirmRetryPaymentRequest$inboundSchema;
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentRequest$outboundSchema` instead. */
    CustomerPortalOrdersConfirmRetryPaymentRequest$.outboundSchema = CustomerPortalOrdersConfirmRetryPaymentRequest$outboundSchema;
})(CustomerPortalOrdersConfirmRetryPaymentRequest$ || (CustomerPortalOrdersConfirmRetryPaymentRequest$ = {}));
export function customerPortalOrdersConfirmRetryPaymentRequestToJSON(customerPortalOrdersConfirmRetryPaymentRequest) {
    return JSON.stringify(CustomerPortalOrdersConfirmRetryPaymentRequest$outboundSchema.parse(customerPortalOrdersConfirmRetryPaymentRequest));
}
export function customerPortalOrdersConfirmRetryPaymentRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerPortalOrdersConfirmRetryPaymentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerPortalOrdersConfirmRetryPaymentRequest' from JSON`);
}
//# sourceMappingURL=customerportalordersconfirmretrypayment.js.map