"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Webhooks = void 0;
const webhooksCreateWebhookEndpoint_js_1 = require("../funcs/webhooksCreateWebhookEndpoint.js");
const webhooksDeleteWebhookEndpoint_js_1 = require("../funcs/webhooksDeleteWebhookEndpoint.js");
const webhooksGetWebhookEndpoint_js_1 = require("../funcs/webhooksGetWebhookEndpoint.js");
const webhooksListWebhookDeliveries_js_1 = require("../funcs/webhooksListWebhookDeliveries.js");
const webhooksListWebhookEndpoints_js_1 = require("../funcs/webhooksListWebhookEndpoints.js");
const webhooksRedeliverWebhookEvent_js_1 = require("../funcs/webhooksRedeliverWebhookEvent.js");
const webhooksResetWebhookEndpointSecret_js_1 = require("../funcs/webhooksResetWebhookEndpointSecret.js");
const webhooksUpdateWebhookEndpoint_js_1 = require("../funcs/webhooksUpdateWebhookEndpoint.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
const operations_js_1 = require("../types/operations.js");
class Webhooks extends sdks_js_1.ClientSDK {
    /**
     * List Webhook Endpoints
     *
     * @remarks
     * List webhook endpoints.
     *
     * **Scopes**: `webhooks:read` `webhooks:write`
     */
    async listWebhookEndpoints(request, options) {
        return (0, operations_js_1.unwrapResultIterator)((0, webhooksListWebhookEndpoints_js_1.webhooksListWebhookEndpoints)(this, request, options));
    }
    /**
     * Create Webhook Endpoint
     *
     * @remarks
     * Create a webhook endpoint.
     *
     * **Scopes**: `webhooks:write`
     */
    async createWebhookEndpoint(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, webhooksCreateWebhookEndpoint_js_1.webhooksCreateWebhookEndpoint)(this, request, options));
    }
    /**
     * Get Webhook Endpoint
     *
     * @remarks
     * Get a webhook endpoint by ID.
     *
     * **Scopes**: `webhooks:read` `webhooks:write`
     */
    async getWebhookEndpoint(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, webhooksGetWebhookEndpoint_js_1.webhooksGetWebhookEndpoint)(this, request, options));
    }
    /**
     * Update Webhook Endpoint
     *
     * @remarks
     * Update a webhook endpoint.
     *
     * **Scopes**: `webhooks:write`
     */
    async updateWebhookEndpoint(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, webhooksUpdateWebhookEndpoint_js_1.webhooksUpdateWebhookEndpoint)(this, request, options));
    }
    /**
     * Delete Webhook Endpoint
     *
     * @remarks
     * Delete a webhook endpoint.
     *
     * **Scopes**: `webhooks:write`
     */
    async deleteWebhookEndpoint(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, webhooksDeleteWebhookEndpoint_js_1.webhooksDeleteWebhookEndpoint)(this, request, options));
    }
    /**
     * Reset Webhook Endpoint Secret
     *
     * @remarks
     * Regenerate a webhook endpoint secret.
     *
     * **Scopes**: `webhooks:write`
     */
    async resetWebhookEndpointSecret(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, webhooksResetWebhookEndpointSecret_js_1.webhooksResetWebhookEndpointSecret)(this, request, options));
    }
    /**
     * List Webhook Deliveries
     *
     * @remarks
     * List webhook deliveries.
     *
     * Deliveries are all the attempts to deliver a webhook event to an endpoint.
     *
     * **Scopes**: `webhooks:read` `webhooks:write`
     */
    async listWebhookDeliveries(request, options) {
        return (0, operations_js_1.unwrapResultIterator)((0, webhooksListWebhookDeliveries_js_1.webhooksListWebhookDeliveries)(this, request, options));
    }
    /**
     * Redeliver Webhook Event
     *
     * @remarks
     * Schedule the re-delivery of a webhook event.
     *
     * **Scopes**: `webhooks:write`
     */
    async redeliverWebhookEvent(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, webhooksRedeliverWebhookEvent_js_1.webhooksRedeliverWebhookEvent)(this, request, options));
    }
}
exports.Webhooks = Webhooks;
//# sourceMappingURL=webhooks.js.map