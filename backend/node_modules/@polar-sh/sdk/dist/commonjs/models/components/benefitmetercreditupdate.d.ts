import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitMeterCreditCreateProperties, BenefitMeterCreditCreateProperties$Outbound } from "./benefitmetercreditcreateproperties.js";
export type BenefitMeterCreditUpdateMetadata = string | number | number | boolean;
export type BenefitMeterCreditUpdate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A floating-point number
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    /**
     * The description of the benefit. Will be displayed on products having this benefit.
     */
    description?: string | null | undefined;
    type: "meter_credit";
    properties?: BenefitMeterCreditCreateProperties | null | undefined;
};
/** @internal */
export declare const BenefitMeterCreditUpdateMetadata$inboundSchema: z.ZodType<BenefitMeterCreditUpdateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditUpdateMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitMeterCreditUpdateMetadata$outboundSchema: z.ZodType<BenefitMeterCreditUpdateMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditUpdateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditUpdateMetadata$ {
    /** @deprecated use `BenefitMeterCreditUpdateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditUpdateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditUpdateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditUpdateMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditUpdateMetadata>;
    /** @deprecated use `BenefitMeterCreditUpdateMetadata$Outbound` instead. */
    type Outbound = BenefitMeterCreditUpdateMetadata$Outbound;
}
export declare function benefitMeterCreditUpdateMetadataToJSON(benefitMeterCreditUpdateMetadata: BenefitMeterCreditUpdateMetadata): string;
export declare function benefitMeterCreditUpdateMetadataFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditUpdateMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitMeterCreditUpdate$inboundSchema: z.ZodType<BenefitMeterCreditUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditUpdate$Outbound = {
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    description?: string | null | undefined;
    type: "meter_credit";
    properties?: BenefitMeterCreditCreateProperties$Outbound | null | undefined;
};
/** @internal */
export declare const BenefitMeterCreditUpdate$outboundSchema: z.ZodType<BenefitMeterCreditUpdate$Outbound, z.ZodTypeDef, BenefitMeterCreditUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditUpdate$ {
    /** @deprecated use `BenefitMeterCreditUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditUpdate$Outbound, z.ZodTypeDef, BenefitMeterCreditUpdate>;
    /** @deprecated use `BenefitMeterCreditUpdate$Outbound` instead. */
    type Outbound = BenefitMeterCreditUpdate$Outbound;
}
export declare function benefitMeterCreditUpdateToJSON(benefitMeterCreditUpdate: BenefitMeterCreditUpdate): string;
export declare function benefitMeterCreditUpdateFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditUpdate, SDKValidationError>;
//# sourceMappingURL=benefitmetercreditupdate.d.ts.map