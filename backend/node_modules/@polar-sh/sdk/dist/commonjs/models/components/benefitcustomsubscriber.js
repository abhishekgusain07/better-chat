"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BenefitCustomSubscriber$ = exports.BenefitCustomSubscriber$outboundSchema = exports.BenefitCustomSubscriber$inboundSchema = exports.BenefitCustomSubscriberMetadata$ = exports.BenefitCustomSubscriberMetadata$outboundSchema = exports.BenefitCustomSubscriberMetadata$inboundSchema = void 0;
exports.benefitCustomSubscriberMetadataToJSON = benefitCustomSubscriberMetadataToJSON;
exports.benefitCustomSubscriberMetadataFromJSON = benefitCustomSubscriberMetadataFromJSON;
exports.benefitCustomSubscriberToJSON = benefitCustomSubscriberToJSON;
exports.benefitCustomSubscriberFromJSON = benefitCustomSubscriberFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const benefitcustomsubscriberproperties_js_1 = require("./benefitcustomsubscriberproperties.js");
const organization_js_1 = require("./organization.js");
/** @internal */
exports.BenefitCustomSubscriberMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/** @internal */
exports.BenefitCustomSubscriberMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitCustomSubscriberMetadata$;
(function (BenefitCustomSubscriberMetadata$) {
    /** @deprecated use `BenefitCustomSubscriberMetadata$inboundSchema` instead. */
    BenefitCustomSubscriberMetadata$.inboundSchema = exports.BenefitCustomSubscriberMetadata$inboundSchema;
    /** @deprecated use `BenefitCustomSubscriberMetadata$outboundSchema` instead. */
    BenefitCustomSubscriberMetadata$.outboundSchema = exports.BenefitCustomSubscriberMetadata$outboundSchema;
})(BenefitCustomSubscriberMetadata$ || (exports.BenefitCustomSubscriberMetadata$ = BenefitCustomSubscriberMetadata$ = {}));
function benefitCustomSubscriberMetadataToJSON(benefitCustomSubscriberMetadata) {
    return JSON.stringify(exports.BenefitCustomSubscriberMetadata$outboundSchema.parse(benefitCustomSubscriberMetadata));
}
function benefitCustomSubscriberMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitCustomSubscriberMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitCustomSubscriberMetadata' from JSON`);
}
/** @internal */
exports.BenefitCustomSubscriber$inboundSchema = z.object({
    id: z.string(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    type: z.literal("custom"),
    description: z.string(),
    selectable: z.boolean(),
    deletable: z.boolean(),
    organization_id: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),
    organization: organization_js_1.Organization$inboundSchema,
    properties: benefitcustomsubscriberproperties_js_1.BenefitCustomSubscriberProperties$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.BenefitCustomSubscriber$outboundSchema = z.object({
    id: z.string(),
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    type: z.literal("custom"),
    description: z.string(),
    selectable: z.boolean(),
    deletable: z.boolean(),
    organizationId: z.string(),
    metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),
    organization: organization_js_1.Organization$outboundSchema,
    properties: benefitcustomsubscriberproperties_js_1.BenefitCustomSubscriberProperties$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitCustomSubscriber$;
(function (BenefitCustomSubscriber$) {
    /** @deprecated use `BenefitCustomSubscriber$inboundSchema` instead. */
    BenefitCustomSubscriber$.inboundSchema = exports.BenefitCustomSubscriber$inboundSchema;
    /** @deprecated use `BenefitCustomSubscriber$outboundSchema` instead. */
    BenefitCustomSubscriber$.outboundSchema = exports.BenefitCustomSubscriber$outboundSchema;
})(BenefitCustomSubscriber$ || (exports.BenefitCustomSubscriber$ = BenefitCustomSubscriber$ = {}));
function benefitCustomSubscriberToJSON(benefitCustomSubscriber) {
    return JSON.stringify(exports.BenefitCustomSubscriber$outboundSchema.parse(benefitCustomSubscriber));
}
function benefitCustomSubscriberFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitCustomSubscriber$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitCustomSubscriber' from JSON`);
}
//# sourceMappingURL=benefitcustomsubscriber.js.map