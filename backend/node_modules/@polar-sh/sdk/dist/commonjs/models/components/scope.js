"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Scope$ = exports.Scope$outboundSchema = exports.Scope$inboundSchema = exports.Scope = void 0;
const z = __importStar(require("zod"));
exports.Scope = {
    Openid: "openid",
    Profile: "profile",
    Email: "email",
    UserRead: "user:read",
    WebDefault: "web_default",
    OrganizationsRead: "organizations:read",
    OrganizationsWrite: "organizations:write",
    CustomFieldsRead: "custom_fields:read",
    CustomFieldsWrite: "custom_fields:write",
    DiscountsRead: "discounts:read",
    DiscountsWrite: "discounts:write",
    CheckoutLinksRead: "checkout_links:read",
    CheckoutLinksWrite: "checkout_links:write",
    CheckoutsRead: "checkouts:read",
    CheckoutsWrite: "checkouts:write",
    TransactionsRead: "transactions:read",
    TransactionsWrite: "transactions:write",
    PayoutsRead: "payouts:read",
    PayoutsWrite: "payouts:write",
    ProductsRead: "products:read",
    ProductsWrite: "products:write",
    BenefitsRead: "benefits:read",
    BenefitsWrite: "benefits:write",
    EventsRead: "events:read",
    EventsWrite: "events:write",
    MetersRead: "meters:read",
    MetersWrite: "meters:write",
    FilesRead: "files:read",
    FilesWrite: "files:write",
    SubscriptionsRead: "subscriptions:read",
    SubscriptionsWrite: "subscriptions:write",
    CustomersRead: "customers:read",
    CustomersWrite: "customers:write",
    CustomerMetersRead: "customer_meters:read",
    CustomerSessionsWrite: "customer_sessions:write",
    OrdersRead: "orders:read",
    OrdersWrite: "orders:write",
    RefundsRead: "refunds:read",
    RefundsWrite: "refunds:write",
    PaymentsRead: "payments:read",
    MetricsRead: "metrics:read",
    WebhooksRead: "webhooks:read",
    WebhooksWrite: "webhooks:write",
    ExternalOrganizationsRead: "external_organizations:read",
    LicenseKeysRead: "license_keys:read",
    LicenseKeysWrite: "license_keys:write",
    RepositoriesRead: "repositories:read",
    RepositoriesWrite: "repositories:write",
    IssuesRead: "issues:read",
    IssuesWrite: "issues:write",
    CustomerPortalRead: "customer_portal:read",
    CustomerPortalWrite: "customer_portal:write",
    NotificationsRead: "notifications:read",
    NotificationsWrite: "notifications:write",
    NotificationRecipientsRead: "notification_recipients:read",
    NotificationRecipientsWrite: "notification_recipients:write",
};
/** @internal */
exports.Scope$inboundSchema = z.nativeEnum(exports.Scope);
/** @internal */
exports.Scope$outboundSchema = exports.Scope$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Scope$;
(function (Scope$) {
    /** @deprecated use `Scope$inboundSchema` instead. */
    Scope$.inboundSchema = exports.Scope$inboundSchema;
    /** @deprecated use `Scope$outboundSchema` instead. */
    Scope$.outboundSchema = exports.Scope$outboundSchema;
})(Scope$ || (exports.Scope$ = Scope$ = {}));
//# sourceMappingURL=scope.js.map