import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitMeterCreditProperties, BenefitMeterCreditProperties$Outbound } from "./benefitmetercreditproperties.js";
export type BenefitMeterCreditMetadata = string | number | number | boolean;
/**
 * A benefit of type `meter_unit`.
 *
 * @remarks
 *
 * Use it to grant a number of units on a specific meter.
 */
export type BenefitMeterCredit = {
    /**
     * The ID of the benefit.
     */
    id: string;
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    type: "meter_credit";
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    metadata: {
        [k: string]: string | number | number | boolean;
    };
    /**
     * Properties for a benefit of type `meter_unit`.
     */
    properties: BenefitMeterCreditProperties;
};
/** @internal */
export declare const BenefitMeterCreditMetadata$inboundSchema: z.ZodType<BenefitMeterCreditMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitMeterCreditMetadata$outboundSchema: z.ZodType<BenefitMeterCreditMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditMetadata$ {
    /** @deprecated use `BenefitMeterCreditMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditMetadata>;
    /** @deprecated use `BenefitMeterCreditMetadata$Outbound` instead. */
    type Outbound = BenefitMeterCreditMetadata$Outbound;
}
export declare function benefitMeterCreditMetadataToJSON(benefitMeterCreditMetadata: BenefitMeterCreditMetadata): string;
export declare function benefitMeterCreditMetadataFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitMeterCredit$inboundSchema: z.ZodType<BenefitMeterCredit, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCredit$Outbound = {
    id: string;
    created_at: string;
    modified_at: string | null;
    type: "meter_credit";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    metadata: {
        [k: string]: string | number | number | boolean;
    };
    properties: BenefitMeterCreditProperties$Outbound;
};
/** @internal */
export declare const BenefitMeterCredit$outboundSchema: z.ZodType<BenefitMeterCredit$Outbound, z.ZodTypeDef, BenefitMeterCredit>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCredit$ {
    /** @deprecated use `BenefitMeterCredit$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCredit, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCredit$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCredit$Outbound, z.ZodTypeDef, BenefitMeterCredit>;
    /** @deprecated use `BenefitMeterCredit$Outbound` instead. */
    type Outbound = BenefitMeterCredit$Outbound;
}
export declare function benefitMeterCreditToJSON(benefitMeterCredit: BenefitMeterCredit): string;
export declare function benefitMeterCreditFromJSON(jsonString: string): SafeParseResult<BenefitMeterCredit, SDKValidationError>;
//# sourceMappingURL=benefitmetercredit.d.ts.map