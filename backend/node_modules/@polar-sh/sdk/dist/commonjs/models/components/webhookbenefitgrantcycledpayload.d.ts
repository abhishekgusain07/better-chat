import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitGrantWebhook, BenefitGrantWebhook$Outbound } from "./benefitgrantwebhook.js";
/**
 * Sent when a benefit grant is cycled,
 *
 * @remarks
 * meaning the related subscription has been renewed for another period.
 *
 * **Discord & Slack support:** Basic
 */
export type WebhookBenefitGrantCycledPayload = {
    type: "benefit_grant.cycled";
    data: BenefitGrantWebhook;
};
/** @internal */
export declare const WebhookBenefitGrantCycledPayload$inboundSchema: z.ZodType<WebhookBenefitGrantCycledPayload, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookBenefitGrantCycledPayload$Outbound = {
    type: "benefit_grant.cycled";
    data: BenefitGrantWebhook$Outbound;
};
/** @internal */
export declare const WebhookBenefitGrantCycledPayload$outboundSchema: z.ZodType<WebhookBenefitGrantCycledPayload$Outbound, z.ZodTypeDef, WebhookBenefitGrantCycledPayload>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookBenefitGrantCycledPayload$ {
    /** @deprecated use `WebhookBenefitGrantCycledPayload$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookBenefitGrantCycledPayload, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookBenefitGrantCycledPayload$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookBenefitGrantCycledPayload$Outbound, z.ZodTypeDef, WebhookBenefitGrantCycledPayload>;
    /** @deprecated use `WebhookBenefitGrantCycledPayload$Outbound` instead. */
    type Outbound = WebhookBenefitGrantCycledPayload$Outbound;
}
export declare function webhookBenefitGrantCycledPayloadToJSON(webhookBenefitGrantCycledPayload: WebhookBenefitGrantCycledPayload): string;
export declare function webhookBenefitGrantCycledPayloadFromJSON(jsonString: string): SafeParseResult<WebhookBenefitGrantCycledPayload, SDKValidationError>;
//# sourceMappingURL=webhookbenefitgrantcycledpayload.d.ts.map