import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitMeterCreditCreateProperties, BenefitMeterCreditCreateProperties$Outbound } from "./benefitmetercreditcreateproperties.js";
export type BenefitMeterCreditCreateMetadata = string | number | number | boolean;
/**
 * Schema to create a benefit of type `meter_unit`.
 */
export type BenefitMeterCreditCreate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A floating-point number
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    type: "meter_credit";
    /**
     * The description of the benefit. Will be displayed on products having this benefit.
     */
    description: string;
    /**
     * The ID of the organization owning the benefit. **Required unless you use an organization token.**
     */
    organizationId?: string | null | undefined;
    /**
     * Properties for creating a benefit of type `meter_unit`.
     */
    properties: BenefitMeterCreditCreateProperties;
};
/** @internal */
export declare const BenefitMeterCreditCreateMetadata$inboundSchema: z.ZodType<BenefitMeterCreditCreateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditCreateMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitMeterCreditCreateMetadata$outboundSchema: z.ZodType<BenefitMeterCreditCreateMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditCreateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditCreateMetadata$ {
    /** @deprecated use `BenefitMeterCreditCreateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditCreateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditCreateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditCreateMetadata$Outbound, z.ZodTypeDef, BenefitMeterCreditCreateMetadata>;
    /** @deprecated use `BenefitMeterCreditCreateMetadata$Outbound` instead. */
    type Outbound = BenefitMeterCreditCreateMetadata$Outbound;
}
export declare function benefitMeterCreditCreateMetadataToJSON(benefitMeterCreditCreateMetadata: BenefitMeterCreditCreateMetadata): string;
export declare function benefitMeterCreditCreateMetadataFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditCreateMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitMeterCreditCreate$inboundSchema: z.ZodType<BenefitMeterCreditCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditCreate$Outbound = {
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    type: "meter_credit";
    description: string;
    organization_id?: string | null | undefined;
    properties: BenefitMeterCreditCreateProperties$Outbound;
};
/** @internal */
export declare const BenefitMeterCreditCreate$outboundSchema: z.ZodType<BenefitMeterCreditCreate$Outbound, z.ZodTypeDef, BenefitMeterCreditCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditCreate$ {
    /** @deprecated use `BenefitMeterCreditCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditCreate$Outbound, z.ZodTypeDef, BenefitMeterCreditCreate>;
    /** @deprecated use `BenefitMeterCreditCreate$Outbound` instead. */
    type Outbound = BenefitMeterCreditCreate$Outbound;
}
export declare function benefitMeterCreditCreateToJSON(benefitMeterCreditCreate: BenefitMeterCreditCreate): string;
export declare function benefitMeterCreditCreateFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditCreate, SDKValidationError>;
//# sourceMappingURL=benefitmetercreditcreate.d.ts.map