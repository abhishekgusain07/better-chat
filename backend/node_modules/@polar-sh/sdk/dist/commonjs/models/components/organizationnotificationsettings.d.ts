import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type OrganizationNotificationSettings = {
    newOrder: boolean;
    newSubscription: boolean;
};
/** @internal */
export declare const OrganizationNotificationSettings$inboundSchema: z.ZodType<OrganizationNotificationSettings, z.ZodTypeDef, unknown>;
/** @internal */
export type OrganizationNotificationSettings$Outbound = {
    new_order: boolean;
    new_subscription: boolean;
};
/** @internal */
export declare const OrganizationNotificationSettings$outboundSchema: z.ZodType<OrganizationNotificationSettings$Outbound, z.ZodTypeDef, OrganizationNotificationSettings>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrganizationNotificationSettings$ {
    /** @deprecated use `OrganizationNotificationSettings$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrganizationNotificationSettings, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrganizationNotificationSettings$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrganizationNotificationSettings$Outbound, z.ZodTypeDef, OrganizationNotificationSettings>;
    /** @deprecated use `OrganizationNotificationSettings$Outbound` instead. */
    type Outbound = OrganizationNotificationSettings$Outbound;
}
export declare function organizationNotificationSettingsToJSON(organizationNotificationSettings: OrganizationNotificationSettings): string;
export declare function organizationNotificationSettingsFromJSON(jsonString: string): SafeParseResult<OrganizationNotificationSettings, SDKValidationError>;
//# sourceMappingURL=organizationnotificationsettings.d.ts.map