import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
import { WebhookDelivery, WebhookDelivery$Outbound } from "./webhookdelivery.js";
export type ListResourceWebhookDelivery = {
    items: Array<WebhookDelivery>;
    pagination: Pagination;
};
/** @internal */
export declare const ListResourceWebhookDelivery$inboundSchema: z.ZodType<ListResourceWebhookDelivery, z.ZodTypeDef, unknown>;
/** @internal */
export type ListResourceWebhookDelivery$Outbound = {
    items: Array<WebhookDelivery$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const ListResourceWebhookDelivery$outboundSchema: z.ZodType<ListResourceWebhookDelivery$Outbound, z.ZodTypeDef, ListResourceWebhookDelivery>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListResourceWebhookDelivery$ {
    /** @deprecated use `ListResourceWebhookDelivery$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListResourceWebhookDelivery, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListResourceWebhookDelivery$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListResourceWebhookDelivery$Outbound, z.ZodTypeDef, ListResourceWebhookDelivery>;
    /** @deprecated use `ListResourceWebhookDelivery$Outbound` instead. */
    type Outbound = ListResourceWebhookDelivery$Outbound;
}
export declare function listResourceWebhookDeliveryToJSON(listResourceWebhookDelivery: ListResourceWebhookDelivery): string;
export declare function listResourceWebhookDeliveryFromJSON(jsonString: string): SafeParseResult<ListResourceWebhookDelivery, SDKValidationError>;
//# sourceMappingURL=listresourcewebhookdelivery.d.ts.map