import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const EventNamesSortProperty: {
    readonly Name: "name";
    readonly MinusName: "-name";
    readonly Occurrences: "occurrences";
    readonly MinusOccurrences: "-occurrences";
    readonly FirstSeen: "first_seen";
    readonly MinusFirstSeen: "-first_seen";
    readonly LastSeen: "last_seen";
    readonly MinusLastSeen: "-last_seen";
};
export type EventNamesSortProperty = ClosedEnum<typeof EventNamesSortProperty>;
/** @internal */
export declare const EventNamesSortProperty$inboundSchema: z.ZodNativeEnum<typeof EventNamesSortProperty>;
/** @internal */
export declare const EventNamesSortProperty$outboundSchema: z.ZodNativeEnum<typeof EventNamesSortProperty>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventNamesSortProperty$ {
    /** @deprecated use `EventNamesSortProperty$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Name: "name";
        readonly MinusName: "-name";
        readonly Occurrences: "occurrences";
        readonly MinusOccurrences: "-occurrences";
        readonly FirstSeen: "first_seen";
        readonly MinusFirstSeen: "-first_seen";
        readonly LastSeen: "last_seen";
        readonly MinusLastSeen: "-last_seen";
    }>;
    /** @deprecated use `EventNamesSortProperty$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Name: "name";
        readonly MinusName: "-name";
        readonly Occurrences: "occurrences";
        readonly MinusOccurrences: "-occurrences";
        readonly FirstSeen: "first_seen";
        readonly MinusFirstSeen: "-first_seen";
        readonly LastSeen: "last_seen";
        readonly MinusLastSeen: "-last_seen";
    }>;
}
//# sourceMappingURL=eventnamessortproperty.d.ts.map