import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
import { Payment, Payment$Outbound } from "./payment.js";
export type ListResource = {
    items: Array<Payment>;
    pagination: Pagination;
};
/** @internal */
export declare const ListResource$inboundSchema: z.ZodType<ListResource, z.ZodTypeDef, unknown>;
/** @internal */
export type ListResource$Outbound = {
    items: Array<Payment$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const ListResource$outboundSchema: z.ZodType<ListResource$Outbound, z.ZodTypeDef, ListResource>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListResource$ {
    /** @deprecated use `ListResource$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListResource, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListResource$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListResource$Outbound, z.ZodTypeDef, ListResource>;
    /** @deprecated use `ListResource$Outbound` instead. */
    type Outbound = ListResource$Outbound;
}
export declare function listResourceToJSON(listResource: ListResource): string;
export declare function listResourceFromJSON(jsonString: string): SafeParseResult<ListResource, SDKValidationError>;
//# sourceMappingURL=listresource.d.ts.map