import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Additional metadata for a card payment method.
 */
export type CardPaymentMetadata = {
    /**
     * The brand of the card used for the payment.
     */
    brand: string;
    /**
     * The last 4 digits of the card number.
     */
    last4: string;
};
/** @internal */
export declare const CardPaymentMetadata$inboundSchema: z.ZodType<CardPaymentMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type CardPaymentMetadata$Outbound = {
    brand: string;
    last4: string;
};
/** @internal */
export declare const CardPaymentMetadata$outboundSchema: z.ZodType<CardPaymentMetadata$Outbound, z.ZodTypeDef, CardPaymentMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CardPaymentMetadata$ {
    /** @deprecated use `CardPaymentMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CardPaymentMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `CardPaymentMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CardPaymentMetadata$Outbound, z.ZodTypeDef, CardPaymentMetadata>;
    /** @deprecated use `CardPaymentMetadata$Outbound` instead. */
    type Outbound = CardPaymentMetadata$Outbound;
}
export declare function cardPaymentMetadataToJSON(cardPaymentMetadata: CardPaymentMetadata): string;
export declare function cardPaymentMetadataFromJSON(jsonString: string): SafeParseResult<CardPaymentMetadata, SDKValidationError>;
//# sourceMappingURL=cardpaymentmetadata.d.ts.map