"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BenefitGrantMetadata$ = exports.BenefitGrantMetadata$outboundSchema = exports.BenefitGrantMetadata$inboundSchema = void 0;
exports.benefitGrantMetadataToJSON = benefitGrantMetadataToJSON;
exports.benefitGrantMetadataFromJSON = benefitGrantMetadataFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const benefittype_js_1 = require("./benefittype.js");
/** @internal */
exports.BenefitGrantMetadata$inboundSchema = z.object({
    benefit_id: z.string(),
    benefit_grant_id: z.string(),
    benefit_type: benefittype_js_1.BenefitType$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "benefit_id": "benefitId",
        "benefit_grant_id": "benefitGrantId",
        "benefit_type": "benefitType",
    });
});
/** @internal */
exports.BenefitGrantMetadata$outboundSchema = z.object({
    benefitId: z.string(),
    benefitGrantId: z.string(),
    benefitType: benefittype_js_1.BenefitType$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        benefitId: "benefit_id",
        benefitGrantId: "benefit_grant_id",
        benefitType: "benefit_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitGrantMetadata$;
(function (BenefitGrantMetadata$) {
    /** @deprecated use `BenefitGrantMetadata$inboundSchema` instead. */
    BenefitGrantMetadata$.inboundSchema = exports.BenefitGrantMetadata$inboundSchema;
    /** @deprecated use `BenefitGrantMetadata$outboundSchema` instead. */
    BenefitGrantMetadata$.outboundSchema = exports.BenefitGrantMetadata$outboundSchema;
})(BenefitGrantMetadata$ || (exports.BenefitGrantMetadata$ = BenefitGrantMetadata$ = {}));
function benefitGrantMetadataToJSON(benefitGrantMetadata) {
    return JSON.stringify(exports.BenefitGrantMetadata$outboundSchema.parse(benefitGrantMetadata));
}
function benefitGrantMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitGrantMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitGrantMetadata' from JSON`);
}
//# sourceMappingURL=benefitgrantmetadata.js.map