import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitType } from "./benefittype.js";
export type BenefitGrantMetadata = {
    benefitId: string;
    benefitGrantId: string;
    benefitType: BenefitType;
};
/** @internal */
export declare const BenefitGrantMetadata$inboundSchema: z.ZodType<BenefitGrantMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGrantMetadata$Outbound = {
    benefit_id: string;
    benefit_grant_id: string;
    benefit_type: string;
};
/** @internal */
export declare const BenefitGrantMetadata$outboundSchema: z.ZodType<BenefitGrantMetadata$Outbound, z.ZodTypeDef, BenefitGrantMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGrantMetadata$ {
    /** @deprecated use `BenefitGrantMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGrantMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGrantMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGrantMetadata$Outbound, z.ZodTypeDef, BenefitGrantMetadata>;
    /** @deprecated use `BenefitGrantMetadata$Outbound` instead. */
    type Outbound = BenefitGrantMetadata$Outbound;
}
export declare function benefitGrantMetadataToJSON(benefitGrantMetadata: BenefitGrantMetadata): string;
export declare function benefitGrantMetadataFromJSON(jsonString: string): SafeParseResult<BenefitGrantMetadata, SDKValidationError>;
//# sourceMappingURL=benefitgrantmetadata.d.ts.map