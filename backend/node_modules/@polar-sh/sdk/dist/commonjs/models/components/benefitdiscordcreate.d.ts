import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitDiscordCreateProperties, BenefitDiscordCreateProperties$Outbound } from "./benefitdiscordcreateproperties.js";
export type BenefitDiscordCreateMetadata = string | number | number | boolean;
export type BenefitDiscordCreate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A floating-point number
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    type: "discord";
    /**
     * The description of the benefit. Will be displayed on products having this benefit.
     */
    description: string;
    /**
     * The ID of the organization owning the benefit. **Required unless you use an organization token.**
     */
    organizationId?: string | null | undefined;
    /**
     * Properties to create a benefit of type `discord`.
     */
    properties: BenefitDiscordCreateProperties;
};
/** @internal */
export declare const BenefitDiscordCreateMetadata$inboundSchema: z.ZodType<BenefitDiscordCreateMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitDiscordCreateMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitDiscordCreateMetadata$outboundSchema: z.ZodType<BenefitDiscordCreateMetadata$Outbound, z.ZodTypeDef, BenefitDiscordCreateMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDiscordCreateMetadata$ {
    /** @deprecated use `BenefitDiscordCreateMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitDiscordCreateMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitDiscordCreateMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitDiscordCreateMetadata$Outbound, z.ZodTypeDef, BenefitDiscordCreateMetadata>;
    /** @deprecated use `BenefitDiscordCreateMetadata$Outbound` instead. */
    type Outbound = BenefitDiscordCreateMetadata$Outbound;
}
export declare function benefitDiscordCreateMetadataToJSON(benefitDiscordCreateMetadata: BenefitDiscordCreateMetadata): string;
export declare function benefitDiscordCreateMetadataFromJSON(jsonString: string): SafeParseResult<BenefitDiscordCreateMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitDiscordCreate$inboundSchema: z.ZodType<BenefitDiscordCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitDiscordCreate$Outbound = {
    metadata?: {
        [k: string]: string | number | number | boolean;
    } | undefined;
    type: "discord";
    description: string;
    organization_id?: string | null | undefined;
    properties: BenefitDiscordCreateProperties$Outbound;
};
/** @internal */
export declare const BenefitDiscordCreate$outboundSchema: z.ZodType<BenefitDiscordCreate$Outbound, z.ZodTypeDef, BenefitDiscordCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDiscordCreate$ {
    /** @deprecated use `BenefitDiscordCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitDiscordCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitDiscordCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitDiscordCreate$Outbound, z.ZodTypeDef, BenefitDiscordCreate>;
    /** @deprecated use `BenefitDiscordCreate$Outbound` instead. */
    type Outbound = BenefitDiscordCreate$Outbound;
}
export declare function benefitDiscordCreateToJSON(benefitDiscordCreate: BenefitDiscordCreate): string;
export declare function benefitDiscordCreateFromJSON(jsonString: string): SafeParseResult<BenefitDiscordCreate, SDKValidationError>;
//# sourceMappingURL=benefitdiscordcreate.d.ts.map