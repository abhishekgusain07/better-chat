import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitCustomSubscriberProperties, BenefitCustomSubscriberProperties$Outbound } from "./benefitcustomsubscriberproperties.js";
import { Organization, Organization$Outbound } from "./organization.js";
export type BenefitCustomSubscriberMetadata = string | number | number | boolean;
export type BenefitCustomSubscriber = {
    /**
     * The ID of the benefit.
     */
    id: string;
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    type: "custom";
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    metadata: {
        [k: string]: string | number | number | boolean;
    };
    organization: Organization;
    /**
     * Properties available to subscribers for a benefit of type `custom`.
     */
    properties: BenefitCustomSubscriberProperties;
};
/** @internal */
export declare const BenefitCustomSubscriberMetadata$inboundSchema: z.ZodType<BenefitCustomSubscriberMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitCustomSubscriberMetadata$Outbound = string | number | number | boolean;
/** @internal */
export declare const BenefitCustomSubscriberMetadata$outboundSchema: z.ZodType<BenefitCustomSubscriberMetadata$Outbound, z.ZodTypeDef, BenefitCustomSubscriberMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitCustomSubscriberMetadata$ {
    /** @deprecated use `BenefitCustomSubscriberMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitCustomSubscriberMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitCustomSubscriberMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitCustomSubscriberMetadata$Outbound, z.ZodTypeDef, BenefitCustomSubscriberMetadata>;
    /** @deprecated use `BenefitCustomSubscriberMetadata$Outbound` instead. */
    type Outbound = BenefitCustomSubscriberMetadata$Outbound;
}
export declare function benefitCustomSubscriberMetadataToJSON(benefitCustomSubscriberMetadata: BenefitCustomSubscriberMetadata): string;
export declare function benefitCustomSubscriberMetadataFromJSON(jsonString: string): SafeParseResult<BenefitCustomSubscriberMetadata, SDKValidationError>;
/** @internal */
export declare const BenefitCustomSubscriber$inboundSchema: z.ZodType<BenefitCustomSubscriber, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitCustomSubscriber$Outbound = {
    id: string;
    created_at: string;
    modified_at: string | null;
    type: "custom";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    metadata: {
        [k: string]: string | number | number | boolean;
    };
    organization: Organization$Outbound;
    properties: BenefitCustomSubscriberProperties$Outbound;
};
/** @internal */
export declare const BenefitCustomSubscriber$outboundSchema: z.ZodType<BenefitCustomSubscriber$Outbound, z.ZodTypeDef, BenefitCustomSubscriber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitCustomSubscriber$ {
    /** @deprecated use `BenefitCustomSubscriber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitCustomSubscriber, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitCustomSubscriber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitCustomSubscriber$Outbound, z.ZodTypeDef, BenefitCustomSubscriber>;
    /** @deprecated use `BenefitCustomSubscriber$Outbound` instead. */
    type Outbound = BenefitCustomSubscriber$Outbound;
}
export declare function benefitCustomSubscriberToJSON(benefitCustomSubscriber: BenefitCustomSubscriber): string;
export declare function benefitCustomSubscriberFromJSON(jsonString: string): SafeParseResult<BenefitCustomSubscriber, SDKValidationError>;
//# sourceMappingURL=benefitcustomsubscriber.d.ts.map