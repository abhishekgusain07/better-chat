"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerStateBenefitGrant$ = exports.CustomerStateBenefitGrant$outboundSchema = exports.CustomerStateBenefitGrant$inboundSchema = exports.CustomerStateBenefitGrantProperties$ = exports.CustomerStateBenefitGrantProperties$outboundSchema = exports.CustomerStateBenefitGrantProperties$inboundSchema = exports.BenefitMetadata$ = exports.BenefitMetadata$outboundSchema = exports.BenefitMetadata$inboundSchema = void 0;
exports.benefitMetadataToJSON = benefitMetadataToJSON;
exports.benefitMetadataFromJSON = benefitMetadataFromJSON;
exports.customerStateBenefitGrantPropertiesToJSON = customerStateBenefitGrantPropertiesToJSON;
exports.customerStateBenefitGrantPropertiesFromJSON = customerStateBenefitGrantPropertiesFromJSON;
exports.customerStateBenefitGrantToJSON = customerStateBenefitGrantToJSON;
exports.customerStateBenefitGrantFromJSON = customerStateBenefitGrantFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const benefitgrantcustomproperties_js_1 = require("./benefitgrantcustomproperties.js");
const benefitgrantdiscordproperties_js_1 = require("./benefitgrantdiscordproperties.js");
const benefitgrantdownloadablesproperties_js_1 = require("./benefitgrantdownloadablesproperties.js");
const benefitgrantgithubrepositoryproperties_js_1 = require("./benefitgrantgithubrepositoryproperties.js");
const benefitgrantlicensekeysproperties_js_1 = require("./benefitgrantlicensekeysproperties.js");
const benefittype_js_1 = require("./benefittype.js");
/** @internal */
exports.BenefitMetadata$inboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/** @internal */
exports.BenefitMetadata$outboundSchema = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitMetadata$;
(function (BenefitMetadata$) {
    /** @deprecated use `BenefitMetadata$inboundSchema` instead. */
    BenefitMetadata$.inboundSchema = exports.BenefitMetadata$inboundSchema;
    /** @deprecated use `BenefitMetadata$outboundSchema` instead. */
    BenefitMetadata$.outboundSchema = exports.BenefitMetadata$outboundSchema;
})(BenefitMetadata$ || (exports.BenefitMetadata$ = BenefitMetadata$ = {}));
function benefitMetadataToJSON(benefitMetadata) {
    return JSON.stringify(exports.BenefitMetadata$outboundSchema.parse(benefitMetadata));
}
function benefitMetadataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.BenefitMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BenefitMetadata' from JSON`);
}
/** @internal */
exports.CustomerStateBenefitGrantProperties$inboundSchema = z.union([
    benefitgrantdiscordproperties_js_1.BenefitGrantDiscordProperties$inboundSchema,
    benefitgrantgithubrepositoryproperties_js_1.BenefitGrantGitHubRepositoryProperties$inboundSchema,
    benefitgrantdownloadablesproperties_js_1.BenefitGrantDownloadablesProperties$inboundSchema,
    benefitgrantlicensekeysproperties_js_1.BenefitGrantLicenseKeysProperties$inboundSchema,
    benefitgrantcustomproperties_js_1.BenefitGrantCustomProperties$inboundSchema,
]);
/** @internal */
exports.CustomerStateBenefitGrantProperties$outboundSchema = z.union([
    benefitgrantdiscordproperties_js_1.BenefitGrantDiscordProperties$outboundSchema,
    benefitgrantgithubrepositoryproperties_js_1.BenefitGrantGitHubRepositoryProperties$outboundSchema,
    benefitgrantdownloadablesproperties_js_1.BenefitGrantDownloadablesProperties$outboundSchema,
    benefitgrantlicensekeysproperties_js_1.BenefitGrantLicenseKeysProperties$outboundSchema,
    benefitgrantcustomproperties_js_1.BenefitGrantCustomProperties$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerStateBenefitGrantProperties$;
(function (CustomerStateBenefitGrantProperties$) {
    /** @deprecated use `CustomerStateBenefitGrantProperties$inboundSchema` instead. */
    CustomerStateBenefitGrantProperties$.inboundSchema = exports.CustomerStateBenefitGrantProperties$inboundSchema;
    /** @deprecated use `CustomerStateBenefitGrantProperties$outboundSchema` instead. */
    CustomerStateBenefitGrantProperties$.outboundSchema = exports.CustomerStateBenefitGrantProperties$outboundSchema;
})(CustomerStateBenefitGrantProperties$ || (exports.CustomerStateBenefitGrantProperties$ = CustomerStateBenefitGrantProperties$ = {}));
function customerStateBenefitGrantPropertiesToJSON(customerStateBenefitGrantProperties) {
    return JSON.stringify(exports.CustomerStateBenefitGrantProperties$outboundSchema.parse(customerStateBenefitGrantProperties));
}
function customerStateBenefitGrantPropertiesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerStateBenefitGrantProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerStateBenefitGrantProperties' from JSON`);
}
/** @internal */
exports.CustomerStateBenefitGrant$inboundSchema = z.object({
    id: z.string(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    granted_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    benefit_id: z.string(),
    benefit_type: benefittype_js_1.BenefitType$inboundSchema,
    benefit_metadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),
    properties: z.union([
        benefitgrantdiscordproperties_js_1.BenefitGrantDiscordProperties$inboundSchema,
        benefitgrantgithubrepositoryproperties_js_1.BenefitGrantGitHubRepositoryProperties$inboundSchema,
        benefitgrantdownloadablesproperties_js_1.BenefitGrantDownloadablesProperties$inboundSchema,
        benefitgrantlicensekeysproperties_js_1.BenefitGrantLicenseKeysProperties$inboundSchema,
        benefitgrantcustomproperties_js_1.BenefitGrantCustomProperties$inboundSchema,
    ]),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "granted_at": "grantedAt",
        "benefit_id": "benefitId",
        "benefit_type": "benefitType",
        "benefit_metadata": "benefitMetadata",
    });
});
/** @internal */
exports.CustomerStateBenefitGrant$outboundSchema = z.object({
    id: z.string(),
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    grantedAt: z.date().transform(v => v.toISOString()),
    benefitId: z.string(),
    benefitType: benefittype_js_1.BenefitType$outboundSchema,
    benefitMetadata: z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),
    properties: z.union([
        benefitgrantdiscordproperties_js_1.BenefitGrantDiscordProperties$outboundSchema,
        benefitgrantgithubrepositoryproperties_js_1.BenefitGrantGitHubRepositoryProperties$outboundSchema,
        benefitgrantdownloadablesproperties_js_1.BenefitGrantDownloadablesProperties$outboundSchema,
        benefitgrantlicensekeysproperties_js_1.BenefitGrantLicenseKeysProperties$outboundSchema,
        benefitgrantcustomproperties_js_1.BenefitGrantCustomProperties$outboundSchema,
    ]),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        grantedAt: "granted_at",
        benefitId: "benefit_id",
        benefitType: "benefit_type",
        benefitMetadata: "benefit_metadata",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerStateBenefitGrant$;
(function (CustomerStateBenefitGrant$) {
    /** @deprecated use `CustomerStateBenefitGrant$inboundSchema` instead. */
    CustomerStateBenefitGrant$.inboundSchema = exports.CustomerStateBenefitGrant$inboundSchema;
    /** @deprecated use `CustomerStateBenefitGrant$outboundSchema` instead. */
    CustomerStateBenefitGrant$.outboundSchema = exports.CustomerStateBenefitGrant$outboundSchema;
})(CustomerStateBenefitGrant$ || (exports.CustomerStateBenefitGrant$ = CustomerStateBenefitGrant$ = {}));
function customerStateBenefitGrantToJSON(customerStateBenefitGrant) {
    return JSON.stringify(exports.CustomerStateBenefitGrant$outboundSchema.parse(customerStateBenefitGrant));
}
function customerStateBenefitGrantFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerStateBenefitGrant$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerStateBenefitGrant' from JSON`);
}
//# sourceMappingURL=customerstatebenefitgrant.js.map