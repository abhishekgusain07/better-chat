import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BenefitType } from "./benefittype.js";
export type BenefitPublic = {
    /**
     * The ID of the benefit.
     */
    id: string;
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    type: BenefitType;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
};
/** @internal */
export declare const BenefitPublic$inboundSchema: z.ZodType<BenefitPublic, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitPublic$Outbound = {
    id: string;
    created_at: string;
    modified_at: string | null;
    type: string;
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
};
/** @internal */
export declare const BenefitPublic$outboundSchema: z.ZodType<BenefitPublic$Outbound, z.ZodTypeDef, BenefitPublic>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitPublic$ {
    /** @deprecated use `BenefitPublic$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitPublic, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitPublic$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitPublic$Outbound, z.ZodTypeDef, BenefitPublic>;
    /** @deprecated use `BenefitPublic$Outbound` instead. */
    type Outbound = BenefitPublic$Outbound;
}
export declare function benefitPublicToJSON(benefitPublic: BenefitPublic): string;
export declare function benefitPublicFromJSON(jsonString: string): SafeParseResult<BenefitPublic, SDKValidationError>;
//# sourceMappingURL=benefitpublic.d.ts.map