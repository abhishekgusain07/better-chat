import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomerMeter, CustomerMeter$Outbound } from "./customermeter.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
export type ListResourceCustomerMeter = {
    items: Array<CustomerMeter>;
    pagination: Pagination;
};
/** @internal */
export declare const ListResourceCustomerMeter$inboundSchema: z.ZodType<ListResourceCustomerMeter, z.ZodTypeDef, unknown>;
/** @internal */
export type ListResourceCustomerMeter$Outbound = {
    items: Array<CustomerMeter$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const ListResourceCustomerMeter$outboundSchema: z.ZodType<ListResourceCustomerMeter$Outbound, z.ZodTypeDef, ListResourceCustomerMeter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListResourceCustomerMeter$ {
    /** @deprecated use `ListResourceCustomerMeter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListResourceCustomerMeter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListResourceCustomerMeter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListResourceCustomerMeter$Outbound, z.ZodTypeDef, ListResourceCustomerMeter>;
    /** @deprecated use `ListResourceCustomerMeter$Outbound` instead. */
    type Outbound = ListResourceCustomerMeter$Outbound;
}
export declare function listResourceCustomerMeterToJSON(listResourceCustomerMeter: ListResourceCustomerMeter): string;
export declare function listResourceCustomerMeterFromJSON(jsonString: string): SafeParseResult<ListResourceCustomerMeter, SDKValidationError>;
//# sourceMappingURL=listresourcecustomermeter.d.ts.map