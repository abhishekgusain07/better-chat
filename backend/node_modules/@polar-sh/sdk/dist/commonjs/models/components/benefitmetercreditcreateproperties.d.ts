import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Properties for creating a benefit of type `meter_unit`.
 */
export type BenefitMeterCreditCreateProperties = {
    units: number;
    rollover: boolean;
    meterId: string;
};
/** @internal */
export declare const BenefitMeterCreditCreateProperties$inboundSchema: z.ZodType<BenefitMeterCreditCreateProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitMeterCreditCreateProperties$Outbound = {
    units: number;
    rollover: boolean;
    meter_id: string;
};
/** @internal */
export declare const BenefitMeterCreditCreateProperties$outboundSchema: z.ZodType<BenefitMeterCreditCreateProperties$Outbound, z.ZodTypeDef, BenefitMeterCreditCreateProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitMeterCreditCreateProperties$ {
    /** @deprecated use `BenefitMeterCreditCreateProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitMeterCreditCreateProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitMeterCreditCreateProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitMeterCreditCreateProperties$Outbound, z.ZodTypeDef, BenefitMeterCreditCreateProperties>;
    /** @deprecated use `BenefitMeterCreditCreateProperties$Outbound` instead. */
    type Outbound = BenefitMeterCreditCreateProperties$Outbound;
}
export declare function benefitMeterCreditCreatePropertiesToJSON(benefitMeterCreditCreateProperties: BenefitMeterCreditCreateProperties): string;
export declare function benefitMeterCreditCreatePropertiesFromJSON(jsonString: string): SafeParseResult<BenefitMeterCreditCreateProperties, SDKValidationError>;
//# sourceMappingURL=benefitmetercreditcreateproperties.d.ts.map