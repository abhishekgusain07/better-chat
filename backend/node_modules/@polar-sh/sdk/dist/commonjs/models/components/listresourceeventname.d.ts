import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { EventName, EventName$Outbound } from "./eventname.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
export type ListResourceEventName = {
    items: Array<EventName>;
    pagination: Pagination;
};
/** @internal */
export declare const ListResourceEventName$inboundSchema: z.ZodType<ListResourceEventName, z.ZodTypeDef, unknown>;
/** @internal */
export type ListResourceEventName$Outbound = {
    items: Array<EventName$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const ListResourceEventName$outboundSchema: z.ZodType<ListResourceEventName$Outbound, z.ZodTypeDef, ListResourceEventName>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListResourceEventName$ {
    /** @deprecated use `ListResourceEventName$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListResourceEventName, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListResourceEventName$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListResourceEventName$Outbound, z.ZodTypeDef, ListResourceEventName>;
    /** @deprecated use `ListResourceEventName$Outbound` instead. */
    type Outbound = ListResourceEventName$Outbound;
}
export declare function listResourceEventNameToJSON(listResourceEventName: ListResourceEventName): string;
export declare function listResourceEventNameFromJSON(jsonString: string): SafeParseResult<ListResourceEventName, SDKValidationError>;
//# sourceMappingURL=listresourceeventname.d.ts.map