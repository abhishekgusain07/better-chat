import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const CustomerMeterSortProperty: {
    readonly CreatedAt: "created_at";
    readonly MinusCreatedAt: "-created_at";
    readonly ModifiedAt: "modified_at";
    readonly MinusModifiedAt: "-modified_at";
    readonly CustomerId: "customer_id";
    readonly MinusCustomerId: "-customer_id";
    readonly CustomerName: "customer_name";
    readonly MinusCustomerName: "-customer_name";
    readonly MeterId: "meter_id";
    readonly MinusMeterId: "-meter_id";
    readonly MeterName: "meter_name";
    readonly MinusMeterName: "-meter_name";
    readonly ConsumedUnits: "consumed_units";
    readonly MinusConsumedUnits: "-consumed_units";
    readonly CreditedUnits: "credited_units";
    readonly MinusCreditedUnits: "-credited_units";
    readonly Balance: "balance";
    readonly MinusBalance: "-balance";
};
export type CustomerMeterSortProperty = ClosedEnum<typeof CustomerMeterSortProperty>;
/** @internal */
export declare const CustomerMeterSortProperty$inboundSchema: z.ZodNativeEnum<typeof CustomerMeterSortProperty>;
/** @internal */
export declare const CustomerMeterSortProperty$outboundSchema: z.ZodNativeEnum<typeof CustomerMeterSortProperty>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerMeterSortProperty$ {
    /** @deprecated use `CustomerMeterSortProperty$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly CreatedAt: "created_at";
        readonly MinusCreatedAt: "-created_at";
        readonly ModifiedAt: "modified_at";
        readonly MinusModifiedAt: "-modified_at";
        readonly CustomerId: "customer_id";
        readonly MinusCustomerId: "-customer_id";
        readonly CustomerName: "customer_name";
        readonly MinusCustomerName: "-customer_name";
        readonly MeterId: "meter_id";
        readonly MinusMeterId: "-meter_id";
        readonly MeterName: "meter_name";
        readonly MinusMeterName: "-meter_name";
        readonly ConsumedUnits: "consumed_units";
        readonly MinusConsumedUnits: "-consumed_units";
        readonly CreditedUnits: "credited_units";
        readonly MinusCreditedUnits: "-credited_units";
        readonly Balance: "balance";
        readonly MinusBalance: "-balance";
    }>;
    /** @deprecated use `CustomerMeterSortProperty$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly CreatedAt: "created_at";
        readonly MinusCreatedAt: "-created_at";
        readonly ModifiedAt: "modified_at";
        readonly MinusModifiedAt: "-modified_at";
        readonly CustomerId: "customer_id";
        readonly MinusCustomerId: "-customer_id";
        readonly CustomerName: "customer_name";
        readonly MinusCustomerName: "-customer_name";
        readonly MeterId: "meter_id";
        readonly MinusMeterId: "-meter_id";
        readonly MeterName: "meter_name";
        readonly MinusMeterName: "-meter_name";
        readonly ConsumedUnits: "consumed_units";
        readonly MinusConsumedUnits: "-consumed_units";
        readonly CreditedUnits: "credited_units";
        readonly MinusCreditedUnits: "-credited_units";
        readonly Balance: "balance";
        readonly MinusBalance: "-balance";
    }>;
}
//# sourceMappingURL=customermetersortproperty.d.ts.map