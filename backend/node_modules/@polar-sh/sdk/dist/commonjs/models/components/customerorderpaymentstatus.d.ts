import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Payment status for an order.
 */
export type CustomerOrderPaymentStatus = {
    /**
     * Current payment status.
     */
    status: string;
    /**
     * Error message if payment failed.
     */
    error?: string | null | undefined;
};
/** @internal */
export declare const CustomerOrderPaymentStatus$inboundSchema: z.ZodType<CustomerOrderPaymentStatus, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerOrderPaymentStatus$Outbound = {
    status: string;
    error?: string | null | undefined;
};
/** @internal */
export declare const CustomerOrderPaymentStatus$outboundSchema: z.ZodType<CustomerOrderPaymentStatus$Outbound, z.ZodTypeDef, CustomerOrderPaymentStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerOrderPaymentStatus$ {
    /** @deprecated use `CustomerOrderPaymentStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerOrderPaymentStatus, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerOrderPaymentStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerOrderPaymentStatus$Outbound, z.ZodTypeDef, CustomerOrderPaymentStatus>;
    /** @deprecated use `CustomerOrderPaymentStatus$Outbound` instead. */
    type Outbound = CustomerOrderPaymentStatus$Outbound;
}
export declare function customerOrderPaymentStatusToJSON(customerOrderPaymentStatus: CustomerOrderPaymentStatus): string;
export declare function customerOrderPaymentStatusFromJSON(jsonString: string): SafeParseResult<CustomerOrderPaymentStatus, SDKValidationError>;
//# sourceMappingURL=customerorderpaymentstatus.d.ts.map