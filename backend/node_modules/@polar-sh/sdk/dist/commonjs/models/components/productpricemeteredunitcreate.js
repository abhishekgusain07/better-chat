"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductPriceMeteredUnitCreate$ = exports.ProductPriceMeteredUnitCreate$outboundSchema = exports.ProductPriceMeteredUnitCreate$inboundSchema = exports.UnitAmount$ = exports.UnitAmount$outboundSchema = exports.UnitAmount$inboundSchema = void 0;
exports.unitAmountToJSON = unitAmountToJSON;
exports.unitAmountFromJSON = unitAmountFromJSON;
exports.productPriceMeteredUnitCreateToJSON = productPriceMeteredUnitCreateToJSON;
exports.productPriceMeteredUnitCreateFromJSON = productPriceMeteredUnitCreateFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.UnitAmount$inboundSchema = z.union([z.number(), z.string()]);
/** @internal */
exports.UnitAmount$outboundSchema = z.union([z.number(), z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UnitAmount$;
(function (UnitAmount$) {
    /** @deprecated use `UnitAmount$inboundSchema` instead. */
    UnitAmount$.inboundSchema = exports.UnitAmount$inboundSchema;
    /** @deprecated use `UnitAmount$outboundSchema` instead. */
    UnitAmount$.outboundSchema = exports.UnitAmount$outboundSchema;
})(UnitAmount$ || (exports.UnitAmount$ = UnitAmount$ = {}));
function unitAmountToJSON(unitAmount) {
    return JSON.stringify(exports.UnitAmount$outboundSchema.parse(unitAmount));
}
function unitAmountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UnitAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UnitAmount' from JSON`);
}
/** @internal */
exports.ProductPriceMeteredUnitCreate$inboundSchema = z.object({
    amount_type: z.literal("metered_unit"),
    meter_id: z.string(),
    price_currency: z.string().default("usd"),
    unit_amount: z.union([z.number(), z.string()]),
    cap_amount: z.nullable(z.number().int()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "amount_type": "amountType",
        "meter_id": "meterId",
        "price_currency": "priceCurrency",
        "unit_amount": "unitAmount",
        "cap_amount": "capAmount",
    });
});
/** @internal */
exports.ProductPriceMeteredUnitCreate$outboundSchema = z.object({
    amountType: z.literal("metered_unit"),
    meterId: z.string(),
    priceCurrency: z.string().default("usd"),
    unitAmount: z.union([z.number(), z.string()]),
    capAmount: z.nullable(z.number().int()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        amountType: "amount_type",
        meterId: "meter_id",
        priceCurrency: "price_currency",
        unitAmount: "unit_amount",
        capAmount: "cap_amount",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductPriceMeteredUnitCreate$;
(function (ProductPriceMeteredUnitCreate$) {
    /** @deprecated use `ProductPriceMeteredUnitCreate$inboundSchema` instead. */
    ProductPriceMeteredUnitCreate$.inboundSchema = exports.ProductPriceMeteredUnitCreate$inboundSchema;
    /** @deprecated use `ProductPriceMeteredUnitCreate$outboundSchema` instead. */
    ProductPriceMeteredUnitCreate$.outboundSchema = exports.ProductPriceMeteredUnitCreate$outboundSchema;
})(ProductPriceMeteredUnitCreate$ || (exports.ProductPriceMeteredUnitCreate$ = ProductPriceMeteredUnitCreate$ = {}));
function productPriceMeteredUnitCreateToJSON(productPriceMeteredUnitCreate) {
    return JSON.stringify(exports.ProductPriceMeteredUnitCreate$outboundSchema.parse(productPriceMeteredUnitCreate));
}
function productPriceMeteredUnitCreateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductPriceMeteredUnitCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductPriceMeteredUnitCreate' from JSON`);
}
//# sourceMappingURL=productpricemeteredunitcreate.js.map