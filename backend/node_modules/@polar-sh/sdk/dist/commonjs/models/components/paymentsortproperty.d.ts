import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const PaymentSortProperty: {
    readonly CreatedAt: "created_at";
    readonly MinusCreatedAt: "-created_at";
    readonly Status: "status";
    readonly MinusStatus: "-status";
    readonly Amount: "amount";
    readonly MinusAmount: "-amount";
    readonly Method: "method";
    readonly MinusMethod: "-method";
};
export type PaymentSortProperty = ClosedEnum<typeof PaymentSortProperty>;
/** @internal */
export declare const PaymentSortProperty$inboundSchema: z.ZodNativeEnum<typeof PaymentSortProperty>;
/** @internal */
export declare const PaymentSortProperty$outboundSchema: z.ZodNativeEnum<typeof PaymentSortProperty>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentSortProperty$ {
    /** @deprecated use `PaymentSortProperty$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly CreatedAt: "created_at";
        readonly MinusCreatedAt: "-created_at";
        readonly Status: "status";
        readonly MinusStatus: "-status";
        readonly Amount: "amount";
        readonly MinusAmount: "-amount";
        readonly Method: "method";
        readonly MinusMethod: "-method";
    }>;
    /** @deprecated use `PaymentSortProperty$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly CreatedAt: "created_at";
        readonly MinusCreatedAt: "-created_at";
        readonly Status: "status";
        readonly MinusStatus: "-status";
        readonly Amount: "amount";
        readonly MinusAmount: "-amount";
        readonly Method: "method";
        readonly MinusMethod: "-method";
    }>;
}
//# sourceMappingURL=paymentsortproperty.d.ts.map