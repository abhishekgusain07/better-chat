import * as z from "zod";
import { PolarError } from "./polarerror.js";
export type PaymentNotReadyData = {
    error: "PaymentNotReady";
    detail: string;
};
export declare class PaymentNotReady extends PolarError {
    error: "PaymentNotReady";
    detail: string;
    /** The original data that was passed to this error instance. */
    data$: PaymentNotReadyData;
    constructor(err: PaymentNotReadyData, httpMeta: {
        response: Response;
        request: Request;
        body: string;
    });
}
/** @internal */
export declare const PaymentNotReady$inboundSchema: z.ZodType<PaymentNotReady, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentNotReady$Outbound = {
    error: "PaymentNotReady";
    detail: string;
};
/** @internal */
export declare const PaymentNotReady$outboundSchema: z.ZodType<PaymentNotReady$Outbound, z.ZodTypeDef, PaymentNotReady>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentNotReady$ {
    /** @deprecated use `PaymentNotReady$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentNotReady, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentNotReady$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentNotReady$Outbound, z.ZodTypeDef, PaymentNotReady>;
    /** @deprecated use `PaymentNotReady$Outbound` instead. */
    type Outbound = PaymentNotReady$Outbound;
}
//# sourceMappingURL=paymentnotready.d.ts.map