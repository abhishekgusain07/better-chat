import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type WebhooksRedeliverWebhookEventRequest = {
    /**
     * The webhook event ID.
     */
    id: string;
};
/** @internal */
export declare const WebhooksRedeliverWebhookEventRequest$inboundSchema: z.ZodType<WebhooksRedeliverWebhookEventRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhooksRedeliverWebhookEventRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const WebhooksRedeliverWebhookEventRequest$outboundSchema: z.ZodType<WebhooksRedeliverWebhookEventRequest$Outbound, z.ZodTypeDef, WebhooksRedeliverWebhookEventRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhooksRedeliverWebhookEventRequest$ {
    /** @deprecated use `WebhooksRedeliverWebhookEventRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhooksRedeliverWebhookEventRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhooksRedeliverWebhookEventRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhooksRedeliverWebhookEventRequest$Outbound, z.ZodTypeDef, WebhooksRedeliverWebhookEventRequest>;
    /** @deprecated use `WebhooksRedeliverWebhookEventRequest$Outbound` instead. */
    type Outbound = WebhooksRedeliverWebhookEventRequest$Outbound;
}
export declare function webhooksRedeliverWebhookEventRequestToJSON(webhooksRedeliverWebhookEventRequest: WebhooksRedeliverWebhookEventRequest): string;
export declare function webhooksRedeliverWebhookEventRequestFromJSON(jsonString: string): SafeParseResult<WebhooksRedeliverWebhookEventRequest, SDKValidationError>;
//# sourceMappingURL=webhooksredeliverwebhookevent.d.ts.map