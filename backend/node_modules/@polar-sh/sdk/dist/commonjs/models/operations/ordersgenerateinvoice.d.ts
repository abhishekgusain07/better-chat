import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type OrdersGenerateInvoiceRequest = {
    /**
     * The order ID.
     */
    id: string;
};
/** @internal */
export declare const OrdersGenerateInvoiceRequest$inboundSchema: z.ZodType<OrdersGenerateInvoiceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type OrdersGenerateInvoiceRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const OrdersGenerateInvoiceRequest$outboundSchema: z.ZodType<OrdersGenerateInvoiceRequest$Outbound, z.ZodTypeDef, OrdersGenerateInvoiceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrdersGenerateInvoiceRequest$ {
    /** @deprecated use `OrdersGenerateInvoiceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrdersGenerateInvoiceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrdersGenerateInvoiceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrdersGenerateInvoiceRequest$Outbound, z.ZodTypeDef, OrdersGenerateInvoiceRequest>;
    /** @deprecated use `OrdersGenerateInvoiceRequest$Outbound` instead. */
    type Outbound = OrdersGenerateInvoiceRequest$Outbound;
}
export declare function ordersGenerateInvoiceRequestToJSON(ordersGenerateInvoiceRequest: OrdersGenerateInvoiceRequest): string;
export declare function ordersGenerateInvoiceRequestFromJSON(jsonString: string): SafeParseResult<OrdersGenerateInvoiceRequest, SDKValidationError>;
//# sourceMappingURL=ordersgenerateinvoice.d.ts.map