import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalOrdersGenerateInvoiceSecurity = {
    customerSession: string;
};
export type CustomerPortalOrdersGenerateInvoiceRequest = {
    /**
     * The order ID.
     */
    id: string;
};
/** @internal */
export declare const CustomerPortalOrdersGenerateInvoiceSecurity$inboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersGenerateInvoiceSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalOrdersGenerateInvoiceSecurity$outboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersGenerateInvoiceSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersGenerateInvoiceSecurity$ {
    /** @deprecated use `CustomerPortalOrdersGenerateInvoiceSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersGenerateInvoiceSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersGenerateInvoiceSecurity>;
    /** @deprecated use `CustomerPortalOrdersGenerateInvoiceSecurity$Outbound` instead. */
    type Outbound = CustomerPortalOrdersGenerateInvoiceSecurity$Outbound;
}
export declare function customerPortalOrdersGenerateInvoiceSecurityToJSON(customerPortalOrdersGenerateInvoiceSecurity: CustomerPortalOrdersGenerateInvoiceSecurity): string;
export declare function customerPortalOrdersGenerateInvoiceSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersGenerateInvoiceSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersGenerateInvoiceRequest$inboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersGenerateInvoiceRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const CustomerPortalOrdersGenerateInvoiceRequest$outboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersGenerateInvoiceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersGenerateInvoiceRequest$ {
    /** @deprecated use `CustomerPortalOrdersGenerateInvoiceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersGenerateInvoiceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersGenerateInvoiceRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersGenerateInvoiceRequest>;
    /** @deprecated use `CustomerPortalOrdersGenerateInvoiceRequest$Outbound` instead. */
    type Outbound = CustomerPortalOrdersGenerateInvoiceRequest$Outbound;
}
export declare function customerPortalOrdersGenerateInvoiceRequestToJSON(customerPortalOrdersGenerateInvoiceRequest: CustomerPortalOrdersGenerateInvoiceRequest): string;
export declare function customerPortalOrdersGenerateInvoiceRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersGenerateInvoiceRequest, SDKValidationError>;
//# sourceMappingURL=customerportalordersgenerateinvoice.d.ts.map