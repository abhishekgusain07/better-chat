import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { ListResourceCustomerPaymentMethod, ListResourceCustomerPaymentMethod$Outbound } from "../components/listresourcecustomerpaymentmethod.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalCustomersListPaymentMethodsSecurity = {
    customerSession: string;
};
export type CustomerPortalCustomersListPaymentMethodsRequest = {
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
};
export type CustomerPortalCustomersListPaymentMethodsResponse = {
    result: ListResourceCustomerPaymentMethod;
};
/** @internal */
export declare const CustomerPortalCustomersListPaymentMethodsSecurity$inboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomersListPaymentMethodsSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalCustomersListPaymentMethodsSecurity$outboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsSecurity$Outbound, z.ZodTypeDef, CustomerPortalCustomersListPaymentMethodsSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomersListPaymentMethodsSecurity$ {
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsSecurity$Outbound, z.ZodTypeDef, CustomerPortalCustomersListPaymentMethodsSecurity>;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsSecurity$Outbound` instead. */
    type Outbound = CustomerPortalCustomersListPaymentMethodsSecurity$Outbound;
}
export declare function customerPortalCustomersListPaymentMethodsSecurityToJSON(customerPortalCustomersListPaymentMethodsSecurity: CustomerPortalCustomersListPaymentMethodsSecurity): string;
export declare function customerPortalCustomersListPaymentMethodsSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomersListPaymentMethodsSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalCustomersListPaymentMethodsRequest$inboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomersListPaymentMethodsRequest$Outbound = {
    page: number;
    limit: number;
};
/** @internal */
export declare const CustomerPortalCustomersListPaymentMethodsRequest$outboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsRequest$Outbound, z.ZodTypeDef, CustomerPortalCustomersListPaymentMethodsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomersListPaymentMethodsRequest$ {
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsRequest$Outbound, z.ZodTypeDef, CustomerPortalCustomersListPaymentMethodsRequest>;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsRequest$Outbound` instead. */
    type Outbound = CustomerPortalCustomersListPaymentMethodsRequest$Outbound;
}
export declare function customerPortalCustomersListPaymentMethodsRequestToJSON(customerPortalCustomersListPaymentMethodsRequest: CustomerPortalCustomersListPaymentMethodsRequest): string;
export declare function customerPortalCustomersListPaymentMethodsRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomersListPaymentMethodsRequest, SDKValidationError>;
/** @internal */
export declare const CustomerPortalCustomersListPaymentMethodsResponse$inboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomersListPaymentMethodsResponse$Outbound = {
    Result: ListResourceCustomerPaymentMethod$Outbound;
};
/** @internal */
export declare const CustomerPortalCustomersListPaymentMethodsResponse$outboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsResponse$Outbound, z.ZodTypeDef, CustomerPortalCustomersListPaymentMethodsResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomersListPaymentMethodsResponse$ {
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomersListPaymentMethodsResponse$Outbound, z.ZodTypeDef, CustomerPortalCustomersListPaymentMethodsResponse>;
    /** @deprecated use `CustomerPortalCustomersListPaymentMethodsResponse$Outbound` instead. */
    type Outbound = CustomerPortalCustomersListPaymentMethodsResponse$Outbound;
}
export declare function customerPortalCustomersListPaymentMethodsResponseToJSON(customerPortalCustomersListPaymentMethodsResponse: CustomerPortalCustomersListPaymentMethodsResponse): string;
export declare function customerPortalCustomersListPaymentMethodsResponseFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomersListPaymentMethodsResponse, SDKValidationError>;
//# sourceMappingURL=customerportalcustomerslistpaymentmethods.d.ts.map