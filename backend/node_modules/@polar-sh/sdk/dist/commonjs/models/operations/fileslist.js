"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilesListResponse$ = exports.FilesListResponse$outboundSchema = exports.FilesListResponse$inboundSchema = exports.FilesListRequest$ = exports.FilesListRequest$outboundSchema = exports.FilesListRequest$inboundSchema = exports.FileIDFilter$ = exports.FileIDFilter$outboundSchema = exports.FileIDFilter$inboundSchema = exports.FilesListQueryParamOrganizationIDFilter$ = exports.FilesListQueryParamOrganizationIDFilter$outboundSchema = exports.FilesListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.filesListQueryParamOrganizationIDFilterToJSON = filesListQueryParamOrganizationIDFilterToJSON;
exports.filesListQueryParamOrganizationIDFilterFromJSON = filesListQueryParamOrganizationIDFilterFromJSON;
exports.fileIDFilterToJSON = fileIDFilterToJSON;
exports.fileIDFilterFromJSON = fileIDFilterFromJSON;
exports.filesListRequestToJSON = filesListRequestToJSON;
exports.filesListRequestFromJSON = filesListRequestFromJSON;
exports.filesListResponseToJSON = filesListResponseToJSON;
exports.filesListResponseFromJSON = filesListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourcefileread_js_1 = require("../components/listresourcefileread.js");
/** @internal */
exports.FilesListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.FilesListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FilesListQueryParamOrganizationIDFilter$;
(function (FilesListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `FilesListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    FilesListQueryParamOrganizationIDFilter$.inboundSchema = exports.FilesListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `FilesListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    FilesListQueryParamOrganizationIDFilter$.outboundSchema = exports.FilesListQueryParamOrganizationIDFilter$outboundSchema;
})(FilesListQueryParamOrganizationIDFilter$ || (exports.FilesListQueryParamOrganizationIDFilter$ = FilesListQueryParamOrganizationIDFilter$ = {}));
function filesListQueryParamOrganizationIDFilterToJSON(filesListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.FilesListQueryParamOrganizationIDFilter$outboundSchema.parse(filesListQueryParamOrganizationIDFilter));
}
function filesListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FilesListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilesListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.FileIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.FileIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FileIDFilter$;
(function (FileIDFilter$) {
    /** @deprecated use `FileIDFilter$inboundSchema` instead. */
    FileIDFilter$.inboundSchema = exports.FileIDFilter$inboundSchema;
    /** @deprecated use `FileIDFilter$outboundSchema` instead. */
    FileIDFilter$.outboundSchema = exports.FileIDFilter$outboundSchema;
})(FileIDFilter$ || (exports.FileIDFilter$ = FileIDFilter$ = {}));
function fileIDFilterToJSON(fileIDFilter) {
    return JSON.stringify(exports.FileIDFilter$outboundSchema.parse(fileIDFilter));
}
function fileIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FileIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FileIDFilter' from JSON`);
}
/** @internal */
exports.FilesListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    ids: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.FilesListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    ids: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FilesListRequest$;
(function (FilesListRequest$) {
    /** @deprecated use `FilesListRequest$inboundSchema` instead. */
    FilesListRequest$.inboundSchema = exports.FilesListRequest$inboundSchema;
    /** @deprecated use `FilesListRequest$outboundSchema` instead. */
    FilesListRequest$.outboundSchema = exports.FilesListRequest$outboundSchema;
})(FilesListRequest$ || (exports.FilesListRequest$ = FilesListRequest$ = {}));
function filesListRequestToJSON(filesListRequest) {
    return JSON.stringify(exports.FilesListRequest$outboundSchema.parse(filesListRequest));
}
function filesListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FilesListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilesListRequest' from JSON`);
}
/** @internal */
exports.FilesListResponse$inboundSchema = z.object({
    Result: listresourcefileread_js_1.ListResourceFileRead$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.FilesListResponse$outboundSchema = z.object({
    result: listresourcefileread_js_1.ListResourceFileRead$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FilesListResponse$;
(function (FilesListResponse$) {
    /** @deprecated use `FilesListResponse$inboundSchema` instead. */
    FilesListResponse$.inboundSchema = exports.FilesListResponse$inboundSchema;
    /** @deprecated use `FilesListResponse$outboundSchema` instead. */
    FilesListResponse$.outboundSchema = exports.FilesListResponse$outboundSchema;
})(FilesListResponse$ || (exports.FilesListResponse$ = FilesListResponse$ = {}));
function filesListResponseToJSON(filesListResponse) {
    return JSON.stringify(exports.FilesListResponse$outboundSchema.parse(filesListResponse));
}
function filesListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FilesListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilesListResponse' from JSON`);
}
//# sourceMappingURL=fileslist.js.map