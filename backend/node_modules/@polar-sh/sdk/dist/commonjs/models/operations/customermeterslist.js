"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerMetersListResponse$ = exports.CustomerMetersListResponse$outboundSchema = exports.CustomerMetersListResponse$inboundSchema = exports.CustomerMetersListRequest$ = exports.CustomerMetersListRequest$outboundSchema = exports.CustomerMetersListRequest$inboundSchema = exports.QueryParamMeterIDFilter$ = exports.QueryParamMeterIDFilter$outboundSchema = exports.QueryParamMeterIDFilter$inboundSchema = exports.CustomerMetersListQueryParamExternalCustomerIDFilter$ = exports.CustomerMetersListQueryParamExternalCustomerIDFilter$outboundSchema = exports.CustomerMetersListQueryParamExternalCustomerIDFilter$inboundSchema = exports.CustomerMetersListQueryParamCustomerIDFilter$ = exports.CustomerMetersListQueryParamCustomerIDFilter$outboundSchema = exports.CustomerMetersListQueryParamCustomerIDFilter$inboundSchema = exports.CustomerMetersListQueryParamOrganizationIDFilter$ = exports.CustomerMetersListQueryParamOrganizationIDFilter$outboundSchema = exports.CustomerMetersListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.customerMetersListQueryParamOrganizationIDFilterToJSON = customerMetersListQueryParamOrganizationIDFilterToJSON;
exports.customerMetersListQueryParamOrganizationIDFilterFromJSON = customerMetersListQueryParamOrganizationIDFilterFromJSON;
exports.customerMetersListQueryParamCustomerIDFilterToJSON = customerMetersListQueryParamCustomerIDFilterToJSON;
exports.customerMetersListQueryParamCustomerIDFilterFromJSON = customerMetersListQueryParamCustomerIDFilterFromJSON;
exports.customerMetersListQueryParamExternalCustomerIDFilterToJSON = customerMetersListQueryParamExternalCustomerIDFilterToJSON;
exports.customerMetersListQueryParamExternalCustomerIDFilterFromJSON = customerMetersListQueryParamExternalCustomerIDFilterFromJSON;
exports.queryParamMeterIDFilterToJSON = queryParamMeterIDFilterToJSON;
exports.queryParamMeterIDFilterFromJSON = queryParamMeterIDFilterFromJSON;
exports.customerMetersListRequestToJSON = customerMetersListRequestToJSON;
exports.customerMetersListRequestFromJSON = customerMetersListRequestFromJSON;
exports.customerMetersListResponseToJSON = customerMetersListResponseToJSON;
exports.customerMetersListResponseFromJSON = customerMetersListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customermetersortproperty_js_1 = require("../components/customermetersortproperty.js");
const listresourcecustomermeter_js_1 = require("../components/listresourcecustomermeter.js");
/** @internal */
exports.CustomerMetersListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerMetersListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerMetersListQueryParamOrganizationIDFilter$;
(function (CustomerMetersListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `CustomerMetersListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    CustomerMetersListQueryParamOrganizationIDFilter$.inboundSchema = exports.CustomerMetersListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `CustomerMetersListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    CustomerMetersListQueryParamOrganizationIDFilter$.outboundSchema = exports.CustomerMetersListQueryParamOrganizationIDFilter$outboundSchema;
})(CustomerMetersListQueryParamOrganizationIDFilter$ || (exports.CustomerMetersListQueryParamOrganizationIDFilter$ = CustomerMetersListQueryParamOrganizationIDFilter$ = {}));
function customerMetersListQueryParamOrganizationIDFilterToJSON(customerMetersListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.CustomerMetersListQueryParamOrganizationIDFilter$outboundSchema.parse(customerMetersListQueryParamOrganizationIDFilter));
}
function customerMetersListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerMetersListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerMetersListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.CustomerMetersListQueryParamCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerMetersListQueryParamCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerMetersListQueryParamCustomerIDFilter$;
(function (CustomerMetersListQueryParamCustomerIDFilter$) {
    /** @deprecated use `CustomerMetersListQueryParamCustomerIDFilter$inboundSchema` instead. */
    CustomerMetersListQueryParamCustomerIDFilter$.inboundSchema = exports.CustomerMetersListQueryParamCustomerIDFilter$inboundSchema;
    /** @deprecated use `CustomerMetersListQueryParamCustomerIDFilter$outboundSchema` instead. */
    CustomerMetersListQueryParamCustomerIDFilter$.outboundSchema = exports.CustomerMetersListQueryParamCustomerIDFilter$outboundSchema;
})(CustomerMetersListQueryParamCustomerIDFilter$ || (exports.CustomerMetersListQueryParamCustomerIDFilter$ = CustomerMetersListQueryParamCustomerIDFilter$ = {}));
function customerMetersListQueryParamCustomerIDFilterToJSON(customerMetersListQueryParamCustomerIDFilter) {
    return JSON.stringify(exports.CustomerMetersListQueryParamCustomerIDFilter$outboundSchema.parse(customerMetersListQueryParamCustomerIDFilter));
}
function customerMetersListQueryParamCustomerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerMetersListQueryParamCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerMetersListQueryParamCustomerIDFilter' from JSON`);
}
/** @internal */
exports.CustomerMetersListQueryParamExternalCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerMetersListQueryParamExternalCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerMetersListQueryParamExternalCustomerIDFilter$;
(function (CustomerMetersListQueryParamExternalCustomerIDFilter$) {
    /** @deprecated use `CustomerMetersListQueryParamExternalCustomerIDFilter$inboundSchema` instead. */
    CustomerMetersListQueryParamExternalCustomerIDFilter$.inboundSchema = exports.CustomerMetersListQueryParamExternalCustomerIDFilter$inboundSchema;
    /** @deprecated use `CustomerMetersListQueryParamExternalCustomerIDFilter$outboundSchema` instead. */
    CustomerMetersListQueryParamExternalCustomerIDFilter$.outboundSchema = exports.CustomerMetersListQueryParamExternalCustomerIDFilter$outboundSchema;
})(CustomerMetersListQueryParamExternalCustomerIDFilter$ || (exports.CustomerMetersListQueryParamExternalCustomerIDFilter$ = CustomerMetersListQueryParamExternalCustomerIDFilter$ = {}));
function customerMetersListQueryParamExternalCustomerIDFilterToJSON(customerMetersListQueryParamExternalCustomerIDFilter) {
    return JSON.stringify(exports.CustomerMetersListQueryParamExternalCustomerIDFilter$outboundSchema.parse(customerMetersListQueryParamExternalCustomerIDFilter));
}
function customerMetersListQueryParamExternalCustomerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerMetersListQueryParamExternalCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerMetersListQueryParamExternalCustomerIDFilter' from JSON`);
}
/** @internal */
exports.QueryParamMeterIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamMeterIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamMeterIDFilter$;
(function (QueryParamMeterIDFilter$) {
    /** @deprecated use `QueryParamMeterIDFilter$inboundSchema` instead. */
    QueryParamMeterIDFilter$.inboundSchema = exports.QueryParamMeterIDFilter$inboundSchema;
    /** @deprecated use `QueryParamMeterIDFilter$outboundSchema` instead. */
    QueryParamMeterIDFilter$.outboundSchema = exports.QueryParamMeterIDFilter$outboundSchema;
})(QueryParamMeterIDFilter$ || (exports.QueryParamMeterIDFilter$ = QueryParamMeterIDFilter$ = {}));
function queryParamMeterIDFilterToJSON(queryParamMeterIDFilter) {
    return JSON.stringify(exports.QueryParamMeterIDFilter$outboundSchema.parse(queryParamMeterIDFilter));
}
function queryParamMeterIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamMeterIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamMeterIDFilter' from JSON`);
}
/** @internal */
exports.CustomerMetersListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    external_customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    meter_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(customermetersortproperty_js_1.CustomerMeterSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "customer_id": "customerId",
        "external_customer_id": "externalCustomerId",
        "meter_id": "meterId",
    });
});
/** @internal */
exports.CustomerMetersListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    externalCustomerId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    meterId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(customermetersortproperty_js_1.CustomerMeterSortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        customerId: "customer_id",
        externalCustomerId: "external_customer_id",
        meterId: "meter_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerMetersListRequest$;
(function (CustomerMetersListRequest$) {
    /** @deprecated use `CustomerMetersListRequest$inboundSchema` instead. */
    CustomerMetersListRequest$.inboundSchema = exports.CustomerMetersListRequest$inboundSchema;
    /** @deprecated use `CustomerMetersListRequest$outboundSchema` instead. */
    CustomerMetersListRequest$.outboundSchema = exports.CustomerMetersListRequest$outboundSchema;
})(CustomerMetersListRequest$ || (exports.CustomerMetersListRequest$ = CustomerMetersListRequest$ = {}));
function customerMetersListRequestToJSON(customerMetersListRequest) {
    return JSON.stringify(exports.CustomerMetersListRequest$outboundSchema.parse(customerMetersListRequest));
}
function customerMetersListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerMetersListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerMetersListRequest' from JSON`);
}
/** @internal */
exports.CustomerMetersListResponse$inboundSchema = z.object({
    Result: listresourcecustomermeter_js_1.ListResourceCustomerMeter$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.CustomerMetersListResponse$outboundSchema = z.object({
    result: listresourcecustomermeter_js_1.ListResourceCustomerMeter$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerMetersListResponse$;
(function (CustomerMetersListResponse$) {
    /** @deprecated use `CustomerMetersListResponse$inboundSchema` instead. */
    CustomerMetersListResponse$.inboundSchema = exports.CustomerMetersListResponse$inboundSchema;
    /** @deprecated use `CustomerMetersListResponse$outboundSchema` instead. */
    CustomerMetersListResponse$.outboundSchema = exports.CustomerMetersListResponse$outboundSchema;
})(CustomerMetersListResponse$ || (exports.CustomerMetersListResponse$ = CustomerMetersListResponse$ = {}));
function customerMetersListResponseToJSON(customerMetersListResponse) {
    return JSON.stringify(exports.CustomerMetersListResponse$outboundSchema.parse(customerMetersListResponse));
}
function customerMetersListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerMetersListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerMetersListResponse' from JSON`);
}
//# sourceMappingURL=customermeterslist.js.map