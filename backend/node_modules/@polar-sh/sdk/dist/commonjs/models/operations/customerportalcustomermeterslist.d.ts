import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { CustomerCustomerMeterSortProperty } from "../components/customercustomermetersortproperty.js";
import { ListResourceCustomerCustomerMeter, ListResourceCustomerCustomerMeter$Outbound } from "../components/listresourcecustomercustomermeter.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalCustomerMetersListSecurity = {
    customerSession: string;
};
/**
 * Filter by meter ID.
 */
export type MeterIDFilter = string | Array<string>;
export type CustomerPortalCustomerMetersListRequest = {
    /**
     * Filter by meter ID.
     */
    meterId?: string | Array<string> | null | undefined;
    /**
     * Filter by meter name.
     */
    query?: string | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<CustomerCustomerMeterSortProperty> | null | undefined;
};
export type CustomerPortalCustomerMetersListResponse = {
    result: ListResourceCustomerCustomerMeter;
};
/** @internal */
export declare const CustomerPortalCustomerMetersListSecurity$inboundSchema: z.ZodType<CustomerPortalCustomerMetersListSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomerMetersListSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalCustomerMetersListSecurity$outboundSchema: z.ZodType<CustomerPortalCustomerMetersListSecurity$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersListSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomerMetersListSecurity$ {
    /** @deprecated use `CustomerPortalCustomerMetersListSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomerMetersListSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomerMetersListSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomerMetersListSecurity$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersListSecurity>;
    /** @deprecated use `CustomerPortalCustomerMetersListSecurity$Outbound` instead. */
    type Outbound = CustomerPortalCustomerMetersListSecurity$Outbound;
}
export declare function customerPortalCustomerMetersListSecurityToJSON(customerPortalCustomerMetersListSecurity: CustomerPortalCustomerMetersListSecurity): string;
export declare function customerPortalCustomerMetersListSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomerMetersListSecurity, SDKValidationError>;
/** @internal */
export declare const MeterIDFilter$inboundSchema: z.ZodType<MeterIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type MeterIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const MeterIDFilter$outboundSchema: z.ZodType<MeterIDFilter$Outbound, z.ZodTypeDef, MeterIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MeterIDFilter$ {
    /** @deprecated use `MeterIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MeterIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `MeterIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MeterIDFilter$Outbound, z.ZodTypeDef, MeterIDFilter>;
    /** @deprecated use `MeterIDFilter$Outbound` instead. */
    type Outbound = MeterIDFilter$Outbound;
}
export declare function meterIDFilterToJSON(meterIDFilter: MeterIDFilter): string;
export declare function meterIDFilterFromJSON(jsonString: string): SafeParseResult<MeterIDFilter, SDKValidationError>;
/** @internal */
export declare const CustomerPortalCustomerMetersListRequest$inboundSchema: z.ZodType<CustomerPortalCustomerMetersListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomerMetersListRequest$Outbound = {
    meter_id?: string | Array<string> | null | undefined;
    query?: string | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const CustomerPortalCustomerMetersListRequest$outboundSchema: z.ZodType<CustomerPortalCustomerMetersListRequest$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomerMetersListRequest$ {
    /** @deprecated use `CustomerPortalCustomerMetersListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomerMetersListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomerMetersListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomerMetersListRequest$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersListRequest>;
    /** @deprecated use `CustomerPortalCustomerMetersListRequest$Outbound` instead. */
    type Outbound = CustomerPortalCustomerMetersListRequest$Outbound;
}
export declare function customerPortalCustomerMetersListRequestToJSON(customerPortalCustomerMetersListRequest: CustomerPortalCustomerMetersListRequest): string;
export declare function customerPortalCustomerMetersListRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomerMetersListRequest, SDKValidationError>;
/** @internal */
export declare const CustomerPortalCustomerMetersListResponse$inboundSchema: z.ZodType<CustomerPortalCustomerMetersListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalCustomerMetersListResponse$Outbound = {
    Result: ListResourceCustomerCustomerMeter$Outbound;
};
/** @internal */
export declare const CustomerPortalCustomerMetersListResponse$outboundSchema: z.ZodType<CustomerPortalCustomerMetersListResponse$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalCustomerMetersListResponse$ {
    /** @deprecated use `CustomerPortalCustomerMetersListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalCustomerMetersListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalCustomerMetersListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalCustomerMetersListResponse$Outbound, z.ZodTypeDef, CustomerPortalCustomerMetersListResponse>;
    /** @deprecated use `CustomerPortalCustomerMetersListResponse$Outbound` instead. */
    type Outbound = CustomerPortalCustomerMetersListResponse$Outbound;
}
export declare function customerPortalCustomerMetersListResponseToJSON(customerPortalCustomerMetersListResponse: CustomerPortalCustomerMetersListResponse): string;
export declare function customerPortalCustomerMetersListResponseFromJSON(jsonString: string): SafeParseResult<CustomerPortalCustomerMetersListResponse, SDKValidationError>;
//# sourceMappingURL=customerportalcustomermeterslist.d.ts.map