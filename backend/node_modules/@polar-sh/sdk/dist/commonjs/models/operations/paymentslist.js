"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentsListResponse$ = exports.PaymentsListResponse$outboundSchema = exports.PaymentsListResponse$inboundSchema = exports.PaymentsListRequest$ = exports.PaymentsListRequest$outboundSchema = exports.PaymentsListRequest$inboundSchema = exports.CustomerEmailFilter$ = exports.CustomerEmailFilter$outboundSchema = exports.CustomerEmailFilter$inboundSchema = exports.MethodFilter$ = exports.MethodFilter$outboundSchema = exports.MethodFilter$inboundSchema = exports.QueryParamStatusFilter$ = exports.QueryParamStatusFilter$outboundSchema = exports.QueryParamStatusFilter$inboundSchema = exports.PaymentsListQueryParamOrderIDFilter$ = exports.PaymentsListQueryParamOrderIDFilter$outboundSchema = exports.PaymentsListQueryParamOrderIDFilter$inboundSchema = exports.PaymentsListQueryParamCheckoutIDFilter$ = exports.PaymentsListQueryParamCheckoutIDFilter$outboundSchema = exports.PaymentsListQueryParamCheckoutIDFilter$inboundSchema = exports.PaymentsListQueryParamOrganizationIDFilter$ = exports.PaymentsListQueryParamOrganizationIDFilter$outboundSchema = exports.PaymentsListQueryParamOrganizationIDFilter$inboundSchema = void 0;
exports.paymentsListQueryParamOrganizationIDFilterToJSON = paymentsListQueryParamOrganizationIDFilterToJSON;
exports.paymentsListQueryParamOrganizationIDFilterFromJSON = paymentsListQueryParamOrganizationIDFilterFromJSON;
exports.paymentsListQueryParamCheckoutIDFilterToJSON = paymentsListQueryParamCheckoutIDFilterToJSON;
exports.paymentsListQueryParamCheckoutIDFilterFromJSON = paymentsListQueryParamCheckoutIDFilterFromJSON;
exports.paymentsListQueryParamOrderIDFilterToJSON = paymentsListQueryParamOrderIDFilterToJSON;
exports.paymentsListQueryParamOrderIDFilterFromJSON = paymentsListQueryParamOrderIDFilterFromJSON;
exports.queryParamStatusFilterToJSON = queryParamStatusFilterToJSON;
exports.queryParamStatusFilterFromJSON = queryParamStatusFilterFromJSON;
exports.methodFilterToJSON = methodFilterToJSON;
exports.methodFilterFromJSON = methodFilterFromJSON;
exports.customerEmailFilterToJSON = customerEmailFilterToJSON;
exports.customerEmailFilterFromJSON = customerEmailFilterFromJSON;
exports.paymentsListRequestToJSON = paymentsListRequestToJSON;
exports.paymentsListRequestFromJSON = paymentsListRequestFromJSON;
exports.paymentsListResponseToJSON = paymentsListResponseToJSON;
exports.paymentsListResponseFromJSON = paymentsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresource_js_1 = require("../components/listresource.js");
const paymentsortproperty_js_1 = require("../components/paymentsortproperty.js");
const paymentstatus_js_1 = require("../components/paymentstatus.js");
/** @internal */
exports.PaymentsListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.PaymentsListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PaymentsListQueryParamOrganizationIDFilter$;
(function (PaymentsListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `PaymentsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    PaymentsListQueryParamOrganizationIDFilter$.inboundSchema = exports.PaymentsListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `PaymentsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    PaymentsListQueryParamOrganizationIDFilter$.outboundSchema = exports.PaymentsListQueryParamOrganizationIDFilter$outboundSchema;
})(PaymentsListQueryParamOrganizationIDFilter$ || (exports.PaymentsListQueryParamOrganizationIDFilter$ = PaymentsListQueryParamOrganizationIDFilter$ = {}));
function paymentsListQueryParamOrganizationIDFilterToJSON(paymentsListQueryParamOrganizationIDFilter) {
    return JSON.stringify(exports.PaymentsListQueryParamOrganizationIDFilter$outboundSchema.parse(paymentsListQueryParamOrganizationIDFilter));
}
function paymentsListQueryParamOrganizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PaymentsListQueryParamOrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentsListQueryParamOrganizationIDFilter' from JSON`);
}
/** @internal */
exports.PaymentsListQueryParamCheckoutIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.PaymentsListQueryParamCheckoutIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PaymentsListQueryParamCheckoutIDFilter$;
(function (PaymentsListQueryParamCheckoutIDFilter$) {
    /** @deprecated use `PaymentsListQueryParamCheckoutIDFilter$inboundSchema` instead. */
    PaymentsListQueryParamCheckoutIDFilter$.inboundSchema = exports.PaymentsListQueryParamCheckoutIDFilter$inboundSchema;
    /** @deprecated use `PaymentsListQueryParamCheckoutIDFilter$outboundSchema` instead. */
    PaymentsListQueryParamCheckoutIDFilter$.outboundSchema = exports.PaymentsListQueryParamCheckoutIDFilter$outboundSchema;
})(PaymentsListQueryParamCheckoutIDFilter$ || (exports.PaymentsListQueryParamCheckoutIDFilter$ = PaymentsListQueryParamCheckoutIDFilter$ = {}));
function paymentsListQueryParamCheckoutIDFilterToJSON(paymentsListQueryParamCheckoutIDFilter) {
    return JSON.stringify(exports.PaymentsListQueryParamCheckoutIDFilter$outboundSchema.parse(paymentsListQueryParamCheckoutIDFilter));
}
function paymentsListQueryParamCheckoutIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PaymentsListQueryParamCheckoutIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentsListQueryParamCheckoutIDFilter' from JSON`);
}
/** @internal */
exports.PaymentsListQueryParamOrderIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.PaymentsListQueryParamOrderIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PaymentsListQueryParamOrderIDFilter$;
(function (PaymentsListQueryParamOrderIDFilter$) {
    /** @deprecated use `PaymentsListQueryParamOrderIDFilter$inboundSchema` instead. */
    PaymentsListQueryParamOrderIDFilter$.inboundSchema = exports.PaymentsListQueryParamOrderIDFilter$inboundSchema;
    /** @deprecated use `PaymentsListQueryParamOrderIDFilter$outboundSchema` instead. */
    PaymentsListQueryParamOrderIDFilter$.outboundSchema = exports.PaymentsListQueryParamOrderIDFilter$outboundSchema;
})(PaymentsListQueryParamOrderIDFilter$ || (exports.PaymentsListQueryParamOrderIDFilter$ = PaymentsListQueryParamOrderIDFilter$ = {}));
function paymentsListQueryParamOrderIDFilterToJSON(paymentsListQueryParamOrderIDFilter) {
    return JSON.stringify(exports.PaymentsListQueryParamOrderIDFilter$outboundSchema.parse(paymentsListQueryParamOrderIDFilter));
}
function paymentsListQueryParamOrderIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PaymentsListQueryParamOrderIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentsListQueryParamOrderIDFilter' from JSON`);
}
/** @internal */
exports.QueryParamStatusFilter$inboundSchema = z.union([
    paymentstatus_js_1.PaymentStatus$inboundSchema,
    z.array(paymentstatus_js_1.PaymentStatus$inboundSchema),
]);
/** @internal */
exports.QueryParamStatusFilter$outboundSchema = z.union([
    paymentstatus_js_1.PaymentStatus$outboundSchema,
    z.array(paymentstatus_js_1.PaymentStatus$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamStatusFilter$;
(function (QueryParamStatusFilter$) {
    /** @deprecated use `QueryParamStatusFilter$inboundSchema` instead. */
    QueryParamStatusFilter$.inboundSchema = exports.QueryParamStatusFilter$inboundSchema;
    /** @deprecated use `QueryParamStatusFilter$outboundSchema` instead. */
    QueryParamStatusFilter$.outboundSchema = exports.QueryParamStatusFilter$outboundSchema;
})(QueryParamStatusFilter$ || (exports.QueryParamStatusFilter$ = QueryParamStatusFilter$ = {}));
function queryParamStatusFilterToJSON(queryParamStatusFilter) {
    return JSON.stringify(exports.QueryParamStatusFilter$outboundSchema.parse(queryParamStatusFilter));
}
function queryParamStatusFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamStatusFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamStatusFilter' from JSON`);
}
/** @internal */
exports.MethodFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.MethodFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var MethodFilter$;
(function (MethodFilter$) {
    /** @deprecated use `MethodFilter$inboundSchema` instead. */
    MethodFilter$.inboundSchema = exports.MethodFilter$inboundSchema;
    /** @deprecated use `MethodFilter$outboundSchema` instead. */
    MethodFilter$.outboundSchema = exports.MethodFilter$outboundSchema;
})(MethodFilter$ || (exports.MethodFilter$ = MethodFilter$ = {}));
function methodFilterToJSON(methodFilter) {
    return JSON.stringify(exports.MethodFilter$outboundSchema.parse(methodFilter));
}
function methodFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.MethodFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MethodFilter' from JSON`);
}
/** @internal */
exports.CustomerEmailFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerEmailFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerEmailFilter$;
(function (CustomerEmailFilter$) {
    /** @deprecated use `CustomerEmailFilter$inboundSchema` instead. */
    CustomerEmailFilter$.inboundSchema = exports.CustomerEmailFilter$inboundSchema;
    /** @deprecated use `CustomerEmailFilter$outboundSchema` instead. */
    CustomerEmailFilter$.outboundSchema = exports.CustomerEmailFilter$outboundSchema;
})(CustomerEmailFilter$ || (exports.CustomerEmailFilter$ = CustomerEmailFilter$ = {}));
function customerEmailFilterToJSON(customerEmailFilter) {
    return JSON.stringify(exports.CustomerEmailFilter$outboundSchema.parse(customerEmailFilter));
}
function customerEmailFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerEmailFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerEmailFilter' from JSON`);
}
/** @internal */
exports.PaymentsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkout_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    order_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    status: z.nullable(z.union([
        paymentstatus_js_1.PaymentStatus$inboundSchema,
        z.array(paymentstatus_js_1.PaymentStatus$inboundSchema),
    ])).optional(),
    method: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    customer_email: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(paymentsortproperty_js_1.PaymentSortProperty$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "checkout_id": "checkoutId",
        "order_id": "orderId",
        "customer_email": "customerEmail",
    });
});
/** @internal */
exports.PaymentsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    checkoutId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    orderId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    status: z.nullable(z.union([
        paymentstatus_js_1.PaymentStatus$outboundSchema,
        z.array(paymentstatus_js_1.PaymentStatus$outboundSchema),
    ])).optional(),
    method: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    customerEmail: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(paymentsortproperty_js_1.PaymentSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        checkoutId: "checkout_id",
        orderId: "order_id",
        customerEmail: "customer_email",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PaymentsListRequest$;
(function (PaymentsListRequest$) {
    /** @deprecated use `PaymentsListRequest$inboundSchema` instead. */
    PaymentsListRequest$.inboundSchema = exports.PaymentsListRequest$inboundSchema;
    /** @deprecated use `PaymentsListRequest$outboundSchema` instead. */
    PaymentsListRequest$.outboundSchema = exports.PaymentsListRequest$outboundSchema;
})(PaymentsListRequest$ || (exports.PaymentsListRequest$ = PaymentsListRequest$ = {}));
function paymentsListRequestToJSON(paymentsListRequest) {
    return JSON.stringify(exports.PaymentsListRequest$outboundSchema.parse(paymentsListRequest));
}
function paymentsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PaymentsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentsListRequest' from JSON`);
}
/** @internal */
exports.PaymentsListResponse$inboundSchema = z.object({
    Result: listresource_js_1.ListResource$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.PaymentsListResponse$outboundSchema = z.object({
    result: listresource_js_1.ListResource$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PaymentsListResponse$;
(function (PaymentsListResponse$) {
    /** @deprecated use `PaymentsListResponse$inboundSchema` instead. */
    PaymentsListResponse$.inboundSchema = exports.PaymentsListResponse$inboundSchema;
    /** @deprecated use `PaymentsListResponse$outboundSchema` instead. */
    PaymentsListResponse$.outboundSchema = exports.PaymentsListResponse$outboundSchema;
})(PaymentsListResponse$ || (exports.PaymentsListResponse$ = PaymentsListResponse$ = {}));
function paymentsListResponseToJSON(paymentsListResponse) {
    return JSON.stringify(exports.PaymentsListResponse$outboundSchema.parse(paymentsListResponse));
}
function paymentsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PaymentsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PaymentsListResponse' from JSON`);
}
//# sourceMappingURL=paymentslist.js.map