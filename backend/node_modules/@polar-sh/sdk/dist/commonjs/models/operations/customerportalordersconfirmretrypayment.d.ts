import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { CustomerOrderConfirmPayment, CustomerOrderConfirmPayment$Outbound } from "../components/customerorderconfirmpayment.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalOrdersConfirmRetryPaymentSecurity = {
    customerSession: string;
};
export type CustomerPortalOrdersConfirmRetryPaymentRequest = {
    /**
     * The order ID.
     */
    id: string;
    customerOrderConfirmPayment: CustomerOrderConfirmPayment;
};
/** @internal */
export declare const CustomerPortalOrdersConfirmRetryPaymentSecurity$inboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersConfirmRetryPaymentSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalOrdersConfirmRetryPaymentSecurity$outboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersConfirmRetryPaymentSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersConfirmRetryPaymentSecurity$ {
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersConfirmRetryPaymentSecurity>;
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentSecurity$Outbound` instead. */
    type Outbound = CustomerPortalOrdersConfirmRetryPaymentSecurity$Outbound;
}
export declare function customerPortalOrdersConfirmRetryPaymentSecurityToJSON(customerPortalOrdersConfirmRetryPaymentSecurity: CustomerPortalOrdersConfirmRetryPaymentSecurity): string;
export declare function customerPortalOrdersConfirmRetryPaymentSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersConfirmRetryPaymentSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersConfirmRetryPaymentRequest$inboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersConfirmRetryPaymentRequest$Outbound = {
    id: string;
    CustomerOrderConfirmPayment: CustomerOrderConfirmPayment$Outbound;
};
/** @internal */
export declare const CustomerPortalOrdersConfirmRetryPaymentRequest$outboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersConfirmRetryPaymentRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersConfirmRetryPaymentRequest$ {
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersConfirmRetryPaymentRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersConfirmRetryPaymentRequest>;
    /** @deprecated use `CustomerPortalOrdersConfirmRetryPaymentRequest$Outbound` instead. */
    type Outbound = CustomerPortalOrdersConfirmRetryPaymentRequest$Outbound;
}
export declare function customerPortalOrdersConfirmRetryPaymentRequestToJSON(customerPortalOrdersConfirmRetryPaymentRequest: CustomerPortalOrdersConfirmRetryPaymentRequest): string;
export declare function customerPortalOrdersConfirmRetryPaymentRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersConfirmRetryPaymentRequest, SDKValidationError>;
//# sourceMappingURL=customerportalordersconfirmretrypayment.d.ts.map