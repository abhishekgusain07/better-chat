import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { CustomerOrderUpdate, CustomerOrderUpdate$Outbound } from "../components/customerorderupdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerPortalOrdersUpdateSecurity = {
    customerSession: string;
};
export type CustomerPortalOrdersUpdateRequest = {
    /**
     * The order ID.
     */
    id: string;
    customerOrderUpdate: CustomerOrderUpdate;
};
/** @internal */
export declare const CustomerPortalOrdersUpdateSecurity$inboundSchema: z.ZodType<CustomerPortalOrdersUpdateSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersUpdateSecurity$Outbound = {
    customer_session: string;
};
/** @internal */
export declare const CustomerPortalOrdersUpdateSecurity$outboundSchema: z.ZodType<CustomerPortalOrdersUpdateSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersUpdateSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersUpdateSecurity$ {
    /** @deprecated use `CustomerPortalOrdersUpdateSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersUpdateSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersUpdateSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersUpdateSecurity$Outbound, z.ZodTypeDef, CustomerPortalOrdersUpdateSecurity>;
    /** @deprecated use `CustomerPortalOrdersUpdateSecurity$Outbound` instead. */
    type Outbound = CustomerPortalOrdersUpdateSecurity$Outbound;
}
export declare function customerPortalOrdersUpdateSecurityToJSON(customerPortalOrdersUpdateSecurity: CustomerPortalOrdersUpdateSecurity): string;
export declare function customerPortalOrdersUpdateSecurityFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersUpdateSecurity, SDKValidationError>;
/** @internal */
export declare const CustomerPortalOrdersUpdateRequest$inboundSchema: z.ZodType<CustomerPortalOrdersUpdateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerPortalOrdersUpdateRequest$Outbound = {
    id: string;
    CustomerOrderUpdate: CustomerOrderUpdate$Outbound;
};
/** @internal */
export declare const CustomerPortalOrdersUpdateRequest$outboundSchema: z.ZodType<CustomerPortalOrdersUpdateRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersUpdateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerPortalOrdersUpdateRequest$ {
    /** @deprecated use `CustomerPortalOrdersUpdateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerPortalOrdersUpdateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerPortalOrdersUpdateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerPortalOrdersUpdateRequest$Outbound, z.ZodTypeDef, CustomerPortalOrdersUpdateRequest>;
    /** @deprecated use `CustomerPortalOrdersUpdateRequest$Outbound` instead. */
    type Outbound = CustomerPortalOrdersUpdateRequest$Outbound;
}
export declare function customerPortalOrdersUpdateRequestToJSON(customerPortalOrdersUpdateRequest: CustomerPortalOrdersUpdateRequest): string;
export declare function customerPortalOrdersUpdateRequestFromJSON(jsonString: string): SafeParseResult<CustomerPortalOrdersUpdateRequest, SDKValidationError>;
//# sourceMappingURL=customerportalordersupdate.d.ts.map