"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionsListResponse$ = exports.SubscriptionsListResponse$outboundSchema = exports.SubscriptionsListResponse$inboundSchema = exports.SubscriptionsListRequest$ = exports.SubscriptionsListRequest$outboundSchema = exports.SubscriptionsListRequest$inboundSchema = exports.DiscountIDFilter$ = exports.DiscountIDFilter$outboundSchema = exports.DiscountIDFilter$inboundSchema = exports.ExternalCustomerIDFilter$ = exports.ExternalCustomerIDFilter$outboundSchema = exports.ExternalCustomerIDFilter$inboundSchema = exports.CustomerIDFilter$ = exports.CustomerIDFilter$outboundSchema = exports.CustomerIDFilter$inboundSchema = exports.ProductIDFilter$ = exports.ProductIDFilter$outboundSchema = exports.ProductIDFilter$inboundSchema = exports.OrganizationIDFilter$ = exports.OrganizationIDFilter$outboundSchema = exports.OrganizationIDFilter$inboundSchema = void 0;
exports.organizationIDFilterToJSON = organizationIDFilterToJSON;
exports.organizationIDFilterFromJSON = organizationIDFilterFromJSON;
exports.productIDFilterToJSON = productIDFilterToJSON;
exports.productIDFilterFromJSON = productIDFilterFromJSON;
exports.customerIDFilterToJSON = customerIDFilterToJSON;
exports.customerIDFilterFromJSON = customerIDFilterFromJSON;
exports.externalCustomerIDFilterToJSON = externalCustomerIDFilterToJSON;
exports.externalCustomerIDFilterFromJSON = externalCustomerIDFilterFromJSON;
exports.discountIDFilterToJSON = discountIDFilterToJSON;
exports.discountIDFilterFromJSON = discountIDFilterFromJSON;
exports.subscriptionsListRequestToJSON = subscriptionsListRequestToJSON;
exports.subscriptionsListRequestFromJSON = subscriptionsListRequestFromJSON;
exports.subscriptionsListResponseToJSON = subscriptionsListResponseToJSON;
exports.subscriptionsListResponseFromJSON = subscriptionsListResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const listresourcesubscription_js_1 = require("../components/listresourcesubscription.js");
const subscriptionslist_js_1 = require("../components/subscriptionslist.js");
const subscriptionsortproperty_js_1 = require("../components/subscriptionsortproperty.js");
/** @internal */
exports.OrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationIDFilter$;
(function (OrganizationIDFilter$) {
    /** @deprecated use `OrganizationIDFilter$inboundSchema` instead. */
    OrganizationIDFilter$.inboundSchema = exports.OrganizationIDFilter$inboundSchema;
    /** @deprecated use `OrganizationIDFilter$outboundSchema` instead. */
    OrganizationIDFilter$.outboundSchema = exports.OrganizationIDFilter$outboundSchema;
})(OrganizationIDFilter$ || (exports.OrganizationIDFilter$ = OrganizationIDFilter$ = {}));
function organizationIDFilterToJSON(organizationIDFilter) {
    return JSON.stringify(exports.OrganizationIDFilter$outboundSchema.parse(organizationIDFilter));
}
function organizationIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrganizationIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationIDFilter' from JSON`);
}
/** @internal */
exports.ProductIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.ProductIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ProductIDFilter$;
(function (ProductIDFilter$) {
    /** @deprecated use `ProductIDFilter$inboundSchema` instead. */
    ProductIDFilter$.inboundSchema = exports.ProductIDFilter$inboundSchema;
    /** @deprecated use `ProductIDFilter$outboundSchema` instead. */
    ProductIDFilter$.outboundSchema = exports.ProductIDFilter$outboundSchema;
})(ProductIDFilter$ || (exports.ProductIDFilter$ = ProductIDFilter$ = {}));
function productIDFilterToJSON(productIDFilter) {
    return JSON.stringify(exports.ProductIDFilter$outboundSchema.parse(productIDFilter));
}
function productIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ProductIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductIDFilter' from JSON`);
}
/** @internal */
exports.CustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.CustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerIDFilter$;
(function (CustomerIDFilter$) {
    /** @deprecated use `CustomerIDFilter$inboundSchema` instead. */
    CustomerIDFilter$.inboundSchema = exports.CustomerIDFilter$inboundSchema;
    /** @deprecated use `CustomerIDFilter$outboundSchema` instead. */
    CustomerIDFilter$.outboundSchema = exports.CustomerIDFilter$outboundSchema;
})(CustomerIDFilter$ || (exports.CustomerIDFilter$ = CustomerIDFilter$ = {}));
function customerIDFilterToJSON(customerIDFilter) {
    return JSON.stringify(exports.CustomerIDFilter$outboundSchema.parse(customerIDFilter));
}
function customerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerIDFilter' from JSON`);
}
/** @internal */
exports.ExternalCustomerIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.ExternalCustomerIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ExternalCustomerIDFilter$;
(function (ExternalCustomerIDFilter$) {
    /** @deprecated use `ExternalCustomerIDFilter$inboundSchema` instead. */
    ExternalCustomerIDFilter$.inboundSchema = exports.ExternalCustomerIDFilter$inboundSchema;
    /** @deprecated use `ExternalCustomerIDFilter$outboundSchema` instead. */
    ExternalCustomerIDFilter$.outboundSchema = exports.ExternalCustomerIDFilter$outboundSchema;
})(ExternalCustomerIDFilter$ || (exports.ExternalCustomerIDFilter$ = ExternalCustomerIDFilter$ = {}));
function externalCustomerIDFilterToJSON(externalCustomerIDFilter) {
    return JSON.stringify(exports.ExternalCustomerIDFilter$outboundSchema.parse(externalCustomerIDFilter));
}
function externalCustomerIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ExternalCustomerIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalCustomerIDFilter' from JSON`);
}
/** @internal */
exports.DiscountIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.DiscountIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DiscountIDFilter$;
(function (DiscountIDFilter$) {
    /** @deprecated use `DiscountIDFilter$inboundSchema` instead. */
    DiscountIDFilter$.inboundSchema = exports.DiscountIDFilter$inboundSchema;
    /** @deprecated use `DiscountIDFilter$outboundSchema` instead. */
    DiscountIDFilter$.outboundSchema = exports.DiscountIDFilter$outboundSchema;
})(DiscountIDFilter$ || (exports.DiscountIDFilter$ = DiscountIDFilter$ = {}));
function discountIDFilterToJSON(discountIDFilter) {
    return JSON.stringify(exports.DiscountIDFilter$outboundSchema.parse(discountIDFilter));
}
function discountIDFilterFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DiscountIDFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DiscountIDFilter' from JSON`);
}
/** @internal */
exports.SubscriptionsListRequest$inboundSchema = z.object({
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    external_customer_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    discount_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    active: z.nullable(z.boolean()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(subscriptionsortproperty_js_1.SubscriptionSortProperty$inboundSchema))
        .optional(),
    metadata: z.nullable(z.record(z.lazy(() => subscriptionslist_js_1.MetadataQuery$inboundSchema)))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "product_id": "productId",
        "customer_id": "customerId",
        "external_customer_id": "externalCustomerId",
        "discount_id": "discountId",
    });
});
/** @internal */
exports.SubscriptionsListRequest$outboundSchema = z.object({
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    customerId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    externalCustomerId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    discountId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    active: z.nullable(z.boolean()).optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(subscriptionsortproperty_js_1.SubscriptionSortProperty$outboundSchema))
        .optional(),
    metadata: z.nullable(z.record(z.lazy(() => subscriptionslist_js_1.MetadataQuery$outboundSchema)))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        productId: "product_id",
        customerId: "customer_id",
        externalCustomerId: "external_customer_id",
        discountId: "discount_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionsListRequest$;
(function (SubscriptionsListRequest$) {
    /** @deprecated use `SubscriptionsListRequest$inboundSchema` instead. */
    SubscriptionsListRequest$.inboundSchema = exports.SubscriptionsListRequest$inboundSchema;
    /** @deprecated use `SubscriptionsListRequest$outboundSchema` instead. */
    SubscriptionsListRequest$.outboundSchema = exports.SubscriptionsListRequest$outboundSchema;
})(SubscriptionsListRequest$ || (exports.SubscriptionsListRequest$ = SubscriptionsListRequest$ = {}));
function subscriptionsListRequestToJSON(subscriptionsListRequest) {
    return JSON.stringify(exports.SubscriptionsListRequest$outboundSchema.parse(subscriptionsListRequest));
}
function subscriptionsListRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionsListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsListRequest' from JSON`);
}
/** @internal */
exports.SubscriptionsListResponse$inboundSchema = z.object({
    Result: listresourcesubscription_js_1.ListResourceSubscription$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.SubscriptionsListResponse$outboundSchema = z.object({
    result: listresourcesubscription_js_1.ListResourceSubscription$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionsListResponse$;
(function (SubscriptionsListResponse$) {
    /** @deprecated use `SubscriptionsListResponse$inboundSchema` instead. */
    SubscriptionsListResponse$.inboundSchema = exports.SubscriptionsListResponse$inboundSchema;
    /** @deprecated use `SubscriptionsListResponse$outboundSchema` instead. */
    SubscriptionsListResponse$.outboundSchema = exports.SubscriptionsListResponse$outboundSchema;
})(SubscriptionsListResponse$ || (exports.SubscriptionsListResponse$ = SubscriptionsListResponse$ = {}));
function subscriptionsListResponseToJSON(subscriptionsListResponse) {
    return JSON.stringify(exports.SubscriptionsListResponse$outboundSchema.parse(subscriptionsListResponse));
}
function subscriptionsListResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SubscriptionsListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriptionsListResponse' from JSON`);
}
//# sourceMappingURL=subscriptionslist.js.map