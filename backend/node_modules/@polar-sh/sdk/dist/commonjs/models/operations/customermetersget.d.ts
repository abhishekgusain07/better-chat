import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CustomerMetersGetRequest = {
    /**
     * The customer meter ID.
     */
    id: string;
};
/** @internal */
export declare const CustomerMetersGetRequest$inboundSchema: z.ZodType<CustomerMetersGetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerMetersGetRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const CustomerMetersGetRequest$outboundSchema: z.ZodType<CustomerMetersGetRequest$Outbound, z.ZodTypeDef, CustomerMetersGetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerMetersGetRequest$ {
    /** @deprecated use `CustomerMetersGetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerMetersGetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerMetersGetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerMetersGetRequest$Outbound, z.ZodTypeDef, CustomerMetersGetRequest>;
    /** @deprecated use `CustomerMetersGetRequest$Outbound` instead. */
    type Outbound = CustomerMetersGetRequest$Outbound;
}
export declare function customerMetersGetRequestToJSON(customerMetersGetRequest: CustomerMetersGetRequest): string;
export declare function customerMetersGetRequestFromJSON(jsonString: string): SafeParseResult<CustomerMetersGetRequest, SDKValidationError>;
//# sourceMappingURL=customermetersget.d.ts.map